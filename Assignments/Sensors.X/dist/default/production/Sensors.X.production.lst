

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 15 16:12:14 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text5,global,reloc=4,class=CODE,space=0,delta=1
    15                           	psect	ivt0x3008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   003FE0                     bsr             equ	16352
    56   003FE9                     fsr0            equ	16361
    57   003FEA                     fsr0h           equ	16362
    58   003FE9                     fsr0l           equ	16361
    59   003FE1                     fsr1            equ	16353
    60   003FE2                     fsr1h           equ	16354
    61   003FE1                     fsr1l           equ	16353
    62   003FD9                     fsr2            equ	16345
    63   003FDA                     fsr2h           equ	16346
    64   003FD9                     fsr2l           equ	16345
    65   003FEF                     indf0           equ	16367
    66   003FE7                     indf1           equ	16359
    67   003FDF                     indf2           equ	16351
    68   003FD2                     intcon          equ	16338
    69   0039E5                     nvmcon          equ	14821
    70   003FF9                     pcl             equ	16377
    71   003FFA                     pclath          equ	16378
    72   003FFB                     pclatu          equ	16379
    73   003FEB                     plusw0          equ	16363
    74   003FE3                     plusw1          equ	16355
    75   003FDB                     plusw2          equ	16347
    76   003FED                     postdec0        equ	16365
    77   003FE5                     postdec1        equ	16357
    78   003FDD                     postdec2        equ	16349
    79   003FEE                     postinc0        equ	16366
    80   003FE6                     postinc1        equ	16358
    81   003FDE                     postinc2        equ	16350
    82   003FEC                     preinc0         equ	16364
    83   003FE4                     preinc1         equ	16356
    84   003FDC                     preinc2         equ	16348
    85   003FF3                     prod            equ	16371
    86   003FF4                     prodh           equ	16372
    87   003FF3                     prodl           equ	16371
    88   003FD8                     status          equ	16344
    89   003FF5                     tablat          equ	16373
    90   003FF6                     tblptr          equ	16374
    91   003FF7                     tblptrh         equ	16375
    92   003FF6                     tblptrl         equ	16374
    93   003FF8                     tblptru         equ	16376
    94   003FFD                     tosl            equ	16381
    95   003FE8                     wreg            equ	16360
    96   003880                     STATUS_CSHAD    equ	14464	;# 
    97   003881                     WREG_CSHAD      equ	14465	;# 
    98   003882                     BSR_CSHAD       equ	14466	;# 
    99   003883                     SHADCON         equ	14467	;# 
   100   003884                     STATUS_SHAD     equ	14468	;# 
   101   003885                     WREG_SHAD       equ	14469	;# 
   102   003886                     BSR_SHAD        equ	14470	;# 
   103   003887                     PCLATH_SHAD     equ	14471	;# 
   104   003888                     PCLATU_SHAD     equ	14472	;# 
   105   003889                     FSR0SH          equ	14473	;# 
   106   003889                     FSR0L_SHAD      equ	14473	;# 
   107   00388A                     FSR0H_SHAD      equ	14474	;# 
   108   00388B                     FSR1SH          equ	14475	;# 
   109   00388B                     FSR1L_SHAD      equ	14475	;# 
   110   00388C                     FSR1H_SHAD      equ	14476	;# 
   111   00388D                     FSR2SH          equ	14477	;# 
   112   00388D                     FSR2L_SHAD      equ	14477	;# 
   113   00388E                     FSR2H_SHAD      equ	14478	;# 
   114   00388F                     PRODSH          equ	14479	;# 
   115   00388F                     PRODL_SHAD      equ	14479	;# 
   116   003890                     PRODH_SHAD      equ	14480	;# 
   117   00389D                     IVTADL          equ	14493	;# 
   118   00389E                     IVTADH          equ	14494	;# 
   119   00389F                     IVTADU          equ	14495	;# 
   120   00395B                     WDTCON0         equ	14683	;# 
   121   00395C                     WDTCON1         equ	14684	;# 
   122   00395D                     WDTPSL          equ	14685	;# 
   123   00395E                     WDTPSH          equ	14686	;# 
   124   00395F                     WDTTMR          equ	14687	;# 
   125   003960                     CRCDATA         equ	14688	;# 
   126   003960                     CRCDATL         equ	14688	;# 
   127   003961                     CRCDATH         equ	14689	;# 
   128   003962                     CRCACC          equ	14690	;# 
   129   003962                     CRCACCL         equ	14690	;# 
   130   003963                     CRCACCH         equ	14691	;# 
   131   003964                     CRCSHFT         equ	14692	;# 
   132   003964                     CRCSHIFTL       equ	14692	;# 
   133   003965                     CRCSHIFTH       equ	14693	;# 
   134   003966                     CRCXOR          equ	14694	;# 
   135   003966                     CRCXORL         equ	14694	;# 
   136   003967                     CRCXORH         equ	14695	;# 
   137   003968                     CRCCON0         equ	14696	;# 
   138   003969                     CRCCON1         equ	14697	;# 
   139   003976                     SCANLADR        equ	14710	;# 
   140   003976                     SCANLADRL       equ	14710	;# 
   141   003977                     SCANLADRH       equ	14711	;# 
   142   003978                     SCANLADRU       equ	14712	;# 
   143   003979                     SCANHADR        equ	14713	;# 
   144   003979                     SCANHADRL       equ	14713	;# 
   145   00397A                     SCANHADRH       equ	14714	;# 
   146   00397B                     SCANHADRU       equ	14715	;# 
   147   00397C                     SCANCON0        equ	14716	;# 
   148   00397D                     SCANTRIG        equ	14717	;# 
   149   003980                     IPR0            equ	14720	;# 
   150   003981                     IPR1            equ	14721	;# 
   151   003982                     IPR2            equ	14722	;# 
   152   003983                     IPR3            equ	14723	;# 
   153   003984                     IPR4            equ	14724	;# 
   154   003985                     IPR5            equ	14725	;# 
   155   003986                     IPR6            equ	14726	;# 
   156   003987                     IPR7            equ	14727	;# 
   157   003988                     IPR8            equ	14728	;# 
   158   003989                     IPR9            equ	14729	;# 
   159   00398A                     IPR10           equ	14730	;# 
   160   003990                     PIE0            equ	14736	;# 
   161   003991                     PIE1            equ	14737	;# 
   162   003992                     PIE2            equ	14738	;# 
   163   003993                     PIE3            equ	14739	;# 
   164   003994                     PIE4            equ	14740	;# 
   165   003995                     PIE5            equ	14741	;# 
   166   003996                     PIE6            equ	14742	;# 
   167   003997                     PIE7            equ	14743	;# 
   168   003998                     PIE8            equ	14744	;# 
   169   003999                     PIE9            equ	14745	;# 
   170   00399A                     PIE10           equ	14746	;# 
   171   0039A0                     PIR0            equ	14752	;# 
   172   0039A1                     PIR1            equ	14753	;# 
   173   0039A2                     PIR2            equ	14754	;# 
   174   0039A3                     PIR3            equ	14755	;# 
   175   0039A4                     PIR4            equ	14756	;# 
   176   0039A5                     PIR5            equ	14757	;# 
   177   0039A6                     PIR6            equ	14758	;# 
   178   0039A7                     PIR7            equ	14759	;# 
   179   0039A8                     PIR8            equ	14760	;# 
   180   0039A9                     PIR9            equ	14761	;# 
   181   0039AA                     PIR10           equ	14762	;# 
   182   0039C0                     PMD0            equ	14784	;# 
   183   0039C1                     PMD1            equ	14785	;# 
   184   0039C2                     PMD2            equ	14786	;# 
   185   0039C3                     PMD3            equ	14787	;# 
   186   0039C4                     PMD4            equ	14788	;# 
   187   0039C5                     PMD5            equ	14789	;# 
   188   0039C6                     PMD6            equ	14790	;# 
   189   0039C7                     PMD7            equ	14791	;# 
   190   0039D0                     BORCON          equ	14800	;# 
   191   0039D1                     VREGCON         equ	14801	;# 
   192   0039D8                     CPUDOZE         equ	14808	;# 
   193   0039D9                     OSCCON1         equ	14809	;# 
   194   0039DA                     OSCCON2         equ	14810	;# 
   195   0039DB                     OSCCON3         equ	14811	;# 
   196   0039DC                     OSCSTAT         equ	14812	;# 
   197   0039DC                     OSCSTAT1        equ	14812	;# 
   198   0039DD                     OSCEN           equ	14813	;# 
   199   0039DE                     OSCTUNE         equ	14814	;# 
   200   0039DF                     OSCFRQ          equ	14815	;# 
   201   0039E0                     NVMADRL         equ	14816	;# 
   202   0039E1                     NVMADRH         equ	14817	;# 
   203   0039E3                     NVMDAT          equ	14819	;# 
   204   0039E5                     NVMCON1         equ	14821	;# 
   205   0039E6                     NVMCON2         equ	14822	;# 
   206   0039EF                     PRLOCK          equ	14831	;# 
   207   0039F1                     ISRPR           equ	14833	;# 
   208   0039F2                     MAINPR          equ	14834	;# 
   209   0039F3                     DMA1PR          equ	14835	;# 
   210   0039F4                     DMA2PR          equ	14836	;# 
   211   0039F7                     SCANPR          equ	14839	;# 
   212   003A00                     RA0PPS          equ	14848	;# 
   213   003A01                     RA1PPS          equ	14849	;# 
   214   003A02                     RA2PPS          equ	14850	;# 
   215   003A03                     RA3PPS          equ	14851	;# 
   216   003A04                     RA4PPS          equ	14852	;# 
   217   003A05                     RA5PPS          equ	14853	;# 
   218   003A06                     RA6PPS          equ	14854	;# 
   219   003A07                     RA7PPS          equ	14855	;# 
   220   003A08                     RB0PPS          equ	14856	;# 
   221   003A09                     RB1PPS          equ	14857	;# 
   222   003A0A                     RB2PPS          equ	14858	;# 
   223   003A0B                     RB3PPS          equ	14859	;# 
   224   003A0C                     RB4PPS          equ	14860	;# 
   225   003A0D                     RB5PPS          equ	14861	;# 
   226   003A0E                     RB6PPS          equ	14862	;# 
   227   003A0F                     RB7PPS          equ	14863	;# 
   228   003A10                     RC0PPS          equ	14864	;# 
   229   003A11                     RC1PPS          equ	14865	;# 
   230   003A12                     RC2PPS          equ	14866	;# 
   231   003A13                     RC3PPS          equ	14867	;# 
   232   003A14                     RC4PPS          equ	14868	;# 
   233   003A15                     RC5PPS          equ	14869	;# 
   234   003A16                     RC6PPS          equ	14870	;# 
   235   003A17                     RC7PPS          equ	14871	;# 
   236   003A18                     RD0PPS          equ	14872	;# 
   237   003A19                     RD1PPS          equ	14873	;# 
   238   003A1A                     RD2PPS          equ	14874	;# 
   239   003A1B                     RD3PPS          equ	14875	;# 
   240   003A1C                     RD4PPS          equ	14876	;# 
   241   003A1D                     RD5PPS          equ	14877	;# 
   242   003A1E                     RD6PPS          equ	14878	;# 
   243   003A1F                     RD7PPS          equ	14879	;# 
   244   003A20                     RE0PPS          equ	14880	;# 
   245   003A21                     RE1PPS          equ	14881	;# 
   246   003A22                     RE2PPS          equ	14882	;# 
   247   003A40                     ANSELA          equ	14912	;# 
   248   003A41                     WPUA            equ	14913	;# 
   249   003A42                     ODCONA          equ	14914	;# 
   250   003A43                     SLRCONA         equ	14915	;# 
   251   003A44                     INLVLA          equ	14916	;# 
   252   003A45                     IOCAP           equ	14917	;# 
   253   003A46                     IOCAN           equ	14918	;# 
   254   003A47                     IOCAF           equ	14919	;# 
   255   003A50                     ANSELB          equ	14928	;# 
   256   003A51                     WPUB            equ	14929	;# 
   257   003A52                     ODCONB          equ	14930	;# 
   258   003A53                     SLRCONB         equ	14931	;# 
   259   003A54                     INLVLB          equ	14932	;# 
   260   003A55                     IOCBP           equ	14933	;# 
   261   003A56                     IOCBN           equ	14934	;# 
   262   003A57                     IOCBF           equ	14935	;# 
   263   003A5A                     RB1I2C          equ	14938	;# 
   264   003A5B                     RB2I2C          equ	14939	;# 
   265   003A60                     ANSELC          equ	14944	;# 
   266   003A61                     WPUC            equ	14945	;# 
   267   003A62                     ODCONC          equ	14946	;# 
   268   003A63                     SLRCONC         equ	14947	;# 
   269   003A64                     INLVLC          equ	14948	;# 
   270   003A65                     IOCCP           equ	14949	;# 
   271   003A66                     IOCCN           equ	14950	;# 
   272   003A67                     IOCCF           equ	14951	;# 
   273   003A6A                     RC3I2C          equ	14954	;# 
   274   003A6B                     RC4I2C          equ	14955	;# 
   275   003A70                     ANSELD          equ	14960	;# 
   276   003A71                     WPUD            equ	14961	;# 
   277   003A72                     ODCOND          equ	14962	;# 
   278   003A73                     SLRCOND         equ	14963	;# 
   279   003A74                     INLVLD          equ	14964	;# 
   280   003A7A                     RD0I2C          equ	14970	;# 
   281   003A7B                     RD1I2C          equ	14971	;# 
   282   003A80                     ANSELE          equ	14976	;# 
   283   003A81                     WPUE            equ	14977	;# 
   284   003A82                     ODCONE          equ	14978	;# 
   285   003A83                     SLRCONE         equ	14979	;# 
   286   003A84                     INLVLE          equ	14980	;# 
   287   003A85                     IOCEP           equ	14981	;# 
   288   003A86                     IOCEN           equ	14982	;# 
   289   003A87                     IOCEF           equ	14983	;# 
   290   003ABF                     PPSLOCK         equ	15039	;# 
   291   003AC0                     INT0PPS         equ	15040	;# 
   292   003AC1                     INT1PPS         equ	15041	;# 
   293   003AC2                     INT2PPS         equ	15042	;# 
   294   003AC3                     T0CKIPPS        equ	15043	;# 
   295   003AC4                     T1CKIPPS        equ	15044	;# 
   296   003AC5                     T1GPPS          equ	15045	;# 
   297   003AC6                     T3CKIPPS        equ	15046	;# 
   298   003AC7                     T3GPPS          equ	15047	;# 
   299   003AC8                     T5CKIPPS        equ	15048	;# 
   300   003AC9                     T5GPPS          equ	15049	;# 
   301   003ACA                     T2INPPS         equ	15050	;# 
   302   003ACB                     T4INPPS         equ	15051	;# 
   303   003ACC                     T6INPPS         equ	15052	;# 
   304   003ACD                     CCP1PPS         equ	15053	;# 
   305   003ACE                     CCP2PPS         equ	15054	;# 
   306   003ACF                     CCP3PPS         equ	15055	;# 
   307   003AD0                     CCP4PPS         equ	15056	;# 
   308   003AD1                     SMT1WINPPS      equ	15057	;# 
   309   003AD2                     SMT1SIGPPS      equ	15058	;# 
   310   003AD3                     CWG1INPPS       equ	15059	;# 
   311   003AD4                     CWG2INPPS       equ	15060	;# 
   312   003AD5                     CWG3INPPS       equ	15061	;# 
   313   003AD6                     MD1CARLPPS      equ	15062	;# 
   314   003AD7                     MD1CARHPPS      equ	15063	;# 
   315   003AD8                     MD1SRCPPS       equ	15064	;# 
   316   003AD9                     CLCIN0PPS       equ	15065	;# 
   317   003ADA                     CLCIN1PPS       equ	15066	;# 
   318   003ADB                     CLCIN2PPS       equ	15067	;# 
   319   003ADC                     CLCIN3PPS       equ	15068	;# 
   320   003ADD                     ADACTPPS        equ	15069	;# 
   321   003ADE                     SPI1SCKPPS      equ	15070	;# 
   322   003ADF                     SPI1SDIPPS      equ	15071	;# 
   323   003AE0                     SPI1SSPPS       equ	15072	;# 
   324   003AE1                     I2C1SCLPPS      equ	15073	;# 
   325   003AE2                     I2C1SDAPPS      equ	15074	;# 
   326   003AE3                     I2C2SCLPPS      equ	15075	;# 
   327   003AE4                     I2C2SDAPPS      equ	15076	;# 
   328   003AE5                     U1RXPPS         equ	15077	;# 
   329   003AE6                     U1CTSPPS        equ	15078	;# 
   330   003AE8                     U2RXPPS         equ	15080	;# 
   331   003AE9                     U2CTSPPS        equ	15081	;# 
   332   003BC9                     DMA2BUF         equ	15305	;# 
   333   003BCA                     DMA2DCNT        equ	15306	;# 
   334   003BCA                     DMA2DCNTL       equ	15306	;# 
   335   003BCB                     DMA2DCNTH       equ	15307	;# 
   336   003BCC                     DMA2DPTR        equ	15308	;# 
   337   003BCC                     DMA2DPTRL       equ	15308	;# 
   338   003BCD                     DMA2DPTRH       equ	15309	;# 
   339   003BCE                     DMA2DSZ         equ	15310	;# 
   340   003BCE                     DMA2DSZL        equ	15310	;# 
   341   003BCF                     DMA2DSZH        equ	15311	;# 
   342   003BD0                     DMA2DSA         equ	15312	;# 
   343   003BD0                     DMA2DSAL        equ	15312	;# 
   344   003BD1                     DMA2DSAH        equ	15313	;# 
   345   003BD2                     DMA2SCNT        equ	15314	;# 
   346   003BD2                     DMA2SCNTL       equ	15314	;# 
   347   003BD3                     DMA2SCNTH       equ	15315	;# 
   348   003BD4                     DMA2SPTR        equ	15316	;# 
   349   003BD4                     DMA2SPTRL       equ	15316	;# 
   350   003BD5                     DMA2SPTRH       equ	15317	;# 
   351   003BD6                     DMA2SPTRU       equ	15318	;# 
   352   003BD7                     DMA2SSZ         equ	15319	;# 
   353   003BD7                     DMA2SSZL        equ	15319	;# 
   354   003BD8                     DMA2SSZH        equ	15320	;# 
   355   003BD9                     DMA2SSA         equ	15321	;# 
   356   003BD9                     DMA2SSAL        equ	15321	;# 
   357   003BDA                     DMA2SSAH        equ	15322	;# 
   358   003BDB                     DMA2SSAU        equ	15323	;# 
   359   003BDC                     DMA2CON0        equ	15324	;# 
   360   003BDD                     DMA2CON1        equ	15325	;# 
   361   003BDE                     DMA2AIRQ        equ	15326	;# 
   362   003BDF                     DMA2SIRQ        equ	15327	;# 
   363   003BE9                     DMA1BUF         equ	15337	;# 
   364   003BEA                     DMA1DCNT        equ	15338	;# 
   365   003BEA                     DMA1DCNTL       equ	15338	;# 
   366   003BEB                     DMA1DCNTH       equ	15339	;# 
   367   003BEC                     DMA1DPTR        equ	15340	;# 
   368   003BEC                     DMA1DPTRL       equ	15340	;# 
   369   003BED                     DMA1DPTRH       equ	15341	;# 
   370   003BEE                     DMA1DSZ         equ	15342	;# 
   371   003BEE                     DMA1DSZL        equ	15342	;# 
   372   003BEF                     DMA1DSZH        equ	15343	;# 
   373   003BF0                     DMA1DSA         equ	15344	;# 
   374   003BF0                     DMA1DSAL        equ	15344	;# 
   375   003BF1                     DMA1DSAH        equ	15345	;# 
   376   003BF2                     DMA1SCNT        equ	15346	;# 
   377   003BF2                     DMA1SCNTL       equ	15346	;# 
   378   003BF3                     DMA1SCNTH       equ	15347	;# 
   379   003BF4                     DMA1SPTR        equ	15348	;# 
   380   003BF4                     DMA1SPTRL       equ	15348	;# 
   381   003BF5                     DMA1SPTRH       equ	15349	;# 
   382   003BF6                     DMA1SPTRU       equ	15350	;# 
   383   003BF7                     DMA1SSZ         equ	15351	;# 
   384   003BF7                     DMA1SSZL        equ	15351	;# 
   385   003BF8                     DMA1SSZH        equ	15352	;# 
   386   003BF9                     DMA1SSA         equ	15353	;# 
   387   003BF9                     DMA1SSAL        equ	15353	;# 
   388   003BFA                     DMA1SSAH        equ	15354	;# 
   389   003BFB                     DMA1SSAU        equ	15355	;# 
   390   003BFC                     DMA1CON0        equ	15356	;# 
   391   003BFD                     DMA1CON1        equ	15357	;# 
   392   003BFE                     DMA1AIRQ        equ	15358	;# 
   393   003BFF                     DMA1SIRQ        equ	15359	;# 
   394   003C56                     CLC4CON         equ	15446	;# 
   395   003C57                     CLC4POL         equ	15447	;# 
   396   003C58                     CLC4SEL0        equ	15448	;# 
   397   003C59                     CLC4SEL1        equ	15449	;# 
   398   003C5A                     CLC4SEL2        equ	15450	;# 
   399   003C5B                     CLC4SEL3        equ	15451	;# 
   400   003C5C                     CLC4GLS0        equ	15452	;# 
   401   003C5D                     CLC4GLS1        equ	15453	;# 
   402   003C5E                     CLC4GLS2        equ	15454	;# 
   403   003C5F                     CLC4GLS3        equ	15455	;# 
   404   003C60                     CLC3CON         equ	15456	;# 
   405   003C61                     CLC3POL         equ	15457	;# 
   406   003C62                     CLC3SEL0        equ	15458	;# 
   407   003C63                     CLC3SEL1        equ	15459	;# 
   408   003C64                     CLC3SEL2        equ	15460	;# 
   409   003C65                     CLC3SEL3        equ	15461	;# 
   410   003C66                     CLC3GLS0        equ	15462	;# 
   411   003C67                     CLC3GLS1        equ	15463	;# 
   412   003C68                     CLC3GLS2        equ	15464	;# 
   413   003C69                     CLC3GLS3        equ	15465	;# 
   414   003C6A                     CLC2CON         equ	15466	;# 
   415   003C6B                     CLC2POL         equ	15467	;# 
   416   003C6C                     CLC2SEL0        equ	15468	;# 
   417   003C6D                     CLC2SEL1        equ	15469	;# 
   418   003C6E                     CLC2SEL2        equ	15470	;# 
   419   003C6F                     CLC2SEL3        equ	15471	;# 
   420   003C70                     CLC2GLS0        equ	15472	;# 
   421   003C71                     CLC2GLS1        equ	15473	;# 
   422   003C72                     CLC2GLS2        equ	15474	;# 
   423   003C73                     CLC2GLS3        equ	15475	;# 
   424   003C74                     CLC1CON         equ	15476	;# 
   425   003C75                     CLC1POL         equ	15477	;# 
   426   003C76                     CLC1SEL0        equ	15478	;# 
   427   003C77                     CLC1SEL1        equ	15479	;# 
   428   003C78                     CLC1SEL2        equ	15480	;# 
   429   003C79                     CLC1SEL3        equ	15481	;# 
   430   003C7A                     CLC1GLS0        equ	15482	;# 
   431   003C7B                     CLC1GLS1        equ	15483	;# 
   432   003C7C                     CLC1GLS2        equ	15484	;# 
   433   003C7D                     CLC1GLS3        equ	15485	;# 
   434   003C7E                     CLCDATA0        equ	15486	;# 
   435   003CE5                     CLKRCON         equ	15589	;# 
   436   003CE6                     CLKRCLK         equ	15590	;# 
   437   003CFA                     MD1CON0         equ	15610	;# 
   438   003CFB                     MD1CON1         equ	15611	;# 
   439   003CFC                     MD1SRC          equ	15612	;# 
   440   003CFD                     MD1CARL         equ	15613	;# 
   441   003CFE                     MD1CARH         equ	15614	;# 
   442   003D10                     SPI1RXB         equ	15632	;# 
   443   003D11                     SPI1TXB         equ	15633	;# 
   444   003D12                     SPI1TCNT        equ	15634	;# 
   445   003D12                     SPI1TCNTL       equ	15634	;# 
   446   003D13                     SPI1TCNTH       equ	15635	;# 
   447   003D14                     SPI1CON0        equ	15636	;# 
   448   003D15                     SPI1CON1        equ	15637	;# 
   449   003D16                     SPI1CON2        equ	15638	;# 
   450   003D17                     SPI1STATUS      equ	15639	;# 
   451   003D18                     SPI1TWIDTH      equ	15640	;# 
   452   003D19                     SPI1BAUD        equ	15641	;# 
   453   003D1A                     SPI1INTF        equ	15642	;# 
   454   003D1B                     SPI1INTE        equ	15643	;# 
   455   003D1C                     SPI1CLK         equ	15644	;# 
   456   003D54                     I2C2RXB         equ	15700	;# 
   457   003D55                     I2C2TXB         equ	15701	;# 
   458   003D56                     I2C2CNT         equ	15702	;# 
   459   003D57                     I2C2ADB0        equ	15703	;# 
   460   003D58                     I2C2ADB1        equ	15704	;# 
   461   003D59                     I2C2ADR0        equ	15705	;# 
   462   003D5A                     I2C2ADR1        equ	15706	;# 
   463   003D5B                     I2C2ADR2        equ	15707	;# 
   464   003D5C                     I2C2ADR3        equ	15708	;# 
   465   003D5D                     I2C2CON0        equ	15709	;# 
   466   003D5E                     I2C2CON1        equ	15710	;# 
   467   003D5F                     I2C2CON2        equ	15711	;# 
   468   003D60                     I2C2ERR         equ	15712	;# 
   469   003D61                     I2C2STAT0       equ	15713	;# 
   470   003D62                     I2C2STAT1       equ	15714	;# 
   471   003D63                     I2C2PIR         equ	15715	;# 
   472   003D64                     I2C2PIE         equ	15716	;# 
   473   003D65                     I2C2CLK         equ	15717	;# 
   474   003D66                     I2C2BTO         equ	15718	;# 
   475   003D6A                     I2C1RXB         equ	15722	;# 
   476   003D6B                     I2C1TXB         equ	15723	;# 
   477   003D6C                     I2C1CNT         equ	15724	;# 
   478   003D6D                     I2C1ADB0        equ	15725	;# 
   479   003D6E                     I2C1ADB1        equ	15726	;# 
   480   003D6F                     I2C1ADR0        equ	15727	;# 
   481   003D70                     I2C1ADR1        equ	15728	;# 
   482   003D71                     I2C1ADR2        equ	15729	;# 
   483   003D72                     I2C1ADR3        equ	15730	;# 
   484   003D73                     I2C1CON0        equ	15731	;# 
   485   003D74                     I2C1CON1        equ	15732	;# 
   486   003D75                     I2C1CON2        equ	15733	;# 
   487   003D76                     I2C1ERR         equ	15734	;# 
   488   003D77                     I2C1STAT0       equ	15735	;# 
   489   003D78                     I2C1STAT1       equ	15736	;# 
   490   003D79                     I2C1PIR         equ	15737	;# 
   491   003D7A                     I2C1PIE         equ	15738	;# 
   492   003D7B                     I2C1CLK         equ	15739	;# 
   493   003D7C                     I2C1BTO         equ	15740	;# 
   494   003DD0                     U2RXB           equ	15824	;# 
   495   003DD0                     U2RXBL          equ	15824	;# 
   496   003DD2                     U2TXB           equ	15826	;# 
   497   003DD2                     U2TXBL          equ	15826	;# 
   498   003DD4                     U2P1            equ	15828	;# 
   499   003DD4                     U2P1L           equ	15828	;# 
   500   003DD6                     U2P2            equ	15830	;# 
   501   003DD6                     U2P2L           equ	15830	;# 
   502   003DD8                     U2P3            equ	15832	;# 
   503   003DD8                     U2P3L           equ	15832	;# 
   504   003DDA                     U2CON0          equ	15834	;# 
   505   003DDB                     U2CON1          equ	15835	;# 
   506   003DDC                     U2CON2          equ	15836	;# 
   507   003DDD                     U2BRG           equ	15837	;# 
   508   003DDD                     U2BRGL          equ	15837	;# 
   509   003DDE                     U2BRGH          equ	15838	;# 
   510   003DDF                     U2FIFO          equ	15839	;# 
   511   003DE0                     U2UIR           equ	15840	;# 
   512   003DE1                     U2ERRIR         equ	15841	;# 
   513   003DE2                     U2ERRIE         equ	15842	;# 
   514   003DE8                     U1RXB           equ	15848	;# 
   515   003DE8                     U1RXBL          equ	15848	;# 
   516   003DE9                     U1RXCHK         equ	15849	;# 
   517   003DEA                     U1TXB           equ	15850	;# 
   518   003DEA                     U1TXBL          equ	15850	;# 
   519   003DEB                     U1TXCHK         equ	15851	;# 
   520   003DEC                     U1P1            equ	15852	;# 
   521   003DEC                     U1P1L           equ	15852	;# 
   522   003DED                     U1P1H           equ	15853	;# 
   523   003DEE                     U1P2            equ	15854	;# 
   524   003DEE                     U1P2L           equ	15854	;# 
   525   003DEF                     U1P2H           equ	15855	;# 
   526   003DF0                     U1P3            equ	15856	;# 
   527   003DF0                     U1P3L           equ	15856	;# 
   528   003DF1                     U1P3H           equ	15857	;# 
   529   003DF2                     U1CON0          equ	15858	;# 
   530   003DF3                     U1CON1          equ	15859	;# 
   531   003DF4                     U1CON2          equ	15860	;# 
   532   003DF5                     U1BRG           equ	15861	;# 
   533   003DF5                     U1BRGL          equ	15861	;# 
   534   003DF6                     U1BRGH          equ	15862	;# 
   535   003DF7                     U1FIFO          equ	15863	;# 
   536   003DF8                     U1UIR           equ	15864	;# 
   537   003DF9                     U1ERRIR         equ	15865	;# 
   538   003DFA                     U1ERRIE         equ	15866	;# 
   539   003E9C                     DAC1CON1        equ	16028	;# 
   540   003E9E                     DAC1CON0        equ	16030	;# 
   541   003EB8                     CM2CON0         equ	16056	;# 
   542   003EB9                     CM2CON1         equ	16057	;# 
   543   003EBA                     CM2NCH          equ	16058	;# 
   544   003EBB                     CM2PCH          equ	16059	;# 
   545   003EBC                     CM1CON0         equ	16060	;# 
   546   003EBD                     CM1CON1         equ	16061	;# 
   547   003EBE                     CM1NCH          equ	16062	;# 
   548   003EBF                     CM1PCH          equ	16063	;# 
   549   003EC0                     CMOUT           equ	16064	;# 
   550   003EC1                     FVRCON          equ	16065	;# 
   551   003EC3                     ZCDCON          equ	16067	;# 
   552   003EC9                     HLVDCON0        equ	16073	;# 
   553   003ECA                     HLVDCON1        equ	16074	;# 
   554   003ED7                     ADCP            equ	16087	;# 
   555   003EDE                     ADLTH           equ	16094	;# 
   556   003EDE                     ADLTHL          equ	16094	;# 
   557   003EDF                     ADLTHH          equ	16095	;# 
   558   003EE0                     ADUTH           equ	16096	;# 
   559   003EE0                     ADUTHL          equ	16096	;# 
   560   003EE1                     ADUTHH          equ	16097	;# 
   561   003EE2                     ADERR           equ	16098	;# 
   562   003EE2                     ADERRL          equ	16098	;# 
   563   003EE3                     ADERRH          equ	16099	;# 
   564   003EE4                     ADSTPT          equ	16100	;# 
   565   003EE4                     ADSTPTL         equ	16100	;# 
   566   003EE5                     ADSTPTH         equ	16101	;# 
   567   003EE6                     ADFLTR          equ	16102	;# 
   568   003EE6                     ADFLTRL         equ	16102	;# 
   569   003EE7                     ADFLTRH         equ	16103	;# 
   570   003EE8                     ADACC           equ	16104	;# 
   571   003EE8                     ADACCL          equ	16104	;# 
   572   003EE9                     ADACCH          equ	16105	;# 
   573   003EEA                     ADACCU          equ	16106	;# 
   574   003EEB                     ADCNT           equ	16107	;# 
   575   003EEC                     ADRPT           equ	16108	;# 
   576   003EED                     ADPREV          equ	16109	;# 
   577   003EED                     ADPREVL         equ	16109	;# 
   578   003EEE                     ADPREVH         equ	16110	;# 
   579   003EEF                     ADRES           equ	16111	;# 
   580   003EEF                     ADRESL          equ	16111	;# 
   581   003EF0                     ADRESH          equ	16112	;# 
   582   003EF1                     ADPCH           equ	16113	;# 
   583   003EF3                     ADACQ           equ	16115	;# 
   584   003EF3                     ADACQL          equ	16115	;# 
   585   003EF4                     ADACQH          equ	16116	;# 
   586   003EF5                     ADCAP           equ	16117	;# 
   587   003EF6                     ADPRE           equ	16118	;# 
   588   003EF6                     ADPREL          equ	16118	;# 
   589   003EF7                     ADPREH          equ	16119	;# 
   590   003EF8                     ADCON0          equ	16120	;# 
   591   003EF9                     ADCON1          equ	16121	;# 
   592   003EFA                     ADCON2          equ	16122	;# 
   593   003EFB                     ADCON3          equ	16123	;# 
   594   003EFC                     ADSTAT          equ	16124	;# 
   595   003EFD                     ADREF           equ	16125	;# 
   596   003EFE                     ADACT           equ	16126	;# 
   597   003EFF                     ADCLK           equ	16127	;# 
   598   003F12                     SMT1TMR         equ	16146	;# 
   599   003F12                     SMT1TMRL        equ	16146	;# 
   600   003F13                     SMT1TMRH        equ	16147	;# 
   601   003F14                     SMT1TMRU        equ	16148	;# 
   602   003F15                     SMT1CPR         equ	16149	;# 
   603   003F15                     SMT1CPRL        equ	16149	;# 
   604   003F16                     SMT1CPRH        equ	16150	;# 
   605   003F17                     SMT1CPRU        equ	16151	;# 
   606   003F18                     SMT1CPW         equ	16152	;# 
   607   003F18                     SMT1CPWL        equ	16152	;# 
   608   003F19                     SMT1CPWH        equ	16153	;# 
   609   003F1A                     SMT1CPWU        equ	16154	;# 
   610   003F1B                     SMT1PR          equ	16155	;# 
   611   003F1B                     SMT1PRL         equ	16155	;# 
   612   003F1C                     SMT1PRH         equ	16156	;# 
   613   003F1D                     SMT1PRU         equ	16157	;# 
   614   003F1E                     SMT1CON0        equ	16158	;# 
   615   003F1F                     SMT1CON1        equ	16159	;# 
   616   003F20                     SMT1STAT        equ	16160	;# 
   617   003F21                     SMT1CLK         equ	16161	;# 
   618   003F22                     SMT1SIG         equ	16162	;# 
   619   003F23                     SMT1WIN         equ	16163	;# 
   620   003F38                     NCO1ACC         equ	16184	;# 
   621   003F38                     NCO1ACCL        equ	16184	;# 
   622   003F39                     NCO1ACCH        equ	16185	;# 
   623   003F3A                     NCO1ACCU        equ	16186	;# 
   624   003F3B                     NCO1INC         equ	16187	;# 
   625   003F3B                     NCO1INCL        equ	16187	;# 
   626   003F3C                     NCO1INCH        equ	16188	;# 
   627   003F3D                     NCO1INCU        equ	16189	;# 
   628   003F3E                     NCO1CON         equ	16190	;# 
   629   003F3F                     NCO1CLK         equ	16191	;# 
   630   003F40                     CWG3CLK         equ	16192	;# 
   631   003F40                     CWG3CLKCON      equ	16192	;# 
   632   003F41                     CWG3ISM         equ	16193	;# 
   633   003F41                     CWG3DAT         equ	16193	;# 
   634   003F42                     CWG3DBR         equ	16194	;# 
   635   003F43                     CWG3DBF         equ	16195	;# 
   636   003F44                     CWG3CON0        equ	16196	;# 
   637   003F45                     CWG3CON1        equ	16197	;# 
   638   003F46                     CWG3AS0         equ	16198	;# 
   639   003F47                     CWG3AS1         equ	16199	;# 
   640   003F48                     CWG3STR         equ	16200	;# 
   641   003F49                     CWG2CLK         equ	16201	;# 
   642   003F49                     CWG2CLKCON      equ	16201	;# 
   643   003F4A                     CWG2ISM         equ	16202	;# 
   644   003F4A                     CWG2DAT         equ	16202	;# 
   645   003F4B                     CWG2DBR         equ	16203	;# 
   646   003F4C                     CWG2DBF         equ	16204	;# 
   647   003F4D                     CWG2CON0        equ	16205	;# 
   648   003F4E                     CWG2CON1        equ	16206	;# 
   649   003F4F                     CWG2AS0         equ	16207	;# 
   650   003F50                     CWG2AS1         equ	16208	;# 
   651   003F51                     CWG2STR         equ	16209	;# 
   652   003F52                     CWG1CLK         equ	16210	;# 
   653   003F52                     CWG1CLKCON      equ	16210	;# 
   654   003F53                     CWG1ISM         equ	16211	;# 
   655   003F53                     CWG1DAT         equ	16211	;# 
   656   003F54                     CWG1DBR         equ	16212	;# 
   657   003F55                     CWG1DBF         equ	16213	;# 
   658   003F56                     CWG1CON0        equ	16214	;# 
   659   003F57                     CWG1CON1        equ	16215	;# 
   660   003F58                     CWG1AS0         equ	16216	;# 
   661   003F59                     CWG1AS1         equ	16217	;# 
   662   003F5A                     CWG1STR         equ	16218	;# 
   663   003F5E                     CCPTMRS0        equ	16222	;# 
   664   003F5F                     CCPTMRS1        equ	16223	;# 
   665   003F60                     PWM8DC          equ	16224	;# 
   666   003F60                     PWM8DCL         equ	16224	;# 
   667   003F61                     PWM8DCH         equ	16225	;# 
   668   003F62                     PWM8CON         equ	16226	;# 
   669   003F64                     PWM7DC          equ	16228	;# 
   670   003F64                     PWM7DCL         equ	16228	;# 
   671   003F65                     PWM7DCH         equ	16229	;# 
   672   003F66                     PWM7CON         equ	16230	;# 
   673   003F68                     PWM6DC          equ	16232	;# 
   674   003F68                     PWM6DCL         equ	16232	;# 
   675   003F69                     PWM6DCH         equ	16233	;# 
   676   003F6A                     PWM6CON         equ	16234	;# 
   677   003F6C                     PWM5DC          equ	16236	;# 
   678   003F6C                     PWM5DCL         equ	16236	;# 
   679   003F6D                     PWM5DCH         equ	16237	;# 
   680   003F6E                     PWM5CON         equ	16238	;# 
   681   003F70                     CCPR4           equ	16240	;# 
   682   003F70                     CCPR4L          equ	16240	;# 
   683   003F71                     CCPR4H          equ	16241	;# 
   684   003F72                     CCP4CON         equ	16242	;# 
   685   003F73                     CCP4CAP         equ	16243	;# 
   686   003F74                     CCPR3           equ	16244	;# 
   687   003F74                     CCPR3L          equ	16244	;# 
   688   003F75                     CCPR3H          equ	16245	;# 
   689   003F76                     CCP3CON         equ	16246	;# 
   690   003F77                     CCP3CAP         equ	16247	;# 
   691   003F78                     CCPR2           equ	16248	;# 
   692   003F78                     CCPR2L          equ	16248	;# 
   693   003F79                     CCPR2H          equ	16249	;# 
   694   003F7A                     CCP2CON         equ	16250	;# 
   695   003F7B                     CCP2CAP         equ	16251	;# 
   696   003F7C                     CCPR1           equ	16252	;# 
   697   003F7C                     CCPR1L          equ	16252	;# 
   698   003F7D                     CCPR1H          equ	16253	;# 
   699   003F7E                     CCP1CON         equ	16254	;# 
   700   003F7F                     CCP1CAP         equ	16255	;# 
   701   003F92                     T6TMR           equ	16274	;# 
   702   003F92                     TMR6            equ	16274	;# 
   703   003F93                     T6PR            equ	16275	;# 
   704   003F93                     PR6             equ	16275	;# 
   705   003F94                     T6CON           equ	16276	;# 
   706   003F95                     T6HLT           equ	16277	;# 
   707   003F96                     T6CLKCON        equ	16278	;# 
   708   003F96                     T6CLK           equ	16278	;# 
   709   003F97                     T6RST           equ	16279	;# 
   710   003F98                     TMR5            equ	16280	;# 
   711   003F98                     TMR5L           equ	16280	;# 
   712   003F99                     TMR5H           equ	16281	;# 
   713   003F9A                     T5CON           equ	16282	;# 
   714   003F9A                     TMR5CON         equ	16282	;# 
   715   003F9B                     T5GCON          equ	16283	;# 
   716   003F9B                     TMR5GCON        equ	16283	;# 
   717   003F9C                     T5GATE          equ	16284	;# 
   718   003F9C                     TMR5GATE        equ	16284	;# 
   719   003F9D                     T5CLK           equ	16285	;# 
   720   003F9D                     TMR5CLK         equ	16285	;# 
   721   003F9D                     PR5             equ	16285	;# 
   722   003F9E                     T4TMR           equ	16286	;# 
   723   003F9E                     TMR4            equ	16286	;# 
   724   003F9F                     T4PR            equ	16287	;# 
   725   003F9F                     PR4             equ	16287	;# 
   726   003FA0                     T4CON           equ	16288	;# 
   727   003FA1                     T4HLT           equ	16289	;# 
   728   003FA2                     T4CLKCON        equ	16290	;# 
   729   003FA2                     T4CLK           equ	16290	;# 
   730   003FA3                     T4RST           equ	16291	;# 
   731   003FA4                     TMR3            equ	16292	;# 
   732   003FA4                     TMR3L           equ	16292	;# 
   733   003FA5                     TMR3H           equ	16293	;# 
   734   003FA6                     T3CON           equ	16294	;# 
   735   003FA6                     TMR3CON         equ	16294	;# 
   736   003FA7                     T3GCON          equ	16295	;# 
   737   003FA7                     TMR3GCON        equ	16295	;# 
   738   003FA8                     T3GATE          equ	16296	;# 
   739   003FA8                     TMR3GATE        equ	16296	;# 
   740   003FA9                     T3CLK           equ	16297	;# 
   741   003FA9                     TMR3CLK         equ	16297	;# 
   742   003FA9                     PR3             equ	16297	;# 
   743   003FAA                     T2TMR           equ	16298	;# 
   744   003FAA                     TMR2            equ	16298	;# 
   745   003FAB                     T2PR            equ	16299	;# 
   746   003FAB                     PR2             equ	16299	;# 
   747   003FAC                     T2CON           equ	16300	;# 
   748   003FAD                     T2HLT           equ	16301	;# 
   749   003FAE                     T2CLKCON        equ	16302	;# 
   750   003FAE                     T2CLK           equ	16302	;# 
   751   003FAF                     T2RST           equ	16303	;# 
   752   003FB0                     TMR1            equ	16304	;# 
   753   003FB0                     TMR1L           equ	16304	;# 
   754   003FB1                     TMR1H           equ	16305	;# 
   755   003FB2                     T1CON           equ	16306	;# 
   756   003FB2                     TMR1CON         equ	16306	;# 
   757   003FB3                     T1GCON          equ	16307	;# 
   758   003FB3                     TMR1GCON        equ	16307	;# 
   759   003FB4                     T1GATE          equ	16308	;# 
   760   003FB4                     TMR1GATE        equ	16308	;# 
   761   003FB5                     T1CLK           equ	16309	;# 
   762   003FB5                     TMR1CLK         equ	16309	;# 
   763   003FB5                     PR1             equ	16309	;# 
   764   003FB6                     TMR0L           equ	16310	;# 
   765   003FB6                     TMR0            equ	16310	;# 
   766   003FB7                     TMR0H           equ	16311	;# 
   767   003FB7                     PR0             equ	16311	;# 
   768   003FB8                     T0CON0          equ	16312	;# 
   769   003FB9                     T0CON1          equ	16313	;# 
   770   003FBA                     LATA            equ	16314	;# 
   771   003FBB                     LATB            equ	16315	;# 
   772   003FBC                     LATC            equ	16316	;# 
   773   003FBD                     LATD            equ	16317	;# 
   774   003FBE                     LATE            equ	16318	;# 
   775   003FC2                     TRISA           equ	16322	;# 
   776   003FC3                     TRISB           equ	16323	;# 
   777   003FC4                     TRISC           equ	16324	;# 
   778   003FC5                     TRISD           equ	16325	;# 
   779   003FC6                     TRISE           equ	16326	;# 
   780   003FCA                     PORTA           equ	16330	;# 
   781   003FCB                     PORTB           equ	16331	;# 
   782   003FCC                     PORTC           equ	16332	;# 
   783   003FCD                     PORTD           equ	16333	;# 
   784   003FCE                     PORTE           equ	16334	;# 
   785   003FD2                     INTCON0         equ	16338	;# 
   786   003FD3                     INTCON1         equ	16339	;# 
   787   003FD4                     IVTLOCK         equ	16340	;# 
   788   003FD5                     IVTBASE         equ	16341	;# 
   789   003FD5                     IVTBASEL        equ	16341	;# 
   790   003FD6                     IVTBASEH        equ	16342	;# 
   791   003FD7                     IVTBASEU        equ	16343	;# 
   792   003FD8                     STATUS          equ	16344	;# 
   793   003FD9                     FSR2            equ	16345	;# 
   794   003FD9                     FSR2L           equ	16345	;# 
   795   003FDA                     FSR2H           equ	16346	;# 
   796   003FDB                     PLUSW2          equ	16347	;# 
   797   003FDC                     PREINC2         equ	16348	;# 
   798   003FDD                     POSTDEC2        equ	16349	;# 
   799   003FDE                     POSTINC2        equ	16350	;# 
   800   003FDF                     INDF2           equ	16351	;# 
   801   003FE0                     BSR             equ	16352	;# 
   802   003FE1                     FSR1            equ	16353	;# 
   803   003FE1                     FSR1L           equ	16353	;# 
   804   003FE2                     FSR1H           equ	16354	;# 
   805   003FE3                     PLUSW1          equ	16355	;# 
   806   003FE4                     PREINC1         equ	16356	;# 
   807   003FE5                     POSTDEC1        equ	16357	;# 
   808   003FE6                     POSTINC1        equ	16358	;# 
   809   003FE7                     INDF1           equ	16359	;# 
   810   003FE8                     WREG            equ	16360	;# 
   811   003FE9                     FSR0            equ	16361	;# 
   812   003FE9                     FSR0L           equ	16361	;# 
   813   003FEA                     FSR0H           equ	16362	;# 
   814   003FEB                     PLUSW0          equ	16363	;# 
   815   003FEC                     PREINC0         equ	16364	;# 
   816   003FED                     POSTDEC0        equ	16365	;# 
   817   003FEE                     POSTINC0        equ	16366	;# 
   818   003FEF                     INDF0           equ	16367	;# 
   819   003FF0                     PCON0           equ	16368	;# 
   820   003FF1                     PCON1           equ	16369	;# 
   821   003FF3                     PROD            equ	16371	;# 
   822   003FF3                     PRODL           equ	16371	;# 
   823   003FF4                     PRODH           equ	16372	;# 
   824   003FF5                     TABLAT          equ	16373	;# 
   825   003FF6                     TBLPTR          equ	16374	;# 
   826   003FF6                     TBLPTRL         equ	16374	;# 
   827   003FF7                     TBLPTRH         equ	16375	;# 
   828   003FF8                     TBLPTRU         equ	16376	;# 
   829   003FF9                     PCLAT           equ	16377	;# 
   830   003FF9                     PCL             equ	16377	;# 
   831   003FFA                     PCLATH          equ	16378	;# 
   832   003FFB                     PCLATU          equ	16379	;# 
   833   003FFC                     STKPTR          equ	16380	;# 
   834   003FFD                     TOS             equ	16381	;# 
   835   003FFD                     TOSL            equ	16381	;# 
   836   003FFE                     TOSH            equ	16382	;# 
   837   003FFF                     TOSU            equ	16383	;# 
   838                           
   839                           	psect	nvCOMRAM
   840   00000E                     __pnvCOMRAM:
   841                           	callstack 0
   842   00000E                     _code:
   843                           	callstack 0
   844   00000E                     	ds	2
   845   0039A1                     _PIR1bits       set	14753
   846   003991                     _PIE1bits       set	14737
   847   003981                     _IPR1bits       set	14721
   848   003A70                     _ANSELD         set	14960
   849   003A60                     _ANSELC         set	14944
   850   003A51                     _WPUB           set	14929
   851   003A50                     _ANSELB         set	14928
   852   003A41                     _WPUA           set	14913
   853   003A40                     _ANSELA         set	14912
   854   003FCB                     _PORTBbits      set	16331
   855   003FCA                     _PORTAbits      set	16330
   856   003FD5                     _IVTBASEL       set	16341
   857   003FD6                     _IVTBASEH       set	16342
   858   003FD7                     _IVTBASEU       set	16343
   859   003FD2                     _INTCON0bits    set	16338
   860   003FC5                     _TRISD          set	16325
   861   003FBD                     _LATD           set	16317
   862   003FCD                     _PORTD          set	16333
   863   003FC4                     _TRISC          set	16324
   864   003FBC                     _LATC           set	16316
   865   003FCC                     _PORTC          set	16332
   866   003FC3                     _TRISB          set	16323
   867   003FBB                     _LATB           set	16315
   868   003FCB                     _PORTB          set	16331
   869   003FC2                     _TRISA          set	16322
   870   003FBA                     _LATA           set	16314
   871   003FCA                     _PORTA          set	16330
   872                           
   873                           ; #config settings
   874                           
   875                           	psect	cinit
   876   003360                     __pcinit:
   877                           	callstack 0
   878   003360                     start_initialization:
   879                           	callstack 0
   880   003360                     __initialization:
   881                           	callstack 0
   882                           
   883                           ; Clear objects allocated to COMRAM (5 bytes)
   884   003360  6A0D               	clrf	(__pbssCOMRAM+4)& (0+255),c
   885   003362  6A0C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   886   003364  6A0B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   887   003366  6A0A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   888   003368  6A09               	clrf	__pbssCOMRAM& (0+255),c
   889                           
   890                           ;
   891                           ; Setup IVTBASE
   892                           ;
   893   003FD5                     IVTBASEL        equ	16341
   894   003FD6                     IVTBASEH        equ	16342
   895   003FD7                     IVTBASEU        equ	16343
   896   00336A  0E08               	movlw	(ivt0x3008_base shr 0)& (0+255)
   897   00336C  6ED5               	movwf	213,c
   898   00336E  0E30               	movlw	(ivt0x3008_base shr (0+8))& (0+255)
   899   003370  6ED6               	movwf	214,c
   900   003372  0E00               	movlw	(ivt0x3008_base shr (0+16))& (0+255)
   901   003374  6ED7               	movwf	215,c
   902   003376                     end_of_initialization:
   903                           	callstack 0
   904   003376                     __end_of__initialization:
   905                           	callstack 0
   906   003376  0100               	movlb	0
   907   003378  EFBA  F018         	goto	_main	;jump to C main() function
   908                           
   909                           	psect	bssCOMRAM
   910   000009                     __pbssCOMRAM:
   911                           	callstack 0
   912   000009                     _count:
   913                           	callstack 0
   914   000009                     	ds	2
   915   00000B                     _password:
   916                           	callstack 0
   917   00000B                     	ds	2
   918   00000D                     _confirm:
   919                           	callstack 0
   920   00000D                     	ds	1
   921                           
   922                           	psect	cstackCOMRAM
   923   000001                     __pcstackCOMRAM:
   924                           	callstack 0
   925   000001                     ??_INT0_ISR:
   926                           
   927                           ; 1 bytes @ 0x0
   928   000001                     	ds	2
   929   000003                     ??_sevenDisp:
   930                           
   931                           ; 1 bytes @ 0x2
   932   000003                     	ds	2
   933   000005                     ??_input:
   934   000005                     ??_checkPassword:
   935                           
   936                           ; 1 bytes @ 0x4
   937   000005                     	ds	2
   938   000007                     ??_main:
   939                           
   940                           ; 1 bytes @ 0x6
   941   000007                     	ds	2
   942                           
   943 ;;
   944 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   945 ;;
   946 ;; *************** function _main *****************
   947 ;; Defined at:
   948 ;;		line 18 in file "Sensors.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   966 ;;Total ram usage:        2 bytes
   967 ;; Hardware stack levels required when called: 3
   968 ;; This function calls:
   969 ;;		_checkPassword
   970 ;;		_initialize
   971 ;;		_input
   972 ;;		_sevenDisp
   973 ;; This function is called by:
   974 ;;		Startup code after reset
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text0
   979   003174                     __ptext0:
   980                           	callstack 0
   981   003174                     _main:
   982                           	callstack 28
   983   003174                     l112:
   984   003174                     
   985                           ;Sensors.c: 21:     {;Sensors.c: 22:     initialize();
   986   003174  EC0E  F019         	call	_initialize	;wreg free
   987   003178                     
   988                           ;Sensors.c: 23:     sevenDisp();
   989   003178  EC59  F018         	call	_sevenDisp	;wreg free
   990                           
   991                           ;Sensors.c: 24:     while (confirm == 0)
   992   00317C  EFC2  F018         	goto	l923
   993   003180                     l921:
   994                           
   995                           ;Sensors.c: 25:         input();
   996   003180  EC6E  F019         	call	_input	;wreg free
   997   003184                     l923:
   998                           
   999                           ;Sensors.c: 24:     while (confirm == 0)
  1000   003184  500D               	movf	_confirm^0,w,c
  1001   003186  B4D8               	btfsc	status,2,c
  1002   003188  EFC8  F018         	goto	u61
  1003   00318C  EFCA  F018         	goto	u60
  1004   003190                     u61:
  1005   003190  EFC0  F018         	goto	l921
  1006   003194                     u60:
  1007   003194                     
  1008                           ;Sensors.c: 26:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1009   003194  0E03               	movlw	3
  1010   003196  6E08               	movwf	(??_main+1)^0,c
  1011   003198  0E8A               	movlw	138
  1012   00319A  6E07               	movwf	??_main^0,c
  1013   00319C  0E56               	movlw	86
  1014   00319E                     u87:
  1015   00319E  2EE8               	decfsz	wreg,f,c
  1016   0031A0  D7FE               	bra	u87
  1017   0031A2  2E07               	decfsz	??_main^0,f,c
  1018   0031A4  D7FC               	bra	u87
  1019   0031A6  2E08               	decfsz	(??_main+1)^0,f,c
  1020   0031A8  D7FA               	bra	u87
  1021   0031AA                     
  1022                           ;Sensors.c: 27:     password = count * 10;
  1023   0031AA  0E0A               	movlw	10
  1024   0031AC  0209               	mulwf	_count^0,c
  1025   0031AE  006F FFCC  F007    	movff	prodl,??_main
  1026   0031B4  006F FFD0  F008    	movff	prodh,??_main+1
  1027   0031BA  020A               	mulwf	(_count+1)^0,c
  1028   0031BC  50F3               	movf	prodl,w,c
  1029   0031BE  2608               	addwf	(??_main+1)^0,f,c
  1030   0031C0  C007  F00B         	movff	??_main,_password
  1031   0031C4  C008  F00C         	movff	??_main+1,_password+1
  1032   0031C8                     
  1033                           ;Sensors.c: 28:     confirm = 0;
  1034   0031C8  6A0D               	clrf	_confirm^0,c
  1035   0031CA                     
  1036                           ;Sensors.c: 29:     count = 0;
  1037   0031CA  0E00               	movlw	0
  1038   0031CC  6E0A               	movwf	(_count+1)^0,c
  1039   0031CE  0E00               	movlw	0
  1040   0031D0  6E09               	movwf	_count^0,c
  1041   0031D2                     
  1042                           ;Sensors.c: 30:     sevenDisp();
  1043   0031D2  EC59  F018         	call	_sevenDisp	;wreg free
  1044                           
  1045                           ;Sensors.c: 31:     while (confirm == 0)
  1046   0031D6  EFEF  F018         	goto	l937
  1047   0031DA                     l935:
  1048                           
  1049                           ;Sensors.c: 32:         input();
  1050   0031DA  EC6E  F019         	call	_input	;wreg free
  1051   0031DE                     l937:
  1052                           
  1053                           ;Sensors.c: 31:     while (confirm == 0)
  1054   0031DE  500D               	movf	_confirm^0,w,c
  1055   0031E0  B4D8               	btfsc	status,2,c
  1056   0031E2  EFF5  F018         	goto	u71
  1057   0031E6  EFF7  F018         	goto	u70
  1058   0031EA                     u71:
  1059   0031EA  EFED  F018         	goto	l935
  1060   0031EE                     u70:
  1061   0031EE                     
  1062                           ;Sensors.c: 33:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1063   0031EE  0E03               	movlw	3
  1064   0031F0  6E08               	movwf	(??_main+1)^0,c
  1065   0031F2  0E8A               	movlw	138
  1066   0031F4  6E07               	movwf	??_main^0,c
  1067   0031F6  0E56               	movlw	86
  1068   0031F8                     u97:
  1069   0031F8  2EE8               	decfsz	wreg,f,c
  1070   0031FA  D7FE               	bra	u97
  1071   0031FC  2E07               	decfsz	??_main^0,f,c
  1072   0031FE  D7FC               	bra	u97
  1073   003200  2E08               	decfsz	(??_main+1)^0,f,c
  1074   003202  D7FA               	bra	u97
  1075   003204                     
  1076                           ;Sensors.c: 34:     password = password+count;
  1077   003204  5009               	movf	_count^0,w,c
  1078   003206  240B               	addwf	_password^0,w,c
  1079   003208  6E0B               	movwf	_password^0,c
  1080   00320A  500A               	movf	(_count+1)^0,w,c
  1081   00320C  200C               	addwfc	(_password+1)^0,w,c
  1082   00320E  6E0C               	movwf	(_password+1)^0,c
  1083   003210                     
  1084                           ;Sensors.c: 35:     checkPassword();
  1085   003210  EC3E  F019         	call	_checkPassword	;wreg free
  1086   003214  EFBA  F018         	goto	l112
  1087   003218  EF57  F018         	goto	start
  1088   00321C                     __end_of_main:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _input *****************
  1092 ;; Defined at:
  1093 ;;		line 43 in file "./functions.h"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 2
  1114 ;; This function calls:
  1115 ;;		_sevenDisp
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text1
  1122   0032DC                     __ptext1:
  1123                           	callstack 0
  1124   0032DC                     _input:
  1125                           	callstack 28
  1126   0032DC                     
  1127                           ;./functions.h: 45:     while(confirm==0)
  1128   0032DC  EF8F  F019         	goto	l89
  1129   0032E0                     l90:
  1130                           
  1131                           ;./functions.h: 46:     {;./functions.h: 47:         if(PORTAbits.RA0==1)
  1132   0032E0  A0CA               	btfss	202,0,c	;volatile
  1133   0032E2  EF75  F019         	goto	u11
  1134   0032E6  EF77  F019         	goto	u10
  1135   0032EA                     u11:
  1136   0032EA  EF86  F019         	goto	l883
  1137   0032EE                     u10:
  1138   0032EE                     
  1139                           ;./functions.h: 48:         {;./functions.h: 49:             count++;
  1140   0032EE  4A09               	infsnz	_count^0,f,c
  1141   0032F0  2A0A               	incf	(_count+1)^0,f,c
  1142   0032F2                     
  1143                           ;./functions.h: 50:             sevenDisp();
  1144   0032F2  EC59  F018         	call	_sevenDisp	;wreg free
  1145   0032F6                     
  1146                           ;./functions.h: 51:             _delay((unsigned long)((750)*(4000000/4000.0)));
  1147   0032F6  0E04               	movlw	4
  1148   0032F8  6E06               	movwf	(??_input+1)^0,c
  1149   0032FA  0ECF               	movlw	207
  1150   0032FC  6E05               	movwf	??_input^0,c
  1151   0032FE  0E02               	movlw	2
  1152   003300                     u107:
  1153   003300  2EE8               	decfsz	wreg,f,c
  1154   003302  D7FE               	bra	u107
  1155   003304  2E05               	decfsz	??_input^0,f,c
  1156   003306  D7FC               	bra	u107
  1157   003308  2E06               	decfsz	(??_input+1)^0,f,c
  1158   00330A  D7FA               	bra	u107
  1159   00330C                     l883:
  1160                           
  1161                           ;./functions.h: 53:         if(PORTBbits.RB1==1)
  1162   00330C  A2CB               	btfss	203,1,c	;volatile
  1163   00330E  EF8B  F019         	goto	u21
  1164   003312  EF8D  F019         	goto	u20
  1165   003316                     u21:
  1166   003316  EF8F  F019         	goto	l89
  1167   00331A                     u20:
  1168   00331A                     
  1169                           ;./functions.h: 54:         {;./functions.h: 55:             confirm=1;
  1170   00331A  0E01               	movlw	1
  1171   00331C  6E0D               	movwf	_confirm^0,c
  1172   00331E                     l89:
  1173                           
  1174                           ;./functions.h: 45:     while(confirm==0)
  1175   00331E  500D               	movf	_confirm^0,w,c
  1176   003320  B4D8               	btfsc	status,2,c
  1177   003322  EF95  F019         	goto	u31
  1178   003326  EF97  F019         	goto	u30
  1179   00332A                     u31:
  1180   00332A  EF70  F019         	goto	l90
  1181   00332E                     u30:
  1182   00332E  0012               	return		;funcret
  1183   003330                     __end_of_input:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _initialize *****************
  1187 ;; Defined at:
  1188 ;;		line 4 in file "./initialize.h"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text2
  1217   00321C                     __ptext2:
  1218                           	callstack 0
  1219   00321C                     _initialize:
  1220                           	callstack 29
  1221   00321C                     
  1222                           ;./initialize.h: 5:     PORTA = 0;
  1223   00321C  6ACA               	clrf	202,c	;volatile
  1224                           
  1225                           ;./initialize.h: 6:     LATA = 0;
  1226   00321E  6ABA               	clrf	186,c	;volatile
  1227                           
  1228                           ;./initialize.h: 7:     ANSELA = 0;
  1229   003220  013A               	movlb	58	; () banked
  1230   003222  6B40               	clrf	64,b	;volatile
  1231   003224                     
  1232                           ; BSR set to: 58
  1233                           ;./initialize.h: 8:     TRISA = 0b00000111;
  1234   003224  0E07               	movlw	7
  1235   003226  6EC2               	movwf	194,c	;volatile
  1236   003228                     
  1237                           ; BSR set to: 58
  1238                           ;./initialize.h: 9:     WPUA = 0b00000000;
  1239   003228  6B41               	clrf	65,b	;volatile
  1240   00322A                     
  1241                           ; BSR set to: 58
  1242                           ;./initialize.h: 10:     PORTB = 0;
  1243   00322A  6ACB               	clrf	203,c	;volatile
  1244   00322C                     
  1245                           ; BSR set to: 58
  1246                           ;./initialize.h: 11:     LATB = 0;
  1247   00322C  6ABB               	clrf	187,c	;volatile
  1248   00322E                     
  1249                           ; BSR set to: 58
  1250                           ;./initialize.h: 12:     ANSELB = 0b00000000;
  1251   00322E  6B50               	clrf	80,b	;volatile
  1252                           
  1253                           ;./initialize.h: 13:     TRISB = 0b00000011;
  1254   003230  0E03               	movlw	3
  1255   003232  6EC3               	movwf	195,c	;volatile
  1256   003234                     
  1257                           ; BSR set to: 58
  1258                           ;./initialize.h: 14:     WPUB = 0b00000000;
  1259   003234  6B51               	clrf	81,b	;volatile
  1260   003236                     
  1261                           ; BSR set to: 58
  1262                           ;./initialize.h: 15:     PORTC = 0;
  1263   003236  6ACC               	clrf	204,c	;volatile
  1264   003238                     
  1265                           ; BSR set to: 58
  1266                           ;./initialize.h: 16:     LATC = 0;
  1267   003238  6ABC               	clrf	188,c	;volatile
  1268   00323A                     
  1269                           ; BSR set to: 58
  1270                           ;./initialize.h: 17:     ANSELC = 0;
  1271   00323A  6B60               	clrf	96,b	;volatile
  1272   00323C                     
  1273                           ; BSR set to: 58
  1274                           ;./initialize.h: 18:     TRISC = 0b00000000;
  1275   00323C  6AC4               	clrf	196,c	;volatile
  1276   00323E                     
  1277                           ; BSR set to: 58
  1278                           ;./initialize.h: 19:     PORTD = 0;
  1279   00323E  6ACD               	clrf	205,c	;volatile
  1280   003240                     
  1281                           ; BSR set to: 58
  1282                           ;./initialize.h: 20:     LATD = 0;
  1283   003240  6ABD               	clrf	189,c	;volatile
  1284   003242                     
  1285                           ; BSR set to: 58
  1286                           ;./initialize.h: 21:     ANSELD = 0;
  1287   003242  6B70               	clrf	112,b	;volatile
  1288   003244                     
  1289                           ; BSR set to: 58
  1290                           ;./initialize.h: 22:     TRISD = 0b00000000;
  1291   003244  6AC5               	clrf	197,c	;volatile
  1292   003246                     
  1293                           ; BSR set to: 58
  1294                           ;./initialize.h: 24:     confirm = 0;
  1295   003246  6A0D               	clrf	_confirm^0,c
  1296                           
  1297                           ;./initialize.h: 25:     count = 0;
  1298   003248  0E00               	movlw	0
  1299   00324A  6E0A               	movwf	(_count+1)^0,c
  1300   00324C  0E00               	movlw	0
  1301   00324E  6E09               	movwf	_count^0,c
  1302                           
  1303                           ;./initialize.h: 26:     password = 0;
  1304   003250  0E00               	movlw	0
  1305   003252  6E0C               	movwf	(_password+1)^0,c
  1306   003254  0E00               	movlw	0
  1307   003256  6E0B               	movwf	_password^0,c
  1308                           
  1309                           ;./initialize.h: 27:     code = 23;
  1310   003258  0E00               	movlw	0
  1311   00325A  6E0F               	movwf	(_code+1)^0,c
  1312   00325C  0E17               	movlw	23
  1313   00325E  6E0E               	movwf	_code^0,c
  1314   003260                     
  1315                           ; BSR set to: 58
  1316                           ;./initialize.h: 29:     INTCON0bits.INT0EDG = 1;
  1317   003260  80D2               	bsf	210,0,c	;volatile
  1318   003262                     
  1319                           ; BSR set to: 58
  1320                           ;./initialize.h: 30:     INTCON0bits.IPEN = 1;
  1321   003262  8AD2               	bsf	210,5,c	;volatile
  1322   003264                     
  1323                           ; BSR set to: 58
  1324                           ;./initialize.h: 31:     INTCON0bits.GIEH = 1;
  1325   003264  8ED2               	bsf	210,7,c	;volatile
  1326   003266                     
  1327                           ; BSR set to: 58
  1328                           ;./initialize.h: 32:     INTCON0bits.GIEL = 1;
  1329   003266  8CD2               	bsf	210,6,c	;volatile
  1330   003268                     
  1331                           ; BSR set to: 58
  1332                           ;./initialize.h: 33:     IPR1bits.INT0IP = 1;
  1333   003268  0139               	movlb	57	; () banked
  1334   00326A  8181               	bsf	129,0,b	;volatile
  1335   00326C                     
  1336                           ; BSR set to: 57
  1337                           ;./initialize.h: 34:     PIE1bits.INT0IE = 1;
  1338   00326C  8191               	bsf	145,0,b	;volatile
  1339   00326E                     
  1340                           ; BSR set to: 57
  1341                           ;./initialize.h: 36:     PIR1bits.INT0IF = 0;
  1342   00326E  91A1               	bcf	161,0,b	;volatile
  1343   003270                     
  1344                           ; BSR set to: 57
  1345                           ;./initialize.h: 38:     IVTBASEU = 0x00;
  1346   003270  6AD7               	clrf	215,c	;volatile
  1347                           
  1348                           ;./initialize.h: 39:     IVTBASEH = 0x30;
  1349   003272  0E30               	movlw	48
  1350   003274  6ED6               	movwf	214,c	;volatile
  1351                           
  1352                           ;./initialize.h: 40:     IVTBASEL = 0x08;
  1353   003276  0E08               	movlw	8
  1354   003278  6ED5               	movwf	213,c	;volatile
  1355   00327A                     
  1356                           ; BSR set to: 57
  1357   00327A  0012               	return		;funcret
  1358   00327C                     __end_of_initialize:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _checkPassword *****************
  1362 ;; Defined at:
  1363 ;;		line 61 in file "./functions.h"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1379 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1381 ;;Total ram usage:        2 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 2
  1384 ;; This function calls:
  1385 ;;		_sevenDisp
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text3
  1392   00327C                     __ptext3:
  1393                           	callstack 0
  1394   00327C                     _checkPassword:
  1395                           	callstack 28
  1396   00327C                     
  1397                           ;./functions.h: 63:     count=7;
  1398   00327C  0E00               	movlw	0
  1399   00327E  6E0A               	movwf	(_count+1)^0,c
  1400   003280  0E07               	movlw	7
  1401   003282  6E09               	movwf	_count^0,c
  1402   003284                     
  1403                           ;./functions.h: 64:     sevenDisp();
  1404   003284  EC59  F018         	call	_sevenDisp	;wreg free
  1405   003288                     
  1406                           ;./functions.h: 65:     if(password==code)
  1407   003288  500E               	movf	_code^0,w,c
  1408   00328A  180B               	xorwf	_password^0,w,c
  1409   00328C  E107               	bnz	u41
  1410   00328E  500F               	movf	(_code+1)^0,w,c
  1411   003290  180C               	xorwf	(_password+1)^0,w,c
  1412   003292  A4D8               	btfss	status,2,c
  1413   003294  EF4E  F019         	goto	u41
  1414   003298  EF50  F019         	goto	u40
  1415   00329C                     u41:
  1416   00329C  EF60  F019         	goto	l97
  1417   0032A0                     u40:
  1418   0032A0                     
  1419                           ;./functions.h: 66:     {;./functions.h: 67:         PORTAbits.RA5 = 1;
  1420   0032A0  8ACA               	bsf	202,5,c	;volatile
  1421   0032A2                     
  1422                           ;./functions.h: 68:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  1423   0032A2  0E1A               	movlw	26
  1424   0032A4  6E06               	movwf	(??_checkPassword+1)^0,c
  1425   0032A6  0E5E               	movlw	94
  1426   0032A8  6E05               	movwf	??_checkPassword^0,c
  1427   0032AA  0E6E               	movlw	110
  1428   0032AC                     u117:
  1429   0032AC  2EE8               	decfsz	wreg,f,c
  1430   0032AE  D7FE               	bra	u117
  1431   0032B0  2E05               	decfsz	??_checkPassword^0,f,c
  1432   0032B2  D7FC               	bra	u117
  1433   0032B4  2E06               	decfsz	(??_checkPassword+1)^0,f,c
  1434   0032B6  D7FA               	bra	u117
  1435   0032B8  D000               	nop2	
  1436   0032BA                     
  1437                           ;./functions.h: 69:         PORTAbits.RA5 = 0;
  1438   0032BA  9ACA               	bcf	202,5,c	;volatile
  1439                           
  1440                           ;./functions.h: 70:     }
  1441   0032BC  EF6D  F019         	goto	l99
  1442   0032C0                     l97:
  1443                           
  1444                           ;./functions.h: 72:     {;./functions.h: 73:         PORTBbits.RB2 = 1;
  1445   0032C0  84CB               	bsf	203,2,c	;volatile
  1446   0032C2                     
  1447                           ;./functions.h: 74:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1448   0032C2  0E0B               	movlw	11
  1449   0032C4  6E06               	movwf	(??_checkPassword+1)^0,c
  1450   0032C6  0E26               	movlw	38
  1451   0032C8  6E05               	movwf	??_checkPassword^0,c
  1452   0032CA  0E5E               	movlw	94
  1453   0032CC                     u127:
  1454   0032CC  2EE8               	decfsz	wreg,f,c
  1455   0032CE  D7FE               	bra	u127
  1456   0032D0  2E05               	decfsz	??_checkPassword^0,f,c
  1457   0032D2  D7FC               	bra	u127
  1458   0032D4  2E06               	decfsz	(??_checkPassword+1)^0,f,c
  1459   0032D6  D7FA               	bra	u127
  1460   0032D8                     
  1461                           ;./functions.h: 75:         PORTBbits.RB2 = 0;
  1462   0032D8  94CB               	bcf	203,2,c	;volatile
  1463   0032DA                     l99:
  1464   0032DA  0012               	return		;funcret
  1465   0032DC                     __end_of_checkPassword:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _sevenDisp *****************
  1469 ;; Defined at:
  1470 ;;		line 5 in file "./functions.h"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1488 ;;Total ram usage:        2 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_input
  1495 ;;		_checkPassword
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text4
  1501   0030B2                     __ptext4:
  1502                           	callstack 0
  1503   0030B2                     _sevenDisp:
  1504                           	callstack 29
  1505   0030B2                     
  1506                           ;./functions.h: 7:     switch(count)
  1507   0030B2  EF83  F018         	goto	l821
  1508   0030B6                     l799:
  1509                           
  1510                           ;./functions.h: 10:             PORTD=0x3F;
  1511   0030B6  0E3F               	movlw	63
  1512   0030B8  6ECD               	movwf	205,c	;volatile
  1513                           
  1514                           ;./functions.h: 11:             break;
  1515   0030BA  EFB9  F018         	goto	l86
  1516   0030BE                     l801:
  1517                           
  1518                           ;./functions.h: 13:             PORTD=0x06;
  1519   0030BE  0E06               	movlw	6
  1520   0030C0  6ECD               	movwf	205,c	;volatile
  1521                           
  1522                           ;./functions.h: 14:             break;
  1523   0030C2  EFB9  F018         	goto	l86
  1524   0030C6                     l803:
  1525                           
  1526                           ;./functions.h: 16:             PORTD=0x5B;
  1527   0030C6  0E5B               	movlw	91
  1528   0030C8  6ECD               	movwf	205,c	;volatile
  1529                           
  1530                           ;./functions.h: 17:             break;
  1531   0030CA  EFB9  F018         	goto	l86
  1532   0030CE                     l805:
  1533                           
  1534                           ;./functions.h: 19:             PORTD=0x4F;
  1535   0030CE  0E4F               	movlw	79
  1536   0030D0  6ECD               	movwf	205,c	;volatile
  1537                           
  1538                           ;./functions.h: 20:             break;
  1539   0030D2  EFB9  F018         	goto	l86
  1540   0030D6                     l807:
  1541                           
  1542                           ;./functions.h: 22:             PORTD=0x66;
  1543   0030D6  0E66               	movlw	102
  1544   0030D8  6ECD               	movwf	205,c	;volatile
  1545                           
  1546                           ;./functions.h: 23:             break;
  1547   0030DA  EFB9  F018         	goto	l86
  1548   0030DE                     l809:
  1549                           
  1550                           ;./functions.h: 25:             PORTD=0x6D;
  1551   0030DE  0E6D               	movlw	109
  1552   0030E0  6ECD               	movwf	205,c	;volatile
  1553                           
  1554                           ;./functions.h: 26:             break;
  1555   0030E2  EFB9  F018         	goto	l86
  1556   0030E6                     l811:
  1557                           
  1558                           ;./functions.h: 28:             PORTD=0x7D;
  1559   0030E6  0E7D               	movlw	125
  1560   0030E8  6ECD               	movwf	205,c	;volatile
  1561                           
  1562                           ;./functions.h: 29:             break;
  1563   0030EA  EFB9  F018         	goto	l86
  1564   0030EE                     l813:
  1565                           
  1566                           ;./functions.h: 31:             PORTD=0x07;
  1567   0030EE  0E07               	movlw	7
  1568   0030F0  6ECD               	movwf	205,c	;volatile
  1569                           
  1570                           ;./functions.h: 32:             break;
  1571   0030F2  EFB9  F018         	goto	l86
  1572   0030F6                     l815:
  1573                           
  1574                           ;./functions.h: 34:             PORTD=0x7F;
  1575   0030F6  0E7F               	movlw	127
  1576   0030F8  6ECD               	movwf	205,c	;volatile
  1577                           
  1578                           ;./functions.h: 35:             break;
  1579   0030FA  EFB9  F018         	goto	l86
  1580   0030FE                     l817:
  1581                           
  1582                           ;./functions.h: 37:             PORTD=0x6F;
  1583   0030FE  0E6F               	movlw	111
  1584   003100  6ECD               	movwf	205,c	;volatile
  1585                           
  1586                           ;./functions.h: 38:             break;
  1587   003102  EFB9  F018         	goto	l86
  1588   003106                     l821:
  1589   003106  C009  F003         	movff	_count,??_sevenDisp
  1590   00310A  C00A  F004         	movff	_count+1,??_sevenDisp+1
  1591                           
  1592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1593                           ; Switch size 1, requested type "simple"
  1594                           ; Number of cases is 1, Range of values is 0 to 0
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte            4     3 (average)
  1598                           ;	Chosen strategy is simple_byte
  1599   00310E  5004               	movf	(??_sevenDisp+1)^0,w,c
  1600   003110  0A00               	xorlw	0	; case 0
  1601   003112  B4D8               	btfsc	status,2,c
  1602   003114  EF8E  F018         	goto	l965
  1603   003118  EFB9  F018         	goto	l86
  1604   00311C                     l965:
  1605                           
  1606                           ; Switch size 1, requested type "simple"
  1607                           ; Number of cases is 10, Range of values is 0 to 9
  1608                           ; switch strategies available:
  1609                           ; Name         Instructions Cycles
  1610                           ; simple_byte           31    16 (average)
  1611                           ;	Chosen strategy is simple_byte
  1612   00311C  5003               	movf	??_sevenDisp^0,w,c
  1613   00311E  0A00               	xorlw	0	; case 0
  1614   003120  B4D8               	btfsc	status,2,c
  1615   003122  EF5B  F018         	goto	l799
  1616   003126  0A01               	xorlw	1	; case 1
  1617   003128  B4D8               	btfsc	status,2,c
  1618   00312A  EF5F  F018         	goto	l801
  1619   00312E  0A03               	xorlw	3	; case 2
  1620   003130  B4D8               	btfsc	status,2,c
  1621   003132  EF63  F018         	goto	l803
  1622   003136  0A01               	xorlw	1	; case 3
  1623   003138  B4D8               	btfsc	status,2,c
  1624   00313A  EF67  F018         	goto	l805
  1625   00313E  0A07               	xorlw	7	; case 4
  1626   003140  B4D8               	btfsc	status,2,c
  1627   003142  EF6B  F018         	goto	l807
  1628   003146  0A01               	xorlw	1	; case 5
  1629   003148  B4D8               	btfsc	status,2,c
  1630   00314A  EF6F  F018         	goto	l809
  1631   00314E  0A03               	xorlw	3	; case 6
  1632   003150  B4D8               	btfsc	status,2,c
  1633   003152  EF73  F018         	goto	l811
  1634   003156  0A01               	xorlw	1	; case 7
  1635   003158  B4D8               	btfsc	status,2,c
  1636   00315A  EF77  F018         	goto	l813
  1637   00315E  0A0F               	xorlw	15	; case 8
  1638   003160  B4D8               	btfsc	status,2,c
  1639   003162  EF7B  F018         	goto	l815
  1640   003166  0A01               	xorlw	1	; case 9
  1641   003168  B4D8               	btfsc	status,2,c
  1642   00316A  EF7F  F018         	goto	l817
  1643   00316E  EFB9  F018         	goto	l86
  1644   003172                     l86:
  1645   003172  0012               	return		;funcret
  1646   003174                     __end_of_sevenDisp:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _INT0_ISR *****************
  1650 ;; Defined at:
  1651 ;;		line 81 in file "./functions.h"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		Interrupt level 2
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text5
  1679   003330                     __ptext5:
  1680                           	callstack 0
  1681   003330                     _INT0_ISR:
  1682                           	callstack 28
  1683   003330                     
  1684                           ;./functions.h: 83:     if(PIR1bits.INT0IF == 1)
  1685   003330  0139               	movlb	57	; () banked
  1686   003332  A1A1               	btfss	161,0,b	;volatile
  1687   003334  EF9E  F019         	goto	i2u5_41
  1688   003338  EFA0  F019         	goto	i2u5_40
  1689   00333C                     i2u5_41:
  1690   00333C  EFAD  F019         	goto	i2l913
  1691   003340                     i2u5_40:
  1692   003340                     
  1693                           ; BSR set to: 57
  1694                           ;./functions.h: 84:     {;./functions.h: 85:         PORTBbits.RB2 = 1;
  1695   003340  84CB               	bsf	203,2,c	;volatile
  1696   003342                     
  1697                           ; BSR set to: 57
  1698                           ;./functions.h: 86:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1699   003342  0E0B               	movlw	11
  1700   003344  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1701   003346  0E26               	movlw	38
  1702   003348  6E01               	movwf	??_INT0_ISR^0,c
  1703   00334A  0E5E               	movlw	94
  1704   00334C                     i2u13_47:
  1705   00334C  2EE8               	decfsz	wreg,f,c
  1706   00334E  D7FE               	bra	i2u13_47
  1707   003350  2E01               	decfsz	??_INT0_ISR^0,f,c
  1708   003352  D7FC               	bra	i2u13_47
  1709   003354  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1710   003356  D7FA               	bra	i2u13_47
  1711   003358                     
  1712                           ;./functions.h: 87:         PORTBbits.RB2 = 0;
  1713   003358  94CB               	bcf	203,2,c	;volatile
  1714   00335A                     i2l913:
  1715                           
  1716                           ;./functions.h: 89:     PIR1bits.INT0IF = 0;
  1717   00335A  0139               	movlb	57	; () banked
  1718   00335C  91A1               	bcf	161,0,b	;volatile
  1719   00335E                     
  1720                           ; BSR set to: 57
  1721   00335E  0011               	retfie		f
  1722   003360                     __end_of_INT0_ISR:
  1723                           	callstack 0
  1724                           
  1725                           ;
  1726                           ; H/W Interrupt Vector Table @ 0x3008
  1727                           ;
  1728                           
  1729                           	psect	ivt0x3008
  1730   003008                     __pivt0x3008:
  1731                           	callstack 0
  1732   003008                     ivt0x3008_base:
  1733                           	callstack 0
  1734                           
  1735                           ; Vector 0 : SWINT
  1736   003008  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1737                           
  1738                           ; Vector 1 : HLVD
  1739   00300A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1740                           
  1741                           ; Vector 2 : OSF
  1742   00300C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1743                           
  1744                           ; Vector 3 : CSW
  1745   00300E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1746                           
  1747                           ; Vector 4 : NVM
  1748   003010  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1749                           
  1750                           ; Vector 5 : SCAN
  1751   003012  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1752                           
  1753                           ; Vector 6 : CRC
  1754   003014  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1755                           
  1756                           ; Vector 7 : IOC
  1757   003016  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1758                           
  1759                           ; Vector 8 : INT0
  1760   003018  0CCC               	dw	_INT0_ISR shr (0+2)
  1761                           
  1762                           ; Vector 9 : ZCD
  1763   00301A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1764                           
  1765                           ; Vector 10 : AD
  1766   00301C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1767                           
  1768                           ; Vector 11 : ADT
  1769   00301E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1770                           
  1771                           ; Vector 12 : CMP1
  1772   003020  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1773                           
  1774                           ; Vector 13 : SMT1
  1775   003022  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1776                           
  1777                           ; Vector 14 : SMT1PRA
  1778   003024  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1779                           
  1780                           ; Vector 15 : SMT1PRW
  1781   003026  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1782                           
  1783                           ; Vector 16 : DMA1SCNT
  1784   003028  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1785                           
  1786                           ; Vector 17 : DMA1DCNT
  1787   00302A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1788                           
  1789                           ; Vector 18 : DMA1OR
  1790   00302C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1791                           
  1792                           ; Vector 19 : DMA1A
  1793   00302E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1794                           
  1795                           ; Vector 20 : SPI1RX
  1796   003030  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1797                           
  1798                           ; Vector 21 : SPI1TX
  1799   003032  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1800                           
  1801                           ; Vector 22 : SPI1
  1802   003034  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1803                           
  1804                           ; Vector 23 : I2C1RX
  1805   003036  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1806                           
  1807                           ; Vector 24 : I2C1TX
  1808   003038  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1809                           
  1810                           ; Vector 25 : I2C1
  1811   00303A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1812                           
  1813                           ; Vector 26 : I2C1E
  1814   00303C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1815                           
  1816                           ; Vector 27 : U1RX
  1817   00303E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1818                           
  1819                           ; Vector 28 : U1TX
  1820   003040  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1821                           
  1822                           ; Vector 29 : U1E
  1823   003042  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1824                           
  1825                           ; Vector 30 : U1
  1826   003044  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1827                           
  1828                           ; Vector 31 : TMR0
  1829   003046  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1830                           
  1831                           ; Vector 32 : TMR1
  1832   003048  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1833                           
  1834                           ; Vector 33 : TMR1G
  1835   00304A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1836                           
  1837                           ; Vector 34 : TMR2
  1838   00304C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1839                           
  1840                           ; Vector 35 : CCP1
  1841   00304E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1842                           
  1843                           ; Vector 36 : Undefined
  1844   003050  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1845                           
  1846                           ; Vector 37 : NCO1
  1847   003052  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1848                           
  1849                           ; Vector 38 : CWG1
  1850   003054  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1851                           
  1852                           ; Vector 39 : CLC1
  1853   003056  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1854                           
  1855                           ; Vector 40 : INT1
  1856   003058  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1857                           
  1858                           ; Vector 41 : CMP2
  1859   00305A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1860                           
  1861                           ; Vector 42 : DMA2SCNT
  1862   00305C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1863                           
  1864                           ; Vector 43 : DMA2DCNT
  1865   00305E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1866                           
  1867                           ; Vector 44 : DMA2OR
  1868   003060  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1869                           
  1870                           ; Vector 45 : DMA2A
  1871   003062  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1872                           
  1873                           ; Vector 46 : I2C2RX
  1874   003064  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1875                           
  1876                           ; Vector 47 : I2C2TX
  1877   003066  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1878                           
  1879                           ; Vector 48 : I2C2
  1880   003068  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1881                           
  1882                           ; Vector 49 : I2C2E
  1883   00306A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1884                           
  1885                           ; Vector 50 : U2RX
  1886   00306C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1887                           
  1888                           ; Vector 51 : U2TX
  1889   00306E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1890                           
  1891                           ; Vector 52 : U2E
  1892   003070  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1893                           
  1894                           ; Vector 53 : U2
  1895   003072  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1896                           
  1897                           ; Vector 54 : TMR3
  1898   003074  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1899                           
  1900                           ; Vector 55 : TMR3G
  1901   003076  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1902                           
  1903                           ; Vector 56 : TMR4
  1904   003078  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1905                           
  1906                           ; Vector 57 : CCP2
  1907   00307A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1908                           
  1909                           ; Vector 58 : Undefined
  1910   00307C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1911                           
  1912                           ; Vector 59 : CWG2
  1913   00307E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1914                           
  1915                           ; Vector 60 : CLC2
  1916   003080  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1917                           
  1918                           ; Vector 61 : INT2
  1919   003082  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1920                           
  1921                           ; Vector 62 : Undefined
  1922   003084  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1923                           
  1924                           ; Vector 63 : Undefined
  1925   003086  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1926                           
  1927                           ; Vector 64 : Undefined
  1928   003088  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1929                           
  1930                           ; Vector 65 : Undefined
  1931   00308A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1932                           
  1933                           ; Vector 66 : Undefined
  1934   00308C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1935                           
  1936                           ; Vector 67 : Undefined
  1937   00308E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1938                           
  1939                           ; Vector 68 : Undefined
  1940   003090  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1941                           
  1942                           ; Vector 69 : Undefined
  1943   003092  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1944                           
  1945                           ; Vector 70 : TMR5
  1946   003094  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1947                           
  1948                           ; Vector 71 : TMR5G
  1949   003096  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1950                           
  1951                           ; Vector 72 : TMR6
  1952   003098  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1953                           
  1954                           ; Vector 73 : CCP3
  1955   00309A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1956                           
  1957                           ; Vector 74 : CWG3
  1958   00309C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1959                           
  1960                           ; Vector 75 : CLC3
  1961   00309E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1962                           
  1963                           ; Vector 76 : Undefined
  1964   0030A0  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1965                           
  1966                           ; Vector 77 : Undefined
  1967   0030A2  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1968                           
  1969                           ; Vector 78 : Undefined
  1970   0030A4  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1971                           
  1972                           ; Vector 79 : Undefined
  1973   0030A6  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1974                           
  1975                           ; Vector 80 : CCP4
  1976   0030A8  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1977                           
  1978                           ; Vector 81 : CLC4
  1979   0030AA  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1980   0030AC                     ivt0x3008_undefint:
  1981                           	callstack 0
  1982   0030AC  00FF               	reset	
  1983                           
  1984                           	psect	smallconst
  1985   002000                     __psmallconst:
  1986                           	callstack 0
  1987   002000  00                 	db	0
  1988   002001  00                 	db	0	; dummy byte at the end
  1989   002000                     __smallconst    set	__psmallconst
  1990   002000                     __mediumconst   set	__psmallconst
  1991   000003                     __activetblptr  equ	3
  1992                           
  1993                           	psect	rparam
  1994   000001                     ___rparam_used  equ	1
  1995   000000                     ___param_bank   equ	0
  1996   000000                     __Lparam        equ	__Lrparam
  1997   000000                     __Hparam        equ	__Hrparam
  1998                           
  1999                           	psect	config
  2000                           
  2001                           ;Config register CONFIG1L @ 0x300000
  2002                           ;	External Oscillator Selection
  2003                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2004                           ;	Reset Oscillator Selection
  2005                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2006   300000                     	org	3145728
  2007   300000  F8                 	db	248
  2008                           
  2009                           ;Config register CONFIG1H @ 0x300001
  2010                           ;	Clock out Enable bit
  2011                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2012                           ;	PRLOCKED One-Way Set Enable bit
  2013                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2014                           ;	Clock Switch Enable bit
  2015                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2016                           ;	Fail-Safe Clock Monitor Enable bit
  2017                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2018   300001                     	org	3145729
  2019   300001  FF                 	db	255
  2020                           
  2021                           ;Config register CONFIG2L @ 0x300002
  2022                           ;	MCLR Enable bit
  2023                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2024                           ;	Power-up timer selection bits
  2025                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2026                           ;	Multi-vector enable bit
  2027                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2028                           ;	IVTLOCK bit One-way set enable bit
  2029                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2030                           ;	Low Power BOR Enable bit
  2031                           ;	LPBOREN = OFF, ULPBOR disabled
  2032                           ;	Brown-out Reset Enable bits
  2033                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2034   300002                     	org	3145730
  2035   300002  FF                 	db	255
  2036                           
  2037                           ;Config register CONFIG2H @ 0x300003
  2038                           ;	Brown-out Reset Voltage Selection bits
  2039                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2040                           ;	ZCD Disable bit
  2041                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2042                           ;	PPSLOCK bit One-Way Set Enable bit
  2043                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2044                           ;	Stack Full/Underflow Reset Enable bit
  2045                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2046                           ;	Debugger Enable bit
  2047                           ;	DEBUG = OFF, Background debugger disabled
  2048                           ;	Extended Instruction Set Enable bit
  2049                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2050   300003                     	org	3145731
  2051   300003  FF                 	db	255
  2052                           
  2053                           ;Config register CONFIG3L @ 0x300004
  2054                           ;	WDT Period selection bits
  2055                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2056                           ;	WDT operating mode
  2057                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2058   300004                     	org	3145732
  2059   300004  9F                 	db	159
  2060                           
  2061                           ;Config register CONFIG3H @ 0x300005
  2062                           ;	WDT Window Select bits
  2063                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2064                           ;	WDT input clock selector
  2065                           ;	WDTCCS = SC, Software Control
  2066   300005                     	org	3145733
  2067   300005  FF                 	db	255
  2068                           
  2069                           ;Config register CONFIG4L @ 0x300006
  2070                           ;	Boot Block Size selection bits
  2071                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2072                           ;	Boot Block enable bit
  2073                           ;	BBEN = OFF, Boot block disabled
  2074                           ;	Storage Area Flash enable bit
  2075                           ;	SAFEN = OFF, SAF disabled
  2076                           ;	Application Block write protection bit
  2077                           ;	WRTAPP = OFF, Application Block not write protected
  2078   300006                     	org	3145734
  2079   300006  FF                 	db	255
  2080                           
  2081                           ;Config register CONFIG4H @ 0x300007
  2082                           ;	Boot Block Write Protection bit
  2083                           ;	WRTB = OFF, Boot Block not write-protected
  2084                           ;	Configuration Register Write Protection bit
  2085                           ;	WRTC = OFF, Configuration registers not write-protected
  2086                           ;	Data EEPROM Write Protection bit
  2087                           ;	WRTD = OFF, Data EEPROM not write-protected
  2088                           ;	SAF Write protection bit
  2089                           ;	WRTSAF = OFF, SAF not Write Protected
  2090                           ;	Low Voltage Programming Enable bit
  2091                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2092   300007                     	org	3145735
  2093   300007  FF                 	db	255
  2094                           
  2095                           ;Config register CONFIG5L @ 0x300008
  2096                           ;	PFM and Data EEPROM Code Protection bit
  2097                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2098   300008                     	org	3145736
  2099   300008  FF                 	db	255
  2100                           
  2101                           ;Config register CONFIG5H @ 0x300009
  2102                           ;	unspecified, using default values
  2103   300009                     	org	3145737
  2104   300009  FF                 	db	255
  2105                           tosu	equ	0x3FFF
  2106                           tosh	equ	0x3FFE
  2107                           tosl	equ	0x3FFD
  2108                           stkptr	equ	0x3FFC
  2109                           pclatu	equ	0x3FFB
  2110                           pclath	equ	0x3FFA
  2111                           pcl	equ	0x3FF9
  2112                           tblptru	equ	0x3FF8
  2113                           tblptrh	equ	0x3FF7
  2114                           tblptrl	equ	0x3FF6
  2115                           tablat	equ	0x3FF5
  2116                           prodh	equ	0x3FF4
  2117                           prodl	equ	0x3FF3
  2118                           indf0	equ	0x3FEF
  2119                           postinc0	equ	0x3FEE
  2120                           postdec0	equ	0x3FED
  2121                           preinc0	equ	0x3FEC
  2122                           plusw0	equ	0x3FEB
  2123                           fsr0h	equ	0x3FEA
  2124                           fsr0l	equ	0x3FE9
  2125                           wreg	equ	0x3FE8
  2126                           indf1	equ	0x3FE7
  2127                           postinc1	equ	0x3FE6
  2128                           postdec1	equ	0x3FE5
  2129                           preinc1	equ	0x3FE4
  2130                           plusw1	equ	0x3FE3
  2131                           fsr1h	equ	0x3FE2
  2132                           fsr1l	equ	0x3FE1
  2133                           bsr	equ	0x3FE0
  2134                           indf2	equ	0x3FDF
  2135                           postinc2	equ	0x3FDE
  2136                           postdec2	equ	0x3FDD
  2137                           preinc2	equ	0x3FDC
  2138                           plusw2	equ	0x3FDB
  2139                           fsr2h	equ	0x3FDA
  2140                           fsr2l	equ	0x3FD9
  2141                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      8      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_checkPassword
    _main->_input
    _input->_sevenDisp
    _checkPassword->_sevenDisp

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              6 COMRAM     2     2      0
                      _checkPassword
                         _initialize
                              _input
                          _sevenDisp
 ---------------------------------------------------------------------------------
 (1) _input                                                2     2      0       0
                                              4 COMRAM     2     2      0
                          _sevenDisp
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPassword                                        2     2      0       0
                                              4 COMRAM     2     2      0
                          _sevenDisp
 ---------------------------------------------------------------------------------
 (1) _sevenDisp                                            2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPassword
     _sevenDisp
   _initialize
   _input
     _sevenDisp
   _sevenDisp

 _INT0_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1576      0       0      0.0%
BITBIGSFRlll       385      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      8      15     15.8%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRllh        31      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      15      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 15 16:12:14 2025

                     l90 32E0                       l67 327A                       l86 3172  
                     l94 332E                       l97 32C0                       l89 331E  
                     l99 32DA                       u10 32EE                       u11 32EA  
                     u20 331A                       u21 3316                       u30 332E  
                     u31 332A                       u40 32A0                       u41 329C  
                     u60 3194                       u61 3190                       u70 31EE  
                     u71 31EA                       u87 319E                       u97 31F8  
  __end_of_checkPassword 32DC                      l112 3174                      l801 30BE  
                    l811 30E6                      l803 30C6                      l813 30EE  
                    l805 30CE                      l821 3106                      l901 32D8  
                    l815 30F6                      l807 30D6                      l831 3228  
                    l817 30FE                      l809 30DE                      l841 3236  
                    l833 322A                      l921 3180                      l851 3240  
                    l843 3238                      l835 322C                      l827 321C  
                    l931 31CA                      l923 3184                      l861 3262  
                    l853 3242                      l845 323A                      l837 322E  
                    l829 3224                      l941 3204                      l933 31D2  
                    l925 3194                      l917 3174                      l871 326E  
                    l863 3264                      l855 3244                      l847 323C  
                    l839 3234                      l943 3210                      l935 31DA  
                    l927 31AA                      l919 3178                      l873 3270  
                    l865 3266                      l857 3246                      l849 323E  
                    l881 32F6                      l937 31DE                      l929 31C8  
                    l891 3288                      l867 3268                      l859 3260  
                    l883 330C                      l875 32DC                      l939 31EE  
                    l965 311C                      l797 30B2                      l893 32A0  
                    l869 326C                      l885 331A                      l877 32EE  
                    l799 30B6                      l895 32A2                      l887 327C  
                    l879 32F2                      l897 32BA                      l889 3284  
                    l899 32C2                      u107 3300                      u117 32AC  
                    u127 32CC                      wreg 3FE8                     _LATA 3FBA  
                   _LATB 3FBB                     _LATC 3FBC                     _LATD 3FBD  
                   _WPUA 3A41                     _WPUB 3A51                     _code 000E  
                   _main 3174                     prodh 3FF4                     prodl 3FF3  
                   start 30AE             ___param_bank 0000         __end_of_INT0_ISR 3360  
                  ?_main 0001                    i2l105 335E                    i2l911 3358  
                  i2l913 335A                    i2l905 3330                    i2l907 3340  
                  i2l909 3342                    _PORTA 3FCA                    _PORTB 3FCB  
                  _PORTC 3FCC                    _PORTD 3FCD                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISC 3FC4                    _TRISD 3FC5  
                  _count 0009                    _input 32DC                    status 3FD8  
        __initialization 3360             __end_of_main 321C                   ??_main 0007  
          __activetblptr 0003                   ?_input 0001                   _ANSELA 3A40  
                 _ANSELB 3A50                   _ANSELC 3A60                   _ANSELD 3A70  
                 i2u5_40 3340                   i2u5_41 333C                   isa$std 0001  
           __mediumconst 2000               __accesstop 0060  __end_of__initialization 3376  
              ?_INT0_ISR 0001            ___rparam_used 0001           __pcstackCOMRAM 0001  
          __end_of_input 3330                  ??_input 0005               ??_INT0_ISR 0001  
             __pnvCOMRAM 000E                  IVTBASEH 3FD6                  IVTBASEL 3FD5  
                IVTBASEU 3FD7                  i2u13_47 334C                  __Hparam 0000  
                __Lparam 0000             __psmallconst 2000            ivt0x3008_base 3008  
                __pcinit 3360                  __ramtop 2000               _initialize 321C  
                __ptext0 3174                  __ptext1 32DC                  __ptext2 321C  
                __ptext3 327C                  __ptext4 30B2                  __ptext5 3330  
                _confirm 000D     end_of_initialization 3376        __end_of_sevenDisp 3174  
          _checkPassword 327C                _PORTAbits 3FCA                _PORTBbits 3FCB  
         ?_checkPassword 0001              ?_initialize 0001      start_initialization 3360  
            __pbssCOMRAM 0009              __pivt0x3008 3008        ivt0x3008_undefint 30AC  
        ??_checkPassword 0005              __smallconst 2000                 _INT0_ISR 3330  
               _IPR1bits 3981                 _PIE1bits 3991                 _IVTBASEH 3FD6  
               _IVTBASEL 3FD5                 _IVTBASEU 3FD7                 _PIR1bits 39A1  
              _sevenDisp 30B2              _INTCON0bits 3FD2                 __Hrparam 0000  
               __Lrparam 0000               ?_sevenDisp 0001             ??_initialize 0003  
     __end_of_initialize 327C                 _password 000B                 isa$xinst 0000  
               intlevel2 0000              ??_sevenDisp 0003  
