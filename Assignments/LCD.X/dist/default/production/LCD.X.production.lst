

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 22:39:53 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=4,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	ivt0x6008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 12/10/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F47K42 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   003FE0                     bsr             equ	16352
    87   003FE9                     fsr0            equ	16361
    88   003FEA                     fsr0h           equ	16362
    89   003FE9                     fsr0l           equ	16361
    90   003FE1                     fsr1            equ	16353
    91   003FE2                     fsr1h           equ	16354
    92   003FE1                     fsr1l           equ	16353
    93   003FD9                     fsr2            equ	16345
    94   003FDA                     fsr2h           equ	16346
    95   003FD9                     fsr2l           equ	16345
    96   003FEF                     indf0           equ	16367
    97   003FE7                     indf1           equ	16359
    98   003FDF                     indf2           equ	16351
    99   003FD2                     intcon          equ	16338
   100   0039E5                     nvmcon          equ	14821
   101   003FF9                     pcl             equ	16377
   102   003FFA                     pclath          equ	16378
   103   003FFB                     pclatu          equ	16379
   104   003FEB                     plusw0          equ	16363
   105   003FE3                     plusw1          equ	16355
   106   003FDB                     plusw2          equ	16347
   107   003FED                     postdec0        equ	16365
   108   003FE5                     postdec1        equ	16357
   109   003FDD                     postdec2        equ	16349
   110   003FEE                     postinc0        equ	16366
   111   003FE6                     postinc1        equ	16358
   112   003FDE                     postinc2        equ	16350
   113   003FEC                     preinc0         equ	16364
   114   003FE4                     preinc1         equ	16356
   115   003FDC                     preinc2         equ	16348
   116   003FF3                     prod            equ	16371
   117   003FF4                     prodh           equ	16372
   118   003FF3                     prodl           equ	16371
   119   003FD8                     status          equ	16344
   120   003FF5                     tablat          equ	16373
   121   003FF6                     tblptr          equ	16374
   122   003FF7                     tblptrh         equ	16375
   123   003FF6                     tblptrl         equ	16374
   124   003FF8                     tblptru         equ	16376
   125   003FFD                     tosl            equ	16381
   126   003FE8                     wreg            equ	16360
   127   003880                     STATUS_CSHAD    equ	14464	;# 
   128   003881                     WREG_CSHAD      equ	14465	;# 
   129   003882                     BSR_CSHAD       equ	14466	;# 
   130   003883                     SHADCON         equ	14467	;# 
   131   003884                     STATUS_SHAD     equ	14468	;# 
   132   003885                     WREG_SHAD       equ	14469	;# 
   133   003886                     BSR_SHAD        equ	14470	;# 
   134   003887                     PCLATH_SHAD     equ	14471	;# 
   135   003888                     PCLATU_SHAD     equ	14472	;# 
   136   003889                     FSR0SH          equ	14473	;# 
   137   003889                     FSR0L_SHAD      equ	14473	;# 
   138   00388A                     FSR0H_SHAD      equ	14474	;# 
   139   00388B                     FSR1SH          equ	14475	;# 
   140   00388B                     FSR1L_SHAD      equ	14475	;# 
   141   00388C                     FSR1H_SHAD      equ	14476	;# 
   142   00388D                     FSR2SH          equ	14477	;# 
   143   00388D                     FSR2L_SHAD      equ	14477	;# 
   144   00388E                     FSR2H_SHAD      equ	14478	;# 
   145   00388F                     PRODSH          equ	14479	;# 
   146   00388F                     PRODL_SHAD      equ	14479	;# 
   147   003890                     PRODH_SHAD      equ	14480	;# 
   148   00389D                     IVTADL          equ	14493	;# 
   149   00389E                     IVTADH          equ	14494	;# 
   150   00389F                     IVTADU          equ	14495	;# 
   151   00395B                     WDTCON0         equ	14683	;# 
   152   00395C                     WDTCON1         equ	14684	;# 
   153   00395D                     WDTPSL          equ	14685	;# 
   154   00395E                     WDTPSH          equ	14686	;# 
   155   00395F                     WDTTMR          equ	14687	;# 
   156   003960                     CRCDATA         equ	14688	;# 
   157   003960                     CRCDATL         equ	14688	;# 
   158   003961                     CRCDATH         equ	14689	;# 
   159   003962                     CRCACC          equ	14690	;# 
   160   003962                     CRCACCL         equ	14690	;# 
   161   003963                     CRCACCH         equ	14691	;# 
   162   003964                     CRCSHFT         equ	14692	;# 
   163   003964                     CRCSHIFTL       equ	14692	;# 
   164   003965                     CRCSHIFTH       equ	14693	;# 
   165   003966                     CRCXOR          equ	14694	;# 
   166   003966                     CRCXORL         equ	14694	;# 
   167   003967                     CRCXORH         equ	14695	;# 
   168   003968                     CRCCON0         equ	14696	;# 
   169   003969                     CRCCON1         equ	14697	;# 
   170   003976                     SCANLADR        equ	14710	;# 
   171   003976                     SCANLADRL       equ	14710	;# 
   172   003977                     SCANLADRH       equ	14711	;# 
   173   003978                     SCANLADRU       equ	14712	;# 
   174   003979                     SCANHADR        equ	14713	;# 
   175   003979                     SCANHADRL       equ	14713	;# 
   176   00397A                     SCANHADRH       equ	14714	;# 
   177   00397B                     SCANHADRU       equ	14715	;# 
   178   00397C                     SCANCON0        equ	14716	;# 
   179   00397D                     SCANTRIG        equ	14717	;# 
   180   003980                     IPR0            equ	14720	;# 
   181   003981                     IPR1            equ	14721	;# 
   182   003982                     IPR2            equ	14722	;# 
   183   003983                     IPR3            equ	14723	;# 
   184   003984                     IPR4            equ	14724	;# 
   185   003985                     IPR5            equ	14725	;# 
   186   003986                     IPR6            equ	14726	;# 
   187   003987                     IPR7            equ	14727	;# 
   188   003988                     IPR8            equ	14728	;# 
   189   003989                     IPR9            equ	14729	;# 
   190   00398A                     IPR10           equ	14730	;# 
   191   003990                     PIE0            equ	14736	;# 
   192   003991                     PIE1            equ	14737	;# 
   193   003992                     PIE2            equ	14738	;# 
   194   003993                     PIE3            equ	14739	;# 
   195   003994                     PIE4            equ	14740	;# 
   196   003995                     PIE5            equ	14741	;# 
   197   003996                     PIE6            equ	14742	;# 
   198   003997                     PIE7            equ	14743	;# 
   199   003998                     PIE8            equ	14744	;# 
   200   003999                     PIE9            equ	14745	;# 
   201   00399A                     PIE10           equ	14746	;# 
   202   0039A0                     PIR0            equ	14752	;# 
   203   0039A1                     PIR1            equ	14753	;# 
   204   0039A2                     PIR2            equ	14754	;# 
   205   0039A3                     PIR3            equ	14755	;# 
   206   0039A4                     PIR4            equ	14756	;# 
   207   0039A5                     PIR5            equ	14757	;# 
   208   0039A6                     PIR6            equ	14758	;# 
   209   0039A7                     PIR7            equ	14759	;# 
   210   0039A8                     PIR8            equ	14760	;# 
   211   0039A9                     PIR9            equ	14761	;# 
   212   0039AA                     PIR10           equ	14762	;# 
   213   0039C0                     PMD0            equ	14784	;# 
   214   0039C1                     PMD1            equ	14785	;# 
   215   0039C2                     PMD2            equ	14786	;# 
   216   0039C3                     PMD3            equ	14787	;# 
   217   0039C4                     PMD4            equ	14788	;# 
   218   0039C5                     PMD5            equ	14789	;# 
   219   0039C6                     PMD6            equ	14790	;# 
   220   0039C7                     PMD7            equ	14791	;# 
   221   0039D0                     BORCON          equ	14800	;# 
   222   0039D1                     VREGCON         equ	14801	;# 
   223   0039D8                     CPUDOZE         equ	14808	;# 
   224   0039D9                     OSCCON1         equ	14809	;# 
   225   0039DA                     OSCCON2         equ	14810	;# 
   226   0039DB                     OSCCON3         equ	14811	;# 
   227   0039DC                     OSCSTAT         equ	14812	;# 
   228   0039DC                     OSCSTAT1        equ	14812	;# 
   229   0039DD                     OSCEN           equ	14813	;# 
   230   0039DE                     OSCTUNE         equ	14814	;# 
   231   0039DF                     OSCFRQ          equ	14815	;# 
   232   0039E0                     NVMADRL         equ	14816	;# 
   233   0039E1                     NVMADRH         equ	14817	;# 
   234   0039E3                     NVMDAT          equ	14819	;# 
   235   0039E5                     NVMCON1         equ	14821	;# 
   236   0039E6                     NVMCON2         equ	14822	;# 
   237   0039EF                     PRLOCK          equ	14831	;# 
   238   0039F1                     ISRPR           equ	14833	;# 
   239   0039F2                     MAINPR          equ	14834	;# 
   240   0039F3                     DMA1PR          equ	14835	;# 
   241   0039F4                     DMA2PR          equ	14836	;# 
   242   0039F7                     SCANPR          equ	14839	;# 
   243   003A00                     RA0PPS          equ	14848	;# 
   244   003A01                     RA1PPS          equ	14849	;# 
   245   003A02                     RA2PPS          equ	14850	;# 
   246   003A03                     RA3PPS          equ	14851	;# 
   247   003A04                     RA4PPS          equ	14852	;# 
   248   003A05                     RA5PPS          equ	14853	;# 
   249   003A06                     RA6PPS          equ	14854	;# 
   250   003A07                     RA7PPS          equ	14855	;# 
   251   003A08                     RB0PPS          equ	14856	;# 
   252   003A09                     RB1PPS          equ	14857	;# 
   253   003A0A                     RB2PPS          equ	14858	;# 
   254   003A0B                     RB3PPS          equ	14859	;# 
   255   003A0C                     RB4PPS          equ	14860	;# 
   256   003A0D                     RB5PPS          equ	14861	;# 
   257   003A0E                     RB6PPS          equ	14862	;# 
   258   003A0F                     RB7PPS          equ	14863	;# 
   259   003A10                     RC0PPS          equ	14864	;# 
   260   003A11                     RC1PPS          equ	14865	;# 
   261   003A12                     RC2PPS          equ	14866	;# 
   262   003A13                     RC3PPS          equ	14867	;# 
   263   003A14                     RC4PPS          equ	14868	;# 
   264   003A15                     RC5PPS          equ	14869	;# 
   265   003A16                     RC6PPS          equ	14870	;# 
   266   003A17                     RC7PPS          equ	14871	;# 
   267   003A18                     RD0PPS          equ	14872	;# 
   268   003A19                     RD1PPS          equ	14873	;# 
   269   003A1A                     RD2PPS          equ	14874	;# 
   270   003A1B                     RD3PPS          equ	14875	;# 
   271   003A1C                     RD4PPS          equ	14876	;# 
   272   003A1D                     RD5PPS          equ	14877	;# 
   273   003A1E                     RD6PPS          equ	14878	;# 
   274   003A1F                     RD7PPS          equ	14879	;# 
   275   003A20                     RE0PPS          equ	14880	;# 
   276   003A21                     RE1PPS          equ	14881	;# 
   277   003A22                     RE2PPS          equ	14882	;# 
   278   003A40                     ANSELA          equ	14912	;# 
   279   003A41                     WPUA            equ	14913	;# 
   280   003A42                     ODCONA          equ	14914	;# 
   281   003A43                     SLRCONA         equ	14915	;# 
   282   003A44                     INLVLA          equ	14916	;# 
   283   003A45                     IOCAP           equ	14917	;# 
   284   003A46                     IOCAN           equ	14918	;# 
   285   003A47                     IOCAF           equ	14919	;# 
   286   003A50                     ANSELB          equ	14928	;# 
   287   003A51                     WPUB            equ	14929	;# 
   288   003A52                     ODCONB          equ	14930	;# 
   289   003A53                     SLRCONB         equ	14931	;# 
   290   003A54                     INLVLB          equ	14932	;# 
   291   003A55                     IOCBP           equ	14933	;# 
   292   003A56                     IOCBN           equ	14934	;# 
   293   003A57                     IOCBF           equ	14935	;# 
   294   003A5A                     RB1I2C          equ	14938	;# 
   295   003A5B                     RB2I2C          equ	14939	;# 
   296   003A60                     ANSELC          equ	14944	;# 
   297   003A61                     WPUC            equ	14945	;# 
   298   003A62                     ODCONC          equ	14946	;# 
   299   003A63                     SLRCONC         equ	14947	;# 
   300   003A64                     INLVLC          equ	14948	;# 
   301   003A65                     IOCCP           equ	14949	;# 
   302   003A66                     IOCCN           equ	14950	;# 
   303   003A67                     IOCCF           equ	14951	;# 
   304   003A6A                     RC3I2C          equ	14954	;# 
   305   003A6B                     RC4I2C          equ	14955	;# 
   306   003A70                     ANSELD          equ	14960	;# 
   307   003A71                     WPUD            equ	14961	;# 
   308   003A72                     ODCOND          equ	14962	;# 
   309   003A73                     SLRCOND         equ	14963	;# 
   310   003A74                     INLVLD          equ	14964	;# 
   311   003A7A                     RD0I2C          equ	14970	;# 
   312   003A7B                     RD1I2C          equ	14971	;# 
   313   003A80                     ANSELE          equ	14976	;# 
   314   003A81                     WPUE            equ	14977	;# 
   315   003A82                     ODCONE          equ	14978	;# 
   316   003A83                     SLRCONE         equ	14979	;# 
   317   003A84                     INLVLE          equ	14980	;# 
   318   003A85                     IOCEP           equ	14981	;# 
   319   003A86                     IOCEN           equ	14982	;# 
   320   003A87                     IOCEF           equ	14983	;# 
   321   003ABF                     PPSLOCK         equ	15039	;# 
   322   003AC0                     INT0PPS         equ	15040	;# 
   323   003AC1                     INT1PPS         equ	15041	;# 
   324   003AC2                     INT2PPS         equ	15042	;# 
   325   003AC3                     T0CKIPPS        equ	15043	;# 
   326   003AC4                     T1CKIPPS        equ	15044	;# 
   327   003AC5                     T1GPPS          equ	15045	;# 
   328   003AC6                     T3CKIPPS        equ	15046	;# 
   329   003AC7                     T3GPPS          equ	15047	;# 
   330   003AC8                     T5CKIPPS        equ	15048	;# 
   331   003AC9                     T5GPPS          equ	15049	;# 
   332   003ACA                     T2INPPS         equ	15050	;# 
   333   003ACB                     T4INPPS         equ	15051	;# 
   334   003ACC                     T6INPPS         equ	15052	;# 
   335   003ACD                     CCP1PPS         equ	15053	;# 
   336   003ACE                     CCP2PPS         equ	15054	;# 
   337   003ACF                     CCP3PPS         equ	15055	;# 
   338   003AD0                     CCP4PPS         equ	15056	;# 
   339   003AD1                     SMT1WINPPS      equ	15057	;# 
   340   003AD2                     SMT1SIGPPS      equ	15058	;# 
   341   003AD3                     CWG1INPPS       equ	15059	;# 
   342   003AD4                     CWG2INPPS       equ	15060	;# 
   343   003AD5                     CWG3INPPS       equ	15061	;# 
   344   003AD6                     MD1CARLPPS      equ	15062	;# 
   345   003AD7                     MD1CARHPPS      equ	15063	;# 
   346   003AD8                     MD1SRCPPS       equ	15064	;# 
   347   003AD9                     CLCIN0PPS       equ	15065	;# 
   348   003ADA                     CLCIN1PPS       equ	15066	;# 
   349   003ADB                     CLCIN2PPS       equ	15067	;# 
   350   003ADC                     CLCIN3PPS       equ	15068	;# 
   351   003ADD                     ADACTPPS        equ	15069	;# 
   352   003ADE                     SPI1SCKPPS      equ	15070	;# 
   353   003ADF                     SPI1SDIPPS      equ	15071	;# 
   354   003AE0                     SPI1SSPPS       equ	15072	;# 
   355   003AE1                     I2C1SCLPPS      equ	15073	;# 
   356   003AE2                     I2C1SDAPPS      equ	15074	;# 
   357   003AE3                     I2C2SCLPPS      equ	15075	;# 
   358   003AE4                     I2C2SDAPPS      equ	15076	;# 
   359   003AE5                     U1RXPPS         equ	15077	;# 
   360   003AE6                     U1CTSPPS        equ	15078	;# 
   361   003AE8                     U2RXPPS         equ	15080	;# 
   362   003AE9                     U2CTSPPS        equ	15081	;# 
   363   003BC9                     DMA2BUF         equ	15305	;# 
   364   003BCA                     DMA2DCNT        equ	15306	;# 
   365   003BCA                     DMA2DCNTL       equ	15306	;# 
   366   003BCB                     DMA2DCNTH       equ	15307	;# 
   367   003BCC                     DMA2DPTR        equ	15308	;# 
   368   003BCC                     DMA2DPTRL       equ	15308	;# 
   369   003BCD                     DMA2DPTRH       equ	15309	;# 
   370   003BCE                     DMA2DSZ         equ	15310	;# 
   371   003BCE                     DMA2DSZL        equ	15310	;# 
   372   003BCF                     DMA2DSZH        equ	15311	;# 
   373   003BD0                     DMA2DSA         equ	15312	;# 
   374   003BD0                     DMA2DSAL        equ	15312	;# 
   375   003BD1                     DMA2DSAH        equ	15313	;# 
   376   003BD2                     DMA2SCNT        equ	15314	;# 
   377   003BD2                     DMA2SCNTL       equ	15314	;# 
   378   003BD3                     DMA2SCNTH       equ	15315	;# 
   379   003BD4                     DMA2SPTR        equ	15316	;# 
   380   003BD4                     DMA2SPTRL       equ	15316	;# 
   381   003BD5                     DMA2SPTRH       equ	15317	;# 
   382   003BD6                     DMA2SPTRU       equ	15318	;# 
   383   003BD7                     DMA2SSZ         equ	15319	;# 
   384   003BD7                     DMA2SSZL        equ	15319	;# 
   385   003BD8                     DMA2SSZH        equ	15320	;# 
   386   003BD9                     DMA2SSA         equ	15321	;# 
   387   003BD9                     DMA2SSAL        equ	15321	;# 
   388   003BDA                     DMA2SSAH        equ	15322	;# 
   389   003BDB                     DMA2SSAU        equ	15323	;# 
   390   003BDC                     DMA2CON0        equ	15324	;# 
   391   003BDD                     DMA2CON1        equ	15325	;# 
   392   003BDE                     DMA2AIRQ        equ	15326	;# 
   393   003BDF                     DMA2SIRQ        equ	15327	;# 
   394   003BE9                     DMA1BUF         equ	15337	;# 
   395   003BEA                     DMA1DCNT        equ	15338	;# 
   396   003BEA                     DMA1DCNTL       equ	15338	;# 
   397   003BEB                     DMA1DCNTH       equ	15339	;# 
   398   003BEC                     DMA1DPTR        equ	15340	;# 
   399   003BEC                     DMA1DPTRL       equ	15340	;# 
   400   003BED                     DMA1DPTRH       equ	15341	;# 
   401   003BEE                     DMA1DSZ         equ	15342	;# 
   402   003BEE                     DMA1DSZL        equ	15342	;# 
   403   003BEF                     DMA1DSZH        equ	15343	;# 
   404   003BF0                     DMA1DSA         equ	15344	;# 
   405   003BF0                     DMA1DSAL        equ	15344	;# 
   406   003BF1                     DMA1DSAH        equ	15345	;# 
   407   003BF2                     DMA1SCNT        equ	15346	;# 
   408   003BF2                     DMA1SCNTL       equ	15346	;# 
   409   003BF3                     DMA1SCNTH       equ	15347	;# 
   410   003BF4                     DMA1SPTR        equ	15348	;# 
   411   003BF4                     DMA1SPTRL       equ	15348	;# 
   412   003BF5                     DMA1SPTRH       equ	15349	;# 
   413   003BF6                     DMA1SPTRU       equ	15350	;# 
   414   003BF7                     DMA1SSZ         equ	15351	;# 
   415   003BF7                     DMA1SSZL        equ	15351	;# 
   416   003BF8                     DMA1SSZH        equ	15352	;# 
   417   003BF9                     DMA1SSA         equ	15353	;# 
   418   003BF9                     DMA1SSAL        equ	15353	;# 
   419   003BFA                     DMA1SSAH        equ	15354	;# 
   420   003BFB                     DMA1SSAU        equ	15355	;# 
   421   003BFC                     DMA1CON0        equ	15356	;# 
   422   003BFD                     DMA1CON1        equ	15357	;# 
   423   003BFE                     DMA1AIRQ        equ	15358	;# 
   424   003BFF                     DMA1SIRQ        equ	15359	;# 
   425   003C56                     CLC4CON         equ	15446	;# 
   426   003C57                     CLC4POL         equ	15447	;# 
   427   003C58                     CLC4SEL0        equ	15448	;# 
   428   003C59                     CLC4SEL1        equ	15449	;# 
   429   003C5A                     CLC4SEL2        equ	15450	;# 
   430   003C5B                     CLC4SEL3        equ	15451	;# 
   431   003C5C                     CLC4GLS0        equ	15452	;# 
   432   003C5D                     CLC4GLS1        equ	15453	;# 
   433   003C5E                     CLC4GLS2        equ	15454	;# 
   434   003C5F                     CLC4GLS3        equ	15455	;# 
   435   003C60                     CLC3CON         equ	15456	;# 
   436   003C61                     CLC3POL         equ	15457	;# 
   437   003C62                     CLC3SEL0        equ	15458	;# 
   438   003C63                     CLC3SEL1        equ	15459	;# 
   439   003C64                     CLC3SEL2        equ	15460	;# 
   440   003C65                     CLC3SEL3        equ	15461	;# 
   441   003C66                     CLC3GLS0        equ	15462	;# 
   442   003C67                     CLC3GLS1        equ	15463	;# 
   443   003C68                     CLC3GLS2        equ	15464	;# 
   444   003C69                     CLC3GLS3        equ	15465	;# 
   445   003C6A                     CLC2CON         equ	15466	;# 
   446   003C6B                     CLC2POL         equ	15467	;# 
   447   003C6C                     CLC2SEL0        equ	15468	;# 
   448   003C6D                     CLC2SEL1        equ	15469	;# 
   449   003C6E                     CLC2SEL2        equ	15470	;# 
   450   003C6F                     CLC2SEL3        equ	15471	;# 
   451   003C70                     CLC2GLS0        equ	15472	;# 
   452   003C71                     CLC2GLS1        equ	15473	;# 
   453   003C72                     CLC2GLS2        equ	15474	;# 
   454   003C73                     CLC2GLS3        equ	15475	;# 
   455   003C74                     CLC1CON         equ	15476	;# 
   456   003C75                     CLC1POL         equ	15477	;# 
   457   003C76                     CLC1SEL0        equ	15478	;# 
   458   003C77                     CLC1SEL1        equ	15479	;# 
   459   003C78                     CLC1SEL2        equ	15480	;# 
   460   003C79                     CLC1SEL3        equ	15481	;# 
   461   003C7A                     CLC1GLS0        equ	15482	;# 
   462   003C7B                     CLC1GLS1        equ	15483	;# 
   463   003C7C                     CLC1GLS2        equ	15484	;# 
   464   003C7D                     CLC1GLS3        equ	15485	;# 
   465   003C7E                     CLCDATA0        equ	15486	;# 
   466   003CE5                     CLKRCON         equ	15589	;# 
   467   003CE6                     CLKRCLK         equ	15590	;# 
   468   003CFA                     MD1CON0         equ	15610	;# 
   469   003CFB                     MD1CON1         equ	15611	;# 
   470   003CFC                     MD1SRC          equ	15612	;# 
   471   003CFD                     MD1CARL         equ	15613	;# 
   472   003CFE                     MD1CARH         equ	15614	;# 
   473   003D10                     SPI1RXB         equ	15632	;# 
   474   003D11                     SPI1TXB         equ	15633	;# 
   475   003D12                     SPI1TCNT        equ	15634	;# 
   476   003D12                     SPI1TCNTL       equ	15634	;# 
   477   003D13                     SPI1TCNTH       equ	15635	;# 
   478   003D14                     SPI1CON0        equ	15636	;# 
   479   003D15                     SPI1CON1        equ	15637	;# 
   480   003D16                     SPI1CON2        equ	15638	;# 
   481   003D17                     SPI1STATUS      equ	15639	;# 
   482   003D18                     SPI1TWIDTH      equ	15640	;# 
   483   003D19                     SPI1BAUD        equ	15641	;# 
   484   003D1A                     SPI1INTF        equ	15642	;# 
   485   003D1B                     SPI1INTE        equ	15643	;# 
   486   003D1C                     SPI1CLK         equ	15644	;# 
   487   003D54                     I2C2RXB         equ	15700	;# 
   488   003D55                     I2C2TXB         equ	15701	;# 
   489   003D56                     I2C2CNT         equ	15702	;# 
   490   003D57                     I2C2ADB0        equ	15703	;# 
   491   003D58                     I2C2ADB1        equ	15704	;# 
   492   003D59                     I2C2ADR0        equ	15705	;# 
   493   003D5A                     I2C2ADR1        equ	15706	;# 
   494   003D5B                     I2C2ADR2        equ	15707	;# 
   495   003D5C                     I2C2ADR3        equ	15708	;# 
   496   003D5D                     I2C2CON0        equ	15709	;# 
   497   003D5E                     I2C2CON1        equ	15710	;# 
   498   003D5F                     I2C2CON2        equ	15711	;# 
   499   003D60                     I2C2ERR         equ	15712	;# 
   500   003D61                     I2C2STAT0       equ	15713	;# 
   501   003D62                     I2C2STAT1       equ	15714	;# 
   502   003D63                     I2C2PIR         equ	15715	;# 
   503   003D64                     I2C2PIE         equ	15716	;# 
   504   003D65                     I2C2CLK         equ	15717	;# 
   505   003D66                     I2C2BTO         equ	15718	;# 
   506   003D6A                     I2C1RXB         equ	15722	;# 
   507   003D6B                     I2C1TXB         equ	15723	;# 
   508   003D6C                     I2C1CNT         equ	15724	;# 
   509   003D6D                     I2C1ADB0        equ	15725	;# 
   510   003D6E                     I2C1ADB1        equ	15726	;# 
   511   003D6F                     I2C1ADR0        equ	15727	;# 
   512   003D70                     I2C1ADR1        equ	15728	;# 
   513   003D71                     I2C1ADR2        equ	15729	;# 
   514   003D72                     I2C1ADR3        equ	15730	;# 
   515   003D73                     I2C1CON0        equ	15731	;# 
   516   003D74                     I2C1CON1        equ	15732	;# 
   517   003D75                     I2C1CON2        equ	15733	;# 
   518   003D76                     I2C1ERR         equ	15734	;# 
   519   003D77                     I2C1STAT0       equ	15735	;# 
   520   003D78                     I2C1STAT1       equ	15736	;# 
   521   003D79                     I2C1PIR         equ	15737	;# 
   522   003D7A                     I2C1PIE         equ	15738	;# 
   523   003D7B                     I2C1CLK         equ	15739	;# 
   524   003D7C                     I2C1BTO         equ	15740	;# 
   525   003DD0                     U2RXB           equ	15824	;# 
   526   003DD0                     U2RXBL          equ	15824	;# 
   527   003DD2                     U2TXB           equ	15826	;# 
   528   003DD2                     U2TXBL          equ	15826	;# 
   529   003DD4                     U2P1            equ	15828	;# 
   530   003DD4                     U2P1L           equ	15828	;# 
   531   003DD6                     U2P2            equ	15830	;# 
   532   003DD6                     U2P2L           equ	15830	;# 
   533   003DD8                     U2P3            equ	15832	;# 
   534   003DD8                     U2P3L           equ	15832	;# 
   535   003DDA                     U2CON0          equ	15834	;# 
   536   003DDB                     U2CON1          equ	15835	;# 
   537   003DDC                     U2CON2          equ	15836	;# 
   538   003DDD                     U2BRG           equ	15837	;# 
   539   003DDD                     U2BRGL          equ	15837	;# 
   540   003DDE                     U2BRGH          equ	15838	;# 
   541   003DDF                     U2FIFO          equ	15839	;# 
   542   003DE0                     U2UIR           equ	15840	;# 
   543   003DE1                     U2ERRIR         equ	15841	;# 
   544   003DE2                     U2ERRIE         equ	15842	;# 
   545   003DE8                     U1RXB           equ	15848	;# 
   546   003DE8                     U1RXBL          equ	15848	;# 
   547   003DE9                     U1RXCHK         equ	15849	;# 
   548   003DEA                     U1TXB           equ	15850	;# 
   549   003DEA                     U1TXBL          equ	15850	;# 
   550   003DEB                     U1TXCHK         equ	15851	;# 
   551   003DEC                     U1P1            equ	15852	;# 
   552   003DEC                     U1P1L           equ	15852	;# 
   553   003DED                     U1P1H           equ	15853	;# 
   554   003DEE                     U1P2            equ	15854	;# 
   555   003DEE                     U1P2L           equ	15854	;# 
   556   003DEF                     U1P2H           equ	15855	;# 
   557   003DF0                     U1P3            equ	15856	;# 
   558   003DF0                     U1P3L           equ	15856	;# 
   559   003DF1                     U1P3H           equ	15857	;# 
   560   003DF2                     U1CON0          equ	15858	;# 
   561   003DF3                     U1CON1          equ	15859	;# 
   562   003DF4                     U1CON2          equ	15860	;# 
   563   003DF5                     U1BRG           equ	15861	;# 
   564   003DF5                     U1BRGL          equ	15861	;# 
   565   003DF6                     U1BRGH          equ	15862	;# 
   566   003DF7                     U1FIFO          equ	15863	;# 
   567   003DF8                     U1UIR           equ	15864	;# 
   568   003DF9                     U1ERRIR         equ	15865	;# 
   569   003DFA                     U1ERRIE         equ	15866	;# 
   570   003E9C                     DAC1CON1        equ	16028	;# 
   571   003E9E                     DAC1CON0        equ	16030	;# 
   572   003EB8                     CM2CON0         equ	16056	;# 
   573   003EB9                     CM2CON1         equ	16057	;# 
   574   003EBA                     CM2NCH          equ	16058	;# 
   575   003EBB                     CM2PCH          equ	16059	;# 
   576   003EBC                     CM1CON0         equ	16060	;# 
   577   003EBD                     CM1CON1         equ	16061	;# 
   578   003EBE                     CM1NCH          equ	16062	;# 
   579   003EBF                     CM1PCH          equ	16063	;# 
   580   003EC0                     CMOUT           equ	16064	;# 
   581   003EC1                     FVRCON          equ	16065	;# 
   582   003EC3                     ZCDCON          equ	16067	;# 
   583   003EC9                     HLVDCON0        equ	16073	;# 
   584   003ECA                     HLVDCON1        equ	16074	;# 
   585   003ED7                     ADCP            equ	16087	;# 
   586   003EDE                     ADLTH           equ	16094	;# 
   587   003EDE                     ADLTHL          equ	16094	;# 
   588   003EDF                     ADLTHH          equ	16095	;# 
   589   003EE0                     ADUTH           equ	16096	;# 
   590   003EE0                     ADUTHL          equ	16096	;# 
   591   003EE1                     ADUTHH          equ	16097	;# 
   592   003EE2                     ADERR           equ	16098	;# 
   593   003EE2                     ADERRL          equ	16098	;# 
   594   003EE3                     ADERRH          equ	16099	;# 
   595   003EE4                     ADSTPT          equ	16100	;# 
   596   003EE4                     ADSTPTL         equ	16100	;# 
   597   003EE5                     ADSTPTH         equ	16101	;# 
   598   003EE6                     ADFLTR          equ	16102	;# 
   599   003EE6                     ADFLTRL         equ	16102	;# 
   600   003EE7                     ADFLTRH         equ	16103	;# 
   601   003EE8                     ADACC           equ	16104	;# 
   602   003EE8                     ADACCL          equ	16104	;# 
   603   003EE9                     ADACCH          equ	16105	;# 
   604   003EEA                     ADACCU          equ	16106	;# 
   605   003EEB                     ADCNT           equ	16107	;# 
   606   003EEC                     ADRPT           equ	16108	;# 
   607   003EED                     ADPREV          equ	16109	;# 
   608   003EED                     ADPREVL         equ	16109	;# 
   609   003EEE                     ADPREVH         equ	16110	;# 
   610   003EEF                     ADRES           equ	16111	;# 
   611   003EEF                     ADRESL          equ	16111	;# 
   612   003EF0                     ADRESH          equ	16112	;# 
   613   003EF1                     ADPCH           equ	16113	;# 
   614   003EF3                     ADACQ           equ	16115	;# 
   615   003EF3                     ADACQL          equ	16115	;# 
   616   003EF4                     ADACQH          equ	16116	;# 
   617   003EF5                     ADCAP           equ	16117	;# 
   618   003EF6                     ADPRE           equ	16118	;# 
   619   003EF6                     ADPREL          equ	16118	;# 
   620   003EF7                     ADPREH          equ	16119	;# 
   621   003EF8                     ADCON0          equ	16120	;# 
   622   003EF9                     ADCON1          equ	16121	;# 
   623   003EFA                     ADCON2          equ	16122	;# 
   624   003EFB                     ADCON3          equ	16123	;# 
   625   003EFC                     ADSTAT          equ	16124	;# 
   626   003EFD                     ADREF           equ	16125	;# 
   627   003EFE                     ADACT           equ	16126	;# 
   628   003EFF                     ADCLK           equ	16127	;# 
   629   003F12                     SMT1TMR         equ	16146	;# 
   630   003F12                     SMT1TMRL        equ	16146	;# 
   631   003F13                     SMT1TMRH        equ	16147	;# 
   632   003F14                     SMT1TMRU        equ	16148	;# 
   633   003F15                     SMT1CPR         equ	16149	;# 
   634   003F15                     SMT1CPRL        equ	16149	;# 
   635   003F16                     SMT1CPRH        equ	16150	;# 
   636   003F17                     SMT1CPRU        equ	16151	;# 
   637   003F18                     SMT1CPW         equ	16152	;# 
   638   003F18                     SMT1CPWL        equ	16152	;# 
   639   003F19                     SMT1CPWH        equ	16153	;# 
   640   003F1A                     SMT1CPWU        equ	16154	;# 
   641   003F1B                     SMT1PR          equ	16155	;# 
   642   003F1B                     SMT1PRL         equ	16155	;# 
   643   003F1C                     SMT1PRH         equ	16156	;# 
   644   003F1D                     SMT1PRU         equ	16157	;# 
   645   003F1E                     SMT1CON0        equ	16158	;# 
   646   003F1F                     SMT1CON1        equ	16159	;# 
   647   003F20                     SMT1STAT        equ	16160	;# 
   648   003F21                     SMT1CLK         equ	16161	;# 
   649   003F22                     SMT1SIG         equ	16162	;# 
   650   003F23                     SMT1WIN         equ	16163	;# 
   651   003F38                     NCO1ACC         equ	16184	;# 
   652   003F38                     NCO1ACCL        equ	16184	;# 
   653   003F39                     NCO1ACCH        equ	16185	;# 
   654   003F3A                     NCO1ACCU        equ	16186	;# 
   655   003F3B                     NCO1INC         equ	16187	;# 
   656   003F3B                     NCO1INCL        equ	16187	;# 
   657   003F3C                     NCO1INCH        equ	16188	;# 
   658   003F3D                     NCO1INCU        equ	16189	;# 
   659   003F3E                     NCO1CON         equ	16190	;# 
   660   003F3F                     NCO1CLK         equ	16191	;# 
   661   003F40                     CWG3CLK         equ	16192	;# 
   662   003F40                     CWG3CLKCON      equ	16192	;# 
   663   003F41                     CWG3ISM         equ	16193	;# 
   664   003F41                     CWG3DAT         equ	16193	;# 
   665   003F42                     CWG3DBR         equ	16194	;# 
   666   003F43                     CWG3DBF         equ	16195	;# 
   667   003F44                     CWG3CON0        equ	16196	;# 
   668   003F45                     CWG3CON1        equ	16197	;# 
   669   003F46                     CWG3AS0         equ	16198	;# 
   670   003F47                     CWG3AS1         equ	16199	;# 
   671   003F48                     CWG3STR         equ	16200	;# 
   672   003F49                     CWG2CLK         equ	16201	;# 
   673   003F49                     CWG2CLKCON      equ	16201	;# 
   674   003F4A                     CWG2ISM         equ	16202	;# 
   675   003F4A                     CWG2DAT         equ	16202	;# 
   676   003F4B                     CWG2DBR         equ	16203	;# 
   677   003F4C                     CWG2DBF         equ	16204	;# 
   678   003F4D                     CWG2CON0        equ	16205	;# 
   679   003F4E                     CWG2CON1        equ	16206	;# 
   680   003F4F                     CWG2AS0         equ	16207	;# 
   681   003F50                     CWG2AS1         equ	16208	;# 
   682   003F51                     CWG2STR         equ	16209	;# 
   683   003F52                     CWG1CLK         equ	16210	;# 
   684   003F52                     CWG1CLKCON      equ	16210	;# 
   685   003F53                     CWG1ISM         equ	16211	;# 
   686   003F53                     CWG1DAT         equ	16211	;# 
   687   003F54                     CWG1DBR         equ	16212	;# 
   688   003F55                     CWG1DBF         equ	16213	;# 
   689   003F56                     CWG1CON0        equ	16214	;# 
   690   003F57                     CWG1CON1        equ	16215	;# 
   691   003F58                     CWG1AS0         equ	16216	;# 
   692   003F59                     CWG1AS1         equ	16217	;# 
   693   003F5A                     CWG1STR         equ	16218	;# 
   694   003F5E                     CCPTMRS0        equ	16222	;# 
   695   003F5F                     CCPTMRS1        equ	16223	;# 
   696   003F60                     PWM8DC          equ	16224	;# 
   697   003F60                     PWM8DCL         equ	16224	;# 
   698   003F61                     PWM8DCH         equ	16225	;# 
   699   003F62                     PWM8CON         equ	16226	;# 
   700   003F64                     PWM7DC          equ	16228	;# 
   701   003F64                     PWM7DCL         equ	16228	;# 
   702   003F65                     PWM7DCH         equ	16229	;# 
   703   003F66                     PWM7CON         equ	16230	;# 
   704   003F68                     PWM6DC          equ	16232	;# 
   705   003F68                     PWM6DCL         equ	16232	;# 
   706   003F69                     PWM6DCH         equ	16233	;# 
   707   003F6A                     PWM6CON         equ	16234	;# 
   708   003F6C                     PWM5DC          equ	16236	;# 
   709   003F6C                     PWM5DCL         equ	16236	;# 
   710   003F6D                     PWM5DCH         equ	16237	;# 
   711   003F6E                     PWM5CON         equ	16238	;# 
   712   003F70                     CCPR4           equ	16240	;# 
   713   003F70                     CCPR4L          equ	16240	;# 
   714   003F71                     CCPR4H          equ	16241	;# 
   715   003F72                     CCP4CON         equ	16242	;# 
   716   003F73                     CCP4CAP         equ	16243	;# 
   717   003F74                     CCPR3           equ	16244	;# 
   718   003F74                     CCPR3L          equ	16244	;# 
   719   003F75                     CCPR3H          equ	16245	;# 
   720   003F76                     CCP3CON         equ	16246	;# 
   721   003F77                     CCP3CAP         equ	16247	;# 
   722   003F78                     CCPR2           equ	16248	;# 
   723   003F78                     CCPR2L          equ	16248	;# 
   724   003F79                     CCPR2H          equ	16249	;# 
   725   003F7A                     CCP2CON         equ	16250	;# 
   726   003F7B                     CCP2CAP         equ	16251	;# 
   727   003F7C                     CCPR1           equ	16252	;# 
   728   003F7C                     CCPR1L          equ	16252	;# 
   729   003F7D                     CCPR1H          equ	16253	;# 
   730   003F7E                     CCP1CON         equ	16254	;# 
   731   003F7F                     CCP1CAP         equ	16255	;# 
   732   003F92                     T6TMR           equ	16274	;# 
   733   003F92                     TMR6            equ	16274	;# 
   734   003F93                     T6PR            equ	16275	;# 
   735   003F93                     PR6             equ	16275	;# 
   736   003F94                     T6CON           equ	16276	;# 
   737   003F95                     T6HLT           equ	16277	;# 
   738   003F96                     T6CLKCON        equ	16278	;# 
   739   003F96                     T6CLK           equ	16278	;# 
   740   003F97                     T6RST           equ	16279	;# 
   741   003F98                     TMR5            equ	16280	;# 
   742   003F98                     TMR5L           equ	16280	;# 
   743   003F99                     TMR5H           equ	16281	;# 
   744   003F9A                     T5CON           equ	16282	;# 
   745   003F9A                     TMR5CON         equ	16282	;# 
   746   003F9B                     T5GCON          equ	16283	;# 
   747   003F9B                     TMR5GCON        equ	16283	;# 
   748   003F9C                     T5GATE          equ	16284	;# 
   749   003F9C                     TMR5GATE        equ	16284	;# 
   750   003F9D                     T5CLK           equ	16285	;# 
   751   003F9D                     TMR5CLK         equ	16285	;# 
   752   003F9D                     PR5             equ	16285	;# 
   753   003F9E                     T4TMR           equ	16286	;# 
   754   003F9E                     TMR4            equ	16286	;# 
   755   003F9F                     T4PR            equ	16287	;# 
   756   003F9F                     PR4             equ	16287	;# 
   757   003FA0                     T4CON           equ	16288	;# 
   758   003FA1                     T4HLT           equ	16289	;# 
   759   003FA2                     T4CLKCON        equ	16290	;# 
   760   003FA2                     T4CLK           equ	16290	;# 
   761   003FA3                     T4RST           equ	16291	;# 
   762   003FA4                     TMR3            equ	16292	;# 
   763   003FA4                     TMR3L           equ	16292	;# 
   764   003FA5                     TMR3H           equ	16293	;# 
   765   003FA6                     T3CON           equ	16294	;# 
   766   003FA6                     TMR3CON         equ	16294	;# 
   767   003FA7                     T3GCON          equ	16295	;# 
   768   003FA7                     TMR3GCON        equ	16295	;# 
   769   003FA8                     T3GATE          equ	16296	;# 
   770   003FA8                     TMR3GATE        equ	16296	;# 
   771   003FA9                     T3CLK           equ	16297	;# 
   772   003FA9                     TMR3CLK         equ	16297	;# 
   773   003FA9                     PR3             equ	16297	;# 
   774   003FAA                     T2TMR           equ	16298	;# 
   775   003FAA                     TMR2            equ	16298	;# 
   776   003FAB                     T2PR            equ	16299	;# 
   777   003FAB                     PR2             equ	16299	;# 
   778   003FAC                     T2CON           equ	16300	;# 
   779   003FAD                     T2HLT           equ	16301	;# 
   780   003FAE                     T2CLKCON        equ	16302	;# 
   781   003FAE                     T2CLK           equ	16302	;# 
   782   003FAF                     T2RST           equ	16303	;# 
   783   003FB0                     TMR1            equ	16304	;# 
   784   003FB0                     TMR1L           equ	16304	;# 
   785   003FB1                     TMR1H           equ	16305	;# 
   786   003FB2                     T1CON           equ	16306	;# 
   787   003FB2                     TMR1CON         equ	16306	;# 
   788   003FB3                     T1GCON          equ	16307	;# 
   789   003FB3                     TMR1GCON        equ	16307	;# 
   790   003FB4                     T1GATE          equ	16308	;# 
   791   003FB4                     TMR1GATE        equ	16308	;# 
   792   003FB5                     T1CLK           equ	16309	;# 
   793   003FB5                     TMR1CLK         equ	16309	;# 
   794   003FB5                     PR1             equ	16309	;# 
   795   003FB6                     TMR0L           equ	16310	;# 
   796   003FB6                     TMR0            equ	16310	;# 
   797   003FB7                     TMR0H           equ	16311	;# 
   798   003FB7                     PR0             equ	16311	;# 
   799   003FB8                     T0CON0          equ	16312	;# 
   800   003FB9                     T0CON1          equ	16313	;# 
   801   003FBA                     LATA            equ	16314	;# 
   802   003FBB                     LATB            equ	16315	;# 
   803   003FBC                     LATC            equ	16316	;# 
   804   003FBD                     LATD            equ	16317	;# 
   805   003FBE                     LATE            equ	16318	;# 
   806   003FC2                     TRISA           equ	16322	;# 
   807   003FC3                     TRISB           equ	16323	;# 
   808   003FC4                     TRISC           equ	16324	;# 
   809   003FC5                     TRISD           equ	16325	;# 
   810   003FC6                     TRISE           equ	16326	;# 
   811   003FCA                     PORTA           equ	16330	;# 
   812   003FCB                     PORTB           equ	16331	;# 
   813   003FCC                     PORTC           equ	16332	;# 
   814   003FCD                     PORTD           equ	16333	;# 
   815   003FCE                     PORTE           equ	16334	;# 
   816   003FD2                     INTCON0         equ	16338	;# 
   817   003FD3                     INTCON1         equ	16339	;# 
   818   003FD4                     IVTLOCK         equ	16340	;# 
   819   003FD5                     IVTBASE         equ	16341	;# 
   820   003FD5                     IVTBASEL        equ	16341	;# 
   821   003FD6                     IVTBASEH        equ	16342	;# 
   822   003FD7                     IVTBASEU        equ	16343	;# 
   823   003FD8                     STATUS          equ	16344	;# 
   824   003FD9                     FSR2            equ	16345	;# 
   825   003FD9                     FSR2L           equ	16345	;# 
   826   003FDA                     FSR2H           equ	16346	;# 
   827   003FDB                     PLUSW2          equ	16347	;# 
   828   003FDC                     PREINC2         equ	16348	;# 
   829   003FDD                     POSTDEC2        equ	16349	;# 
   830   003FDE                     POSTINC2        equ	16350	;# 
   831   003FDF                     INDF2           equ	16351	;# 
   832   003FE0                     BSR             equ	16352	;# 
   833   003FE1                     FSR1            equ	16353	;# 
   834   003FE1                     FSR1L           equ	16353	;# 
   835   003FE2                     FSR1H           equ	16354	;# 
   836   003FE3                     PLUSW1          equ	16355	;# 
   837   003FE4                     PREINC1         equ	16356	;# 
   838   003FE5                     POSTDEC1        equ	16357	;# 
   839   003FE6                     POSTINC1        equ	16358	;# 
   840   003FE7                     INDF1           equ	16359	;# 
   841   003FE8                     WREG            equ	16360	;# 
   842   003FE9                     FSR0            equ	16361	;# 
   843   003FE9                     FSR0L           equ	16361	;# 
   844   003FEA                     FSR0H           equ	16362	;# 
   845   003FEB                     PLUSW0          equ	16363	;# 
   846   003FEC                     PREINC0         equ	16364	;# 
   847   003FED                     POSTDEC0        equ	16365	;# 
   848   003FEE                     POSTINC0        equ	16366	;# 
   849   003FEF                     INDF0           equ	16367	;# 
   850   003FF0                     PCON0           equ	16368	;# 
   851   003FF1                     PCON1           equ	16369	;# 
   852   003FF3                     PROD            equ	16371	;# 
   853   003FF3                     PRODL           equ	16371	;# 
   854   003FF4                     PRODH           equ	16372	;# 
   855   003FF5                     TABLAT          equ	16373	;# 
   856   003FF6                     TBLPTR          equ	16374	;# 
   857   003FF6                     TBLPTRL         equ	16374	;# 
   858   003FF7                     TBLPTRH         equ	16375	;# 
   859   003FF8                     TBLPTRU         equ	16376	;# 
   860   003FF9                     PCLAT           equ	16377	;# 
   861   003FF9                     PCL             equ	16377	;# 
   862   003FFA                     PCLATH          equ	16378	;# 
   863   003FFB                     PCLATU          equ	16379	;# 
   864   003FFC                     STKPTR          equ	16380	;# 
   865   003FFD                     TOS             equ	16381	;# 
   866   003FFD                     TOSL            equ	16381	;# 
   867   003FFE                     TOSH            equ	16382	;# 
   868   003FFF                     TOSU            equ	16383	;# 
   869   0039A1                     _PIR1bits       set	14753
   870   0039A0                     _PIR0bits       set	14752
   871   003980                     _IPR0bits       set	14720
   872   003990                     _PIE0bits       set	14736
   873   003A66                     _IOCCNbits      set	14950
   874   003A65                     _IOCCPbits      set	14949
   875   003A67                     _IOCCFbits      set	14951
   876   003A70                     _ANSELD         set	14960
   877   003A60                     _ANSELC         set	14944
   878   003A51                     _WPUB           set	14929
   879   003A50                     _ANSELB         set	14928
   880   003A41                     _WPUA           set	14913
   881   003A40                     _ANSELA         set	14912
   882   003A40                     _ANSELAbits     set	14912
   883   003EF4                     _ADACQH         set	16116
   884   003EF3                     _ADACQL         set	16115
   885   003EF7                     _ADPREH         set	16119
   886   003EF6                     _ADPREL         set	16118
   887   003EFD                     _ADREF          set	16125
   888   003EF5                     _ADCAP          set	16117
   889   003EF1                     _ADPCH          set	16113
   890   003EFF                     _ADCLK          set	16127
   891   003EEF                     _ADRESL         set	16111
   892   003EF0                     _ADRESH         set	16112
   893   003EF8                     _ADCON0bits     set	16120
   894   003FCC                     _PORTCbits      set	16332
   895   003FD2                     _INTCON0bits    set	16338
   896   003FD5                     _IVTBASEL       set	16341
   897   003FD6                     _IVTBASEH       set	16342
   898   003FD7                     _IVTBASEU       set	16343
   899   003FBD                     _LATD           set	16317
   900   003FCD                     _PORTD          set	16333
   901   003FC4                     _TRISC          set	16324
   902   003FBC                     _LATC           set	16316
   903   003FCC                     _PORTC          set	16332
   904   003FCB                     _PORTB          set	16331
   905   003FC2                     _TRISA          set	16322
   906   003FBA                     _LATA           set	16314
   907   003FCA                     _PORTA          set	16330
   908   003FC2                     _TRISAbits      set	16322
   909   003FBB                     _LATB           set	16315
   910   003FC5                     _TRISD          set	16325
   911   003FC3                     _TRISB          set	16323
   912   01FDE9                     _LATD1          set	130537
   913   01FDE8                     _LATD0          set	130536
   914                           
   915                           	psect	smallconst
   916   002000                     __psmallconst:
   917                           	callstack 0
   918   002000  00                 	db	0
   919   002001                     STR_3:
   920                           
   921                           ; BSR set to: 57
   922   002001  54                 	db	84	;'T'
   923   002002  68                 	db	104	;'h'
   924   002003  65                 	db	101	;'e'
   925   002004  20                 	db	32
   926   002005  49                 	db	73	;'I'
   927   002006  6E                 	db	110	;'n'
   928   002007  70                 	db	112	;'p'
   929   002008  75                 	db	117	;'u'
   930   002009  74                 	db	116	;'t'
   931   00200A  20                 	db	32
   932   00200B  6C                 	db	108	;'l'
   933   00200C  69                 	db	105	;'i'
   934   00200D  67                 	db	103	;'g'
   935   00200E  68                 	db	104	;'h'
   936   00200F  74                 	db	116	;'t'
   937   002010  3A                 	db	58	;':'
   938   002011  00                 	db	0
   939   002012                     STR_2:
   940                           
   941                           ; BSR set to: 57
   942   002012  20                 	db	32
   943   002013  4C                 	db	76	;'L'
   944   002014  55                 	db	85	;'U'
   945   002015  58                 	db	88	;'X'
   946   002016  00                 	db	0
   947   002017                     STR_1:
   948                           
   949                           ; BSR set to: 57
   950   002017  25                 	db	37
   951   002018  2E                 	db	46
   952   002019  30                 	db	48	;'0'
   953   00201A  66                 	db	102	;'f'
   954   00201B  00                 	db	0
   955   00201C                     STR_4:
   956                           
   957                           ; BSR set to: 57
   958   00201C  69                 	db	105	;'i'
   959   00201D  6E                 	db	110	;'n'
   960   00201E  66                 	db	102	;'f'
   961   00201F  00                 	db	0
   962   002020                     STR_7:
   963                           
   964                           ; BSR set to: 57
   965   002020  6E                 	db	110	;'n'
   966   002021  61                 	db	97	;'a'
   967   002022  6E                 	db	110	;'n'
   968   002023  00                 	db	0
   969   002020                     STR_8           equ	STR_7
   970   002020                     STR_9           equ	STR_7
   971   00201C                     STR_5           equ	STR_4
   972   00201C                     STR_6           equ	STR_4
   973   002024  00                 	db	0	; dummy byte at the end
   974   002000                     __smallconst    set	__psmallconst
   975   002000                     __mediumconst   set	__psmallconst
   976   000003                     __activetblptr  equ	3
   977                           
   978                           ; #config settings
   979                           
   980                           	psect	cinit
   981   008852                     __pcinit:
   982                           	callstack 0
   983   008852                     start_initialization:
   984                           	callstack 0
   985   008852                     __initialization:
   986                           	callstack 0
   987                           
   988                           ; Clear objects allocated to BANK1 (80 bytes)
   989   008852  EE00  F100         	lfsr	0,__pbssBANK1
   990   008856  0E50               	movlw	80
   991   008858                     clear_0:
   992   008858  6AEE               	clrf	postinc0,c
   993   00885A  06E8               	decf	wreg,f,c
   994   00885C  E1FD               	bnz	clear_0
   995                           
   996                           ; Clear objects allocated to BANK0 (26 bytes)
   997   00885E  EE00  F09A         	lfsr	0,__pbssBANK0
   998   008862  0E1A               	movlw	26
   999   008864                     clear_1:
  1000   008864  6AEE               	clrf	postinc0,c
  1001   008866  06E8               	decf	wreg,f,c
  1002   008868  E1FD               	bnz	clear_1
  1003                           
  1004                           ; Clear objects allocated to COMRAM (8 bytes)
  1005   00886A  EE00  F054         	lfsr	0,__pbssCOMRAM
  1006   00886E  0E08               	movlw	8
  1007   008870                     clear_2:
  1008   008870  6AEE               	clrf	postinc0,c
  1009   008872  06E8               	decf	wreg,f,c
  1010   008874  E1FD               	bnz	clear_2
  1011                           
  1012                           ;
  1013                           ; Setup IVTBASE
  1014                           ;
  1015   003FD5                     IVTBASEL        equ	16341
  1016   003FD6                     IVTBASEH        equ	16342
  1017   003FD7                     IVTBASEU        equ	16343
  1018   008876  0E08               	movlw	(ivt0x6008_base shr 0)& (0+255)
  1019   008878  6ED5               	movwf	213,c
  1020   00887A  0E60               	movlw	(ivt0x6008_base shr (0+8))& (0+255)
  1021   00887C  6ED6               	movwf	214,c
  1022   00887E  0E00               	movlw	(ivt0x6008_base shr (0+16))& (0+255)
  1023   008880  6ED7               	movwf	215,c
  1024   008882                     end_of_initialization:
  1025                           	callstack 0
  1026   008882                     __end_of__initialization:
  1027                           	callstack 0
  1028   008882  0100               	movlb	0
  1029   008884  EF81  F03E         	goto	_main	;jump to C main() function
  1030                           
  1031                           	psect	bssCOMRAM
  1032   000054                     __pbssCOMRAM:
  1033                           	callstack 0
  1034   000054                     _voltage:
  1035                           	callstack 0
  1036   000054                     	ds	4
  1037   000058                     _digital:
  1038                           	callstack 0
  1039   000058                     	ds	2
  1040   00005A                     _flags:
  1041                           	callstack 0
  1042   00005A                     	ds	1
  1043   00005B                     _x:
  1044                           	callstack 0
  1045   00005B                     	ds	1
  1046                           
  1047                           	psect	bssBANK0
  1048   00009A                     __pbssBANK0:
  1049                           	callstack 0
  1050   00009A                     floorf@F521:
  1051                           	callstack 0
  1052   00009A                     	ds	4
  1053   00009E                     ___fpclassifyf@F465:
  1054                           	callstack 0
  1055   00009E                     	ds	4
  1056   0000A2                     _LUX:
  1057                           	callstack 0
  1058   0000A2                     	ds	4
  1059   0000A6                     _width:
  1060                           	callstack 0
  1061   0000A6                     	ds	2
  1062   0000A8                     _prec:
  1063                           	callstack 0
  1064   0000A8                     	ds	2
  1065   0000AA                     _data:
  1066                           	callstack 0
  1067   0000AA                     	ds	10
  1068                           
  1069                           	psect	bssBANK1
  1070   000100                     __pbssBANK1:
  1071                           	callstack 0
  1072   000100                     _dbuf:
  1073                           	callstack 0
  1074   000100                     	ds	80
  1075                           
  1076                           	psect	cstackBANK0
  1077   000060                     __pcstackBANK0:
  1078                           	callstack 0
  1079   000060                     efgtoa@ne:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x0
  1083   000060                     	ds	2
  1084   000062                     efgtoa@p:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x2
  1088   000062                     	ds	2
  1089   000064                     efgtoa@t:
  1090                           	callstack 0
  1091                           
  1092                           ; 2 bytes @ 0x4
  1093   000064                     	ds	2
  1094   000066                     _efgtoa$1101:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x6
  1098   000066                     	ds	2
  1099   000068                     efgtoa@pp:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x8
  1103   000068                     	ds	1
  1104   000069                     efgtoa@mode:
  1105                           	callstack 0
  1106                           
  1107                           ; 1 bytes @ 0x9
  1108   000069                     	ds	1
  1109   00006A                     efgtoa@nmode:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0xA
  1113   00006A                     	ds	1
  1114   00006B                     efgtoa@d:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0xB
  1118   00006B                     	ds	2
  1119   00006D                     efgtoa@m:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0xD
  1123   00006D                     	ds	2
  1124   00006F                     efgtoa@e:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0xF
  1128   00006F                     	ds	2
  1129   000071                     efgtoa@w:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x11
  1133   000071                     	ds	2
  1134   000073                     efgtoa@ou:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x13
  1138   000073                     	ds	4
  1139   000077                     efgtoa@i:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x17
  1143   000077                     	ds	2
  1144   000079                     efgtoa@h:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x19
  1148   000079                     	ds	4
  1149   00007D                     efgtoa@l:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x1D
  1153   00007D                     	ds	4
  1154   000081                     efgtoa@sign:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x21
  1158   000081                     	ds	1
  1159   000082                     efgtoa@n:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x22
  1163   000082                     	ds	2
  1164   000084                     efgtoa@g:
  1165                           	callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x24
  1168   000084                     	ds	4
  1169   000088                     efgtoa@u:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x28
  1173   000088                     	ds	4
  1174   00008C                     vfpfcnvrt@fp:
  1175                           	callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x2C
  1178   00008C                     	ds	1
  1179   00008D                     vfpfcnvrt@fmt:
  1180                           	callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x2D
  1183   00008D                     	ds	1
  1184   00008E                     vfpfcnvrt@ap:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x2E
  1188   00008E                     	ds	1
  1189   00008F                     ?_vfprintf:
  1190                           	callstack 0
  1191   00008F                     vfprintf@fp:
  1192                           	callstack 0
  1193                           
  1194                           ; 1 bytes @ 0x2F
  1195   00008F                     	ds	1
  1196   000090                     vfprintf@fmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x30
  1200   000090                     	ds	1
  1201   000091                     vfprintf@ap:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x31
  1205   000091                     	ds	1
  1206   000092                     ?_sprintf:
  1207                           	callstack 0
  1208   000092                     sprintf@s:
  1209                           	callstack 0
  1210                           
  1211                           ; 1 bytes @ 0x32
  1212   000092                     	ds	1
  1213   000093                     sprintf@fmt:
  1214                           	callstack 0
  1215                           
  1216                           ; 1 bytes @ 0x33
  1217   000093                     	ds	5
  1218   000098                     ??_main:
  1219                           
  1220                           ; 1 bytes @ 0x38
  1221   000098                     	ds	2
  1222                           
  1223                           	psect	cstackCOMRAM
  1224   000001                     __pcstackCOMRAM:
  1225                           	callstack 0
  1226   000001                     ??_my_ISR:
  1227   000001                     
  1228                           ; 1 bytes @ 0x0
  1229   000001                     	ds	2
  1230   000003                     my_ISR@i:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x2
  1234   000003                     	ds	2
  1235   000005                     ?___fpclassifyf:
  1236                           	callstack 0
  1237   000005                     ?_read_prec_or_width:
  1238                           	callstack 0
  1239   000005                     ?___fladd:
  1240                           	callstack 0
  1241   000005                     ?___fldiv:
  1242                           	callstack 0
  1243   000005                     ?_labs:
  1244                           	callstack 0
  1245   000005                     ?___flneg:
  1246                           	callstack 0
  1247   000005                     ?___fltol:
  1248                           	callstack 0
  1249   000005                     ?___xxtofl:
  1250                           	callstack 0
  1251   000005                     read_prec_or_width@fmt:
  1252                           	callstack 0
  1253   000005                     strcat@dest:
  1254                           	callstack 0
  1255   000005                     MSdelay@val:
  1256                           	callstack 0
  1257   000005                     memcpy@d1:
  1258                           	callstack 0
  1259   000005                     fputc@c:
  1260                           	callstack 0
  1261   000005                     strcpy@dest:
  1262                           	callstack 0
  1263   000005                     ___fleq@ff1:
  1264                           	callstack 0
  1265   000005                     ___flneg@f1:
  1266                           	callstack 0
  1267   000005                     ___fltol@f1:
  1268                           	callstack 0
  1269   000005                     ___fladd@b:
  1270                           	callstack 0
  1271   000005                     ___fldiv@b:
  1272                           	callstack 0
  1273   000005                     ___xxtofl@val:
  1274                           	callstack 0
  1275   000005                     ___fpclassifyf@x:
  1276                           	callstack 0
  1277   000005                     labs@a:
  1278                           	callstack 0
  1279   000005                     
  1280                           ; 1 bytes @ 0x4
  1281   000005                     	ds	1
  1282   000006                     read_prec_or_width@ap:
  1283                           	callstack 0
  1284   000006                     strcat@src:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x5
  1288   000006                     	ds	1
  1289   000007                     fputc@fp:
  1290                           	callstack 0
  1291   000007                     strcpy@src:
  1292                           	callstack 0
  1293   000007                     MSdelay@i:
  1294                           	callstack 0
  1295   000007                     memcpy@s1:
  1296                           	callstack 0
  1297   000007                     strcat@i:
  1298                           	callstack 0
  1299   000007                     ??_read_prec_or_width:
  1300                           
  1301                           ; 1 bytes @ 0x6
  1302   000007                     	ds	1
  1303   000008                     ??_fputc:
  1304   000008                     ??_strcpy:
  1305                           
  1306                           ; 1 bytes @ 0x7
  1307   000008                     	ds	1
  1308   000009                     read_prec_or_width@c:
  1309                           	callstack 0
  1310   000009                     MSdelay@j:
  1311                           	callstack 0
  1312   000009                     memcpy@n:
  1313                           	callstack 0
  1314   000009                     strcpy@d:
  1315                           	callstack 0
  1316   000009                     ___fleq@ff2:
  1317                           	callstack 0
  1318   000009                     ___fladd@a:
  1319                           	callstack 0
  1320   000009                     ___fldiv@a:
  1321                           	callstack 0
  1322   000009                     ??___fpclassifyf:
  1323   000009                     ??_labs:
  1324   000009                     ??___fltol:
  1325   000009                     ??___xxtofl:
  1326                           
  1327                           ; 1 bytes @ 0x8
  1328   000009                     	ds	1
  1329   00000A                     read_prec_or_width@n:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0x9
  1333   00000A                     	ds	1
  1334   00000B                     LCD_Command@cmd:
  1335                           	callstack 0
  1336   00000B                     LCD_Char@dat:
  1337                           	callstack 0
  1338   00000B                     memcpy@d:
  1339                           	callstack 0
  1340   00000B                     
  1341                           ; 1 bytes @ 0xA
  1342   00000B                     	ds	1
  1343   00000C                     LCD_String@msg:
  1344                           	callstack 0
  1345   00000C                     
  1346                           ; 1 bytes @ 0xB
  1347   00000C                     	ds	1
  1348   00000D                     ___fltol@sign1:
  1349                           	callstack 0
  1350   00000D                     ___xxtofl@sign:
  1351                           	callstack 0
  1352   00000D                     ___fpclassifyf@e:
  1353                           	callstack 0
  1354   00000D                     memcpy@s:
  1355                           	callstack 0
  1356   00000D                     fputs@s:
  1357                           	callstack 0
  1358   00000D                     ??___fladd:
  1359   00000D                     ??___fldiv:
  1360   00000D                     ??___fleq:
  1361                           
  1362                           ; 1 bytes @ 0xC
  1363   00000D                     	ds	1
  1364   00000E                     LCD_String_xy@pos:
  1365                           	callstack 0
  1366   00000E                     ___fltol@exp1:
  1367                           	callstack 0
  1368   00000E                     ___xxtofl@exp:
  1369                           	callstack 0
  1370   00000E                     
  1371                           ; 1 bytes @ 0xD
  1372   00000E                     	ds	1
  1373   00000F                     memcpy@tmp:
  1374                           	callstack 0
  1375   00000F                     fputs@fp:
  1376                           	callstack 0
  1377   00000F                     LCD_String_xy@msg:
  1378                           	callstack 0
  1379   00000F                     ___xxtofl@arg:
  1380                           	callstack 0
  1381   00000F                     ___fpclassifyf@u:
  1382                           	callstack 0
  1383                           
  1384                           ; 4 bytes @ 0xE
  1385   00000F                     	ds	1
  1386   000010                     fputs@c:
  1387                           	callstack 0
  1388   000010                     
  1389                           ; 1 bytes @ 0xF
  1390   000010                     	ds	1
  1391   000011                     LCD_String_xy@row:
  1392                           	callstack 0
  1393   000011                     ___fladd@signs:
  1394                           	callstack 0
  1395   000011                     fputs@i:
  1396                           	callstack 0
  1397   000011                     ___fldiv@rem:
  1398                           	callstack 0
  1399   000011                     
  1400                           ; 1 bytes @ 0x10
  1401   000011                     	ds	1
  1402   000012                     LCD_String_xy@location:
  1403                           	callstack 0
  1404   000012                     ___fladd@aexp:
  1405                           	callstack 0
  1406                           
  1407                           ; 1 bytes @ 0x11
  1408   000012                     	ds	1
  1409   000013                     ?___flmul:
  1410                           	callstack 0
  1411   000013                     ___fladd@bexp:
  1412                           	callstack 0
  1413   000013                     pad@fp:
  1414                           	callstack 0
  1415   000013                     ___flmul@b:
  1416                           	callstack 0
  1417                           
  1418                           ; 4 bytes @ 0x12
  1419   000013                     	ds	1
  1420   000014                     ___fladd@grs:
  1421                           	callstack 0
  1422   000014                     pad@buf:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x13
  1426   000014                     	ds	1
  1427   000015                     ___fldiv@sign:
  1428                           	callstack 0
  1429                           
  1430                           ; 1 bytes @ 0x14
  1431   000015                     	ds	1
  1432   000016                     ___fldiv@new_exp:
  1433                           	callstack 0
  1434   000016                     pad@p:
  1435                           	callstack 0
  1436                           
  1437                           ; 2 bytes @ 0x15
  1438   000016                     	ds	1
  1439   000017                     ___flmul@a:
  1440                           	callstack 0
  1441                           
  1442                           ; 4 bytes @ 0x16
  1443   000017                     	ds	1
  1444   000018                     ___fldiv@grs:
  1445                           	callstack 0
  1446   000018                     ??_pad:
  1447                           
  1448                           ; 1 bytes @ 0x17
  1449   000018                     	ds	1
  1450   000019                     pad@i:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x18
  1454   000019                     	ds	2
  1455   00001B                     ??___flmul:
  1456                           
  1457                           ; 1 bytes @ 0x1A
  1458   00001B                     	ds	1
  1459   00001C                     ___fldiv@bexp:
  1460                           	callstack 0
  1461                           
  1462                           ; 1 bytes @ 0x1B
  1463   00001C                     	ds	1
  1464   00001D                     ___fldiv@aexp:
  1465                           	callstack 0
  1466                           
  1467                           ; 1 bytes @ 0x1C
  1468   00001D                     	ds	1
  1469   00001E                     ?_floorf:
  1470                           	callstack 0
  1471   00001E                     floorf@x:
  1472                           	callstack 0
  1473                           
  1474                           ; 4 bytes @ 0x1D
  1475   00001E                     	ds	1
  1476   00001F                     ___flmul@sign:
  1477                           	callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x1E
  1480   00001F                     	ds	1
  1481   000020                     ___flmul@grs:
  1482                           	callstack 0
  1483                           
  1484                           ; 4 bytes @ 0x1F
  1485   000020                     	ds	2
  1486   000022                     ??_floorf:
  1487                           
  1488                           ; 1 bytes @ 0x21
  1489   000022                     	ds	2
  1490   000024                     ___flmul@aexp:
  1491                           	callstack 0
  1492                           
  1493                           ; 1 bytes @ 0x23
  1494   000024                     	ds	1
  1495   000025                     ___flmul@bexp:
  1496                           	callstack 0
  1497                           
  1498                           ; 1 bytes @ 0x24
  1499   000025                     	ds	1
  1500   000026                     ___flmul@prod:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x25
  1504   000026                     	ds	2
  1505   000028                     floorf@m:
  1506                           	callstack 0
  1507                           
  1508                           ; 4 bytes @ 0x27
  1509   000028                     	ds	2
  1510   00002A                     ___flmul@temp:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x29
  1514   00002A                     	ds	2
  1515   00002C                     ?___flsub:
  1516                           	callstack 0
  1517   00002C                     floorf@e:
  1518                           	callstack 0
  1519   00002C                     ___flge@ff1:
  1520                           	callstack 0
  1521   00002C                     ___flsub@b:
  1522                           	callstack 0
  1523                           
  1524                           ; 4 bytes @ 0x2B
  1525   00002C                     	ds	2
  1526   00002E                     floorf@u:
  1527                           	callstack 0
  1528                           
  1529                           ; 4 bytes @ 0x2D
  1530   00002E                     	ds	2
  1531   000030                     ___flge@ff2:
  1532                           	callstack 0
  1533   000030                     ___flsub@a:
  1534                           	callstack 0
  1535                           
  1536                           ; 4 bytes @ 0x2F
  1537   000030                     	ds	4
  1538   000034                     ??___flge:
  1539                           
  1540                           ; 1 bytes @ 0x33
  1541   000034                     	ds	4
  1542   000038                     efgtoa@fp:
  1543                           	callstack 0
  1544                           
  1545                           ; 1 bytes @ 0x37
  1546   000038                     	ds	1
  1547   000039                     efgtoa@f:
  1548                           	callstack 0
  1549                           
  1550                           ; 4 bytes @ 0x38
  1551   000039                     	ds	4
  1552   00003D                     efgtoa@c:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x3C
  1556   00003D                     	ds	1
  1557   00003E                     ??_efgtoa:
  1558                           
  1559                           ; 1 bytes @ 0x3D
  1560   00003E                     	ds	2
  1561   000040                     ??_vfpfcnvrt:
  1562                           
  1563                           ; 1 bytes @ 0x3F
  1564   000040                     	ds	1
  1565   000041                     vfpfcnvrt@convarg:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x40
  1569   000041                     	ds	4
  1570   000045                     vfpfcnvrt@c:
  1571                           	callstack 0
  1572                           
  1573                           ; 1 bytes @ 0x44
  1574   000045                     	ds	1
  1575   000046                     vfpfcnvrt@cp:
  1576                           	callstack 0
  1577                           
  1578                           ; 1 bytes @ 0x45
  1579   000046                     	ds	1
  1580   000047                     vfprintf@cfmt:
  1581                           	callstack 0
  1582   000047                     
  1583                           ; 1 bytes @ 0x46
  1584   000047                     	ds	1
  1585   000048                     sprintf@ap:
  1586                           	callstack 0
  1587   000048                     
  1588                           ; 1 bytes @ 0x47
  1589   000048                     	ds	1
  1590   000049                     sprintf@f:
  1591                           	callstack 0
  1592                           
  1593                           ; 11 bytes @ 0x48
  1594   000049                     	ds	11
  1595                           
  1596 ;;
  1597 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1598 ;;
  1599 ;; *************** function _main *****************
  1600 ;; Defined at:
  1601 ;;		line 101 in file "LCD.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels required when called: 10
  1621 ;; This function calls:
  1622 ;;		_ADC_Init
  1623 ;;		_Initialization
  1624 ;;		_LCD_Init
  1625 ;;		_LCD_String_xy
  1626 ;;		___flmul
  1627 ;;		___xxtofl
  1628 ;;		_sprintf
  1629 ;;		_strcat
  1630 ;; This function is called by:
  1631 ;;		Startup code after reset
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text0
  1636   007D02                     __ptext0:
  1637                           	callstack 0
  1638   007D02                     _main:
  1639                           	callstack 21
  1640   007D02                     
  1641                           ;LCD.c: 104:     Initialization();
  1642   007D02  ECD2  F042         	call	_Initialization	;wreg free
  1643                           
  1644                           ;LCD.c: 107:     ADC_Init();
  1645   007D06  EC59  F044         	call	_ADC_Init	;wreg free
  1646   007D0A                     l3525:
  1647                           
  1648                           ;LCD.c: 109:     {;LCD.c: 111:         ADCON0bits.GO = 1;
  1649   007D0A  013E               	movlb	62	; () banked
  1650   007D0C  81F8               	bsf	248,0,b	;volatile
  1651   007D0E                     l126:
  1652                           
  1653                           ; BSR set to: 62
  1654   007D0E  B1F8               	btfsc	248,0,b	;volatile
  1655   007D10  EF8C  F03E         	goto	u3651
  1656   007D14  EF8E  F03E         	goto	u3650
  1657   007D18                     u3651:
  1658   007D18  EF87  F03E         	goto	l126
  1659   007D1C                     u3650:
  1660   007D1C                     
  1661                           ; BSR set to: 62
  1662                           ;LCD.c: 114:         digital = (ADRESH*256) | (ADRESL);
  1663   007D1C  51EF               	movf	239,w,b	;volatile
  1664   007D1E  006F FBC0  F098    	movff	16112,??_main	;volatile
  1665   007D24  0100               	movlb	0	; () banked
  1666   007D26  6B99               	clrf	(??_main+1)& (0+255),b
  1667   007D28  C098  F099         	movff	??_main,??_main+1
  1668   007D2C  6B98               	clrf	??_main& (0+255),b
  1669   007D2E  1198               	iorwf	??_main& (0+255),w,b
  1670   007D30  6E58               	movwf	_digital^0,c
  1671   007D32  5199               	movf	(??_main+1)& (0+255),w,b
  1672   007D34  6E59               	movwf	(_digital+1)^0,c
  1673   007D36                     
  1674                           ; BSR set to: 0
  1675                           ;LCD.c: 116:         voltage = digital*((float)3.3/(float)(4096));
  1676   007D36  C058  F005         	movff	_digital,___xxtofl@val
  1677   007D3A  C059  F006         	movff	_digital+1,___xxtofl@val+1
  1678   007D3E  0E00               	movlw	0
  1679   007D40  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1680   007D42  0EFF               	movlw	-1
  1681   007D44  6E07               	movwf	(___xxtofl@val+2)^0,c
  1682   007D46  6E08               	movwf	(___xxtofl@val+3)^0,c
  1683   007D48  0E01               	movlw	1
  1684   007D4A  ECA7  F03D         	call	___xxtofl
  1685   007D4E  C005  F013         	movff	?___xxtofl,___flmul@b
  1686   007D52  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1687   007D56  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1688   007D5A  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1689   007D5E  0E33               	movlw	51
  1690   007D60  6E17               	movwf	___flmul@a^0,c
  1691   007D62  0E33               	movlw	51
  1692   007D64  6E18               	movwf	(___flmul@a+1)^0,c
  1693   007D66  0E53               	movlw	83
  1694   007D68  6E19               	movwf	(___flmul@a+2)^0,c
  1695   007D6A  0E3A               	movlw	58
  1696   007D6C  6E1A               	movwf	(___flmul@a+3)^0,c
  1697   007D6E  ECA7  F037         	call	___flmul	;wreg free
  1698   007D72  C013  F054         	movff	?___flmul,_voltage
  1699   007D76  C014  F055         	movff	?___flmul+1,_voltage+1
  1700   007D7A  C015  F056         	movff	?___flmul+2,_voltage+2
  1701   007D7E  C016  F057         	movff	?___flmul+3,_voltage+3
  1702   007D82                     
  1703                           ;LCD.c: 121:         LUX=voltage*200;
  1704   007D82  C054  F013         	movff	_voltage,___flmul@b
  1705   007D86  C055  F014         	movff	_voltage+1,___flmul@b+1
  1706   007D8A  C056  F015         	movff	_voltage+2,___flmul@b+2
  1707   007D8E  C057  F016         	movff	_voltage+3,___flmul@b+3
  1708   007D92  0E00               	movlw	0
  1709   007D94  6E17               	movwf	___flmul@a^0,c
  1710   007D96  0E00               	movlw	0
  1711   007D98  6E18               	movwf	(___flmul@a+1)^0,c
  1712   007D9A  0E48               	movlw	72
  1713   007D9C  6E19               	movwf	(___flmul@a+2)^0,c
  1714   007D9E  0E43               	movlw	67
  1715   007DA0  6E1A               	movwf	(___flmul@a+3)^0,c
  1716   007DA2  ECA7  F037         	call	___flmul	;wreg free
  1717   007DA6  C013  F0A2         	movff	?___flmul,_LUX
  1718   007DAA  C014  F0A3         	movff	?___flmul+1,_LUX+1
  1719   007DAE  C015  F0A4         	movff	?___flmul+2,_LUX+2
  1720   007DB2  C016  F0A5         	movff	?___flmul+3,_LUX+3
  1721   007DB6                     
  1722                           ;LCD.c: 123:         sprintf(data,"%.0f",LUX);
  1723   007DB6  0EAA               	movlw	low _data
  1724   007DB8  0100               	movlb	0	; () banked
  1725   007DBA  6F92               	movwf	sprintf@s& (0+255),b
  1726   007DBC  0E17               	movlw	low STR_1
  1727   007DBE  6F93               	movwf	sprintf@fmt& (0+255),b
  1728   007DC0  C0A2  F094         	movff	_LUX,?_sprintf+2
  1729   007DC4  C0A3  F095         	movff	_LUX+1,?_sprintf+3
  1730   007DC8  C0A4  F096         	movff	_LUX+2,?_sprintf+4
  1731   007DCC  C0A5  F097         	movff	_LUX+3,?_sprintf+5
  1732   007DD0  ECF1  F043         	call	_sprintf	;wreg free
  1733   007DD4                     
  1734                           ;LCD.c: 124:         strcat(data," LUX");
  1735   007DD4  0EAA               	movlw	low _data
  1736   007DD6  6E05               	movwf	strcat@dest^0,c
  1737   007DD8  0E12               	movlw	low STR_2
  1738   007DDA  6E06               	movwf	strcat@src^0,c
  1739   007DDC  EC49  F042         	call	_strcat	;wreg free
  1740   007DE0                     
  1741                           ;LCD.c: 127:     LCD_Init();
  1742   007DE0  EC44  F044         	call	_LCD_Init	;wreg free
  1743   007DE4                     
  1744                           ;LCD.c: 128:     LCD_String_xy(1,0,"The Input light:");
  1745   007DE4  0E00               	movlw	0
  1746   007DE6  6E0E               	movwf	LCD_String_xy@pos^0,c
  1747   007DE8  0E01               	movlw	low STR_3
  1748   007DEA  6E0F               	movwf	LCD_String_xy@msg^0,c
  1749   007DEC  500F               	movf	LCD_String_xy@msg^0,w,c
  1750   007DEE  A4D8               	btfss	status,2,c
  1751   007DF0  0E20               	movlw	high __smallconst
  1752   007DF2  6E10               	movwf	(LCD_String_xy@msg+1)^0,c
  1753   007DF4  0E01               	movlw	1
  1754   007DF6  ECD1  F043         	call	_LCD_String_xy
  1755   007DFA                     
  1756                           ;LCD.c: 130:     LCD_String_xy(2,0,data);
  1757   007DFA  0E00               	movlw	0
  1758   007DFC  6E0E               	movwf	LCD_String_xy@pos^0,c
  1759   007DFE  0EAA               	movlw	low _data
  1760   007E00  6E0F               	movwf	LCD_String_xy@msg^0,c
  1761   007E02  6A10               	clrf	(LCD_String_xy@msg+1)^0,c
  1762   007E04  0E02               	movlw	2
  1763   007E06  ECD1  F043         	call	_LCD_String_xy
  1764   007E0A                     
  1765                           ;LCD.c: 132:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1766   007E0A  0E03               	movlw	3
  1767   007E0C  0100               	movlb	0	; () banked
  1768   007E0E  6F99               	movwf	(??_main+1)& (0+255),b
  1769   007E10  0E8A               	movlw	138
  1770   007E12  6F98               	movwf	??_main& (0+255),b
  1771   007E14  0E55               	movlw	85
  1772   007E16                     u3667:
  1773   007E16  2EE8               	decfsz	wreg,f,c
  1774   007E18  D7FE               	bra	u3667
  1775   007E1A  2F98               	decfsz	??_main& (0+255),f,b
  1776   007E1C  D7FC               	bra	u3667
  1777   007E1E  2F99               	decfsz	(??_main+1)& (0+255),f,b
  1778   007E20  D7FA               	bra	u3667
  1779   007E22  D000               	nop2	
  1780   007E24  EF85  F03E         	goto	l3525
  1781   007E28  EF57  F030         	goto	start
  1782   007E2C                     __end_of_main:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _strcat *****************
  1786 ;; Defined at:
  1787 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  dest            1    4[COMRAM] PTR unsigned char 
  1790 ;;		 -> data(10), 
  1791 ;;  src             1    5[COMRAM] PTR const unsigned char 
  1792 ;;		 -> STR_2(5), 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  i               2    6[COMRAM] unsigned int 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    4[COMRAM] PTR unsigned char 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1808 ;;Total ram usage:        4 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 2
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text1
  1819   008492                     __ptext1:
  1820                           	callstack 0
  1821   008492                     _strcat:
  1822                           	callstack 28
  1823   008492  0E00               	movlw	0
  1824   008494  6E08               	movwf	(strcat@i+1)^0,c
  1825   008496  0E00               	movlw	0
  1826   008498  6E07               	movwf	strcat@i^0,c
  1827   00849A  EF51  F042         	goto	l3427
  1828   00849E                     l3425:
  1829   00849E  4A07               	infsnz	strcat@i^0,f,c
  1830   0084A0  2A08               	incf	(strcat@i+1)^0,f,c
  1831   0084A2                     l3427:
  1832   0084A2  5005               	movf	strcat@dest^0,w,c
  1833   0084A4  2407               	addwf	strcat@i^0,w,c
  1834   0084A6  6ED9               	movwf	fsr2l,c
  1835   0084A8  6ADA               	clrf	fsr2h,c
  1836   0084AA  50DF               	movf	indf2,w,c
  1837   0084AC  A4D8               	btfss	status,2,c
  1838   0084AE  EF5B  F042         	goto	u3511
  1839   0084B2  EF5D  F042         	goto	u3510
  1840   0084B6                     u3511:
  1841   0084B6  EF4F  F042         	goto	l3425
  1842   0084BA                     u3510:
  1843   0084BA  EF62  F042         	goto	l3431
  1844   0084BE                     l3429:
  1845   0084BE  4A07               	infsnz	strcat@i^0,f,c
  1846   0084C0  2A08               	incf	(strcat@i+1)^0,f,c
  1847   0084C2  2A06               	incf	strcat@src^0,f,c
  1848   0084C4                     l3431:
  1849   0084C4  0060  F01B  FFF6   	movff	strcat@src,tblptrl
  1850   0084CA                     	if	1	;There is more than 1 active tblptr byte
  1851   0084CA  0E20               	movlw	high __smallconst
  1852   0084CC  6EF7               	movwf	tblptrh,c
  1853   0084CE                     	endif
  1854   0084CE                     	if	0	;tblptru may be non-zero
  1855   0084CE                     	endif
  1856   0084CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1857   0084CE  0E00               	movlw	low (__smallconst shr (0+16))
  1858   0084D0  6EF8               	movwf	tblptru,c
  1859   0084D2                     	endif
  1860   0084D2  5005               	movf	strcat@dest^0,w,c
  1861   0084D4  2407               	addwf	strcat@i^0,w,c
  1862   0084D6  6ED9               	movwf	fsr2l,c
  1863   0084D8  6ADA               	clrf	fsr2h,c
  1864   0084DA  0008               	tblrd		*
  1865   0084DC  006F FFD7 FFDF     	movff	tablat,indf2
  1866   0084E2  50DF               	movf	indf2,w,c
  1867   0084E4  A4D8               	btfss	status,2,c
  1868   0084E6  EF77  F042         	goto	u3521
  1869   0084EA  EF79  F042         	goto	u3520
  1870   0084EE                     u3521:
  1871   0084EE  EF5F  F042         	goto	l3429
  1872   0084F2                     u3520:
  1873   0084F2  0012               	return		;funcret
  1874   0084F4                     __end_of_strcat:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _sprintf *****************
  1878 ;; Defined at:
  1879 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  s               1   50[BANK0 ] PTR unsigned char 
  1882 ;;		 -> data(10), 
  1883 ;;  fmt             1   51[BANK0 ] PTR const unsigned char 
  1884 ;;		 -> STR_1(5), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  f              11   72[COMRAM] struct _IO_FILE
  1887 ;;  ret             2    0        int 
  1888 ;;  ap              1   71[COMRAM] PTR void [1]
  1889 ;;		 -> ?_sprintf(2), 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  2   50[BANK0 ] int 
  1892 ;; Registers used:
  1893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1899 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1900 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1902 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1903 ;;Total ram usage:       18 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; Hardware stack levels required when called: 9
  1906 ;; This function calls:
  1907 ;;		_vfprintf
  1908 ;; This function is called by:
  1909 ;;		_main
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text2
  1914   0087E2                     __ptext2:
  1915                           	callstack 0
  1916   0087E2                     _sprintf:
  1917                           	callstack 21
  1918   0087E2  0E94               	movlw	low (?_sprintf+2)
  1919   0087E4  6E48               	movwf	sprintf@ap^0,c
  1920   0087E6  C092  F049         	movff	sprintf@s,sprintf@f
  1921   0087EA  0E00               	movlw	0
  1922   0087EC  6E4C               	movwf	(sprintf@f+3)^0,c
  1923   0087EE  0E00               	movlw	0
  1924   0087F0  6E4B               	movwf	(sprintf@f+2)^0,c
  1925   0087F2  0E00               	movlw	0
  1926   0087F4  6E53               	movwf	(sprintf@f+10)^0,c
  1927   0087F6  0E00               	movlw	0
  1928   0087F8  6E52               	movwf	(sprintf@f+9)^0,c
  1929   0087FA  0E49               	movlw	low sprintf@f
  1930   0087FC  0100               	movlb	0	; () banked
  1931   0087FE  6F8F               	movwf	vfprintf@fp& (0+255),b
  1932   008800  C093  F090         	movff	sprintf@fmt,vfprintf@fmt
  1933   008804  0E48               	movlw	low sprintf@ap
  1934   008806  6F91               	movwf	vfprintf@ap& (0+255),b
  1935   008808  EC47  F043         	call	_vfprintf	;wreg free
  1936   00880C  0100               	movlb	0	; () banked
  1937   00880E  5192               	movf	sprintf@s& (0+255),w,b
  1938   008810  244B               	addwf	(sprintf@f+2)^0,w,c
  1939   008812  6ED9               	movwf	fsr2l,c
  1940   008814  6ADA               	clrf	fsr2h,c
  1941   008816  6ADF               	clrf	indf2,c
  1942   008818                     
  1943                           ; BSR set to: 0
  1944   008818  0012               	return		;funcret
  1945   00881A                     __end_of_sprintf:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _vfprintf *****************
  1949 ;; Defined at:
  1950 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  fp              1   47[BANK0 ] PTR struct _IO_FILE
  1953 ;;		 -> sprintf@f(11), 
  1954 ;;  fmt             1   48[BANK0 ] PTR const unsigned char 
  1955 ;;		 -> STR_1(5), 
  1956 ;;  ap              1   49[BANK0 ] PTR PTR void 
  1957 ;;		 -> sprintf@ap(1), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  cfmt            1   70[COMRAM] PTR unsigned char 
  1960 ;;		 -> STR_1(5), 
  1961 ;; Return value:  Size  Location     Type
  1962 ;;                  2   47[BANK0 ] int 
  1963 ;; Registers used:
  1964 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1965 ;; Tracked objects:
  1966 ;;		On entry : 0/0
  1967 ;;		On exit  : 0/0
  1968 ;;		Unchanged: 0/0
  1969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1970 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1973 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1974 ;;Total ram usage:        4 bytes
  1975 ;; Hardware stack levels used: 1
  1976 ;; Hardware stack levels required when called: 8
  1977 ;; This function calls:
  1978 ;;		_vfpfcnvrt
  1979 ;; This function is called by:
  1980 ;;		_sprintf
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text3
  1985   00868E                     __ptext3:
  1986                           	callstack 0
  1987   00868E                     _vfprintf:
  1988                           	callstack 21
  1989   00868E                     
  1990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1991   00868E  C090  F047         	movff	vfprintf@fmt,vfprintf@cfmt
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1994   008692  EF54  F043         	goto	l3325
  1995   008696                     l3323:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1998   008696  C08F  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1999   00869A  0E47               	movlw	low vfprintf@cfmt
  2000   00869C  0100               	movlb	0	; () banked
  2001   00869E  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2002   0086A0  C091  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2003   0086A4  EC94  F03B         	call	_vfpfcnvrt	;wreg free
  2004   0086A8                     l3325:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2007   0086A8  0060  F11F  FFF6   	movff	vfprintf@cfmt,tblptrl
  2008   0086AE                     	if	1	;There is more than 1 active tblptr byte
  2009   0086AE  0E20               	movlw	high __smallconst
  2010   0086B0  6EF7               	movwf	tblptrh,c
  2011   0086B2                     	endif
  2012   0086B2                     	if	0	;tblptru may be non-zero
  2013   0086B2                     	endif
  2014   0086B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2015   0086B2  0E00               	movlw	low (__smallconst shr (0+16))
  2016   0086B4  6EF8               	movwf	tblptru,c
  2017   0086B6                     	endif
  2018   0086B6  0008               	tblrd		*
  2019   0086B8  50F5               	movf	tablat,w,c
  2020   0086BA  0900               	iorlw	0
  2021   0086BC  A4D8               	btfss	status,2,c
  2022   0086BE  EF63  F043         	goto	u3501
  2023   0086C2  EF65  F043         	goto	u3500
  2024   0086C6                     u3501:
  2025   0086C6  EF4B  F043         	goto	l3323
  2026   0086CA                     u3500:
  2027   0086CA                     
  2028                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2029   0086CA  0E00               	movlw	0
  2030   0086CC  0100               	movlb	0	; () banked
  2031   0086CE  6F90               	movwf	(?_vfprintf+1)& (0+255),b
  2032   0086D0  0E00               	movlw	0
  2033   0086D2  6F8F               	movwf	?_vfprintf& (0+255),b
  2034   0086D4                     
  2035                           ; BSR set to: 0
  2036   0086D4  0012               	return		;funcret
  2037   0086D6                     __end_of_vfprintf:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _vfpfcnvrt *****************
  2041 ;; Defined at:
  2042 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  2045 ;;		 -> sprintf@f(11), 
  2046 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  2047 ;;		 -> vfprintf@cfmt(1), 
  2048 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2049 ;;		 -> sprintf@ap(1), 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  convarg         4   64[COMRAM] struct .
  2052 ;;  cp              1   69[COMRAM] PTR unsigned char 
  2053 ;;		 -> STR_1(5), 
  2054 ;;  c               1   68[COMRAM] unsigned char 
  2055 ;;  done            1    0        _Bool 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2065 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2066 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2068 ;;      Totals:         7       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2069 ;;Total ram usage:       10 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 7
  2072 ;; This function calls:
  2073 ;;		_efgtoa
  2074 ;;		_fputc
  2075 ;;		_read_prec_or_width
  2076 ;; This function is called by:
  2077 ;;		_vfprintf
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text4
  2082   007728                     __ptext4:
  2083                           	callstack 0
  2084   007728                     _vfpfcnvrt:
  2085                           	callstack 21
  2086   007728                     
  2087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2088   007728  0100               	movlb	0	; () banked
  2089   00772A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2090   00772C  6ED9               	movwf	fsr2l,c
  2091   00772E  6ADA               	clrf	fsr2h,c
  2092   007730  006F FF7F FFF6     	movff	indf2,tblptrl
  2093   007736                     	if	1	;There is more than 1 active tblptr byte
  2094   007736  0E20               	movlw	high __smallconst
  2095   007738  6EF7               	movwf	tblptrh,c
  2096   00773A                     	endif
  2097   00773A                     	if	0	;tblptru may be non-zero
  2098   00773A                     	endif
  2099   00773A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2100   00773A  0E00               	movlw	low (__smallconst shr (0+16))
  2101   00773C  6EF8               	movwf	tblptru,c
  2102   00773E                     	endif
  2103   00773E  0008               	tblrd		*
  2104   007740  50F5               	movf	tablat,w,c
  2105   007742  0A25               	xorlw	37
  2106   007744  A4D8               	btfss	status,2,c
  2107   007746  EFA7  F03B         	goto	u3441
  2108   00774A  EFA9  F03B         	goto	u3440
  2109   00774E                     u3441:
  2110   00774E  EF89  F03C         	goto	l3295
  2111   007752                     u3440:
  2112   007752                     
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2115   007752  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2116   007754  6ED9               	movwf	fsr2l,c
  2117   007756  6ADA               	clrf	fsr2h,c
  2118   007758  2ADF               	incf	indf2,f,c
  2119   00775A                     
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2122   00775A  0E00               	movlw	0
  2123   00775C  6FA7               	movwf	(_width+1)& (0+255),b
  2124   00775E  0E00               	movlw	0
  2125   007760  6FA6               	movwf	_width& (0+255),b
  2126   007762  C0A6  F05A         	movff	_width,_flags
  2127   007766                     
  2128                           ; BSR set to: 0
  2129                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2130   007766  69A8               	setf	_prec& (0+255),b
  2131   007768  69A9               	setf	(_prec+1)& (0+255),b
  2132   00776A                     
  2133                           ; BSR set to: 0
  2134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2135   00776A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2136   00776C  6ED9               	movwf	fsr2l,c
  2137   00776E  6ADA               	clrf	fsr2h,c
  2138   007770  006F FF7F FFF6     	movff	indf2,tblptrl
  2139   007776                     	if	1	;There is more than 1 active tblptr byte
  2140   007776  0E20               	movlw	high __smallconst
  2141   007778  6EF7               	movwf	tblptrh,c
  2142   00777A                     	endif
  2143   00777A                     	if	0	;tblptru may be non-zero
  2144   00777A                     	endif
  2145   00777A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2146   00777A  0E00               	movlw	low (__smallconst shr (0+16))
  2147   00777C  6EF8               	movwf	tblptru,c
  2148   00777E                     	endif
  2149   00777E  0008               	tblrd		*
  2150   007780  50F5               	movf	tablat,w,c
  2151   007782  0A2E               	xorlw	46
  2152   007784  A4D8               	btfss	status,2,c
  2153   007786  EFC7  F03B         	goto	u3451
  2154   00778A  EFC9  F03B         	goto	u3450
  2155   00778E                     u3451:
  2156   00778E  EFD7  F03B         	goto	l3259
  2157   007792                     u3450:
  2158   007792                     
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2161   007792  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2162   007794  6ED9               	movwf	fsr2l,c
  2163   007796  6ADA               	clrf	fsr2h,c
  2164   007798  2ADF               	incf	indf2,f,c
  2165   00779A                     
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2168   00779A  C08D  F005         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2169   00779E  C08E  F006         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2170   0077A2  EC9A  F040         	call	_read_prec_or_width	;wreg free
  2171   0077A6  C005  F0A8         	movff	?_read_prec_or_width,_prec
  2172   0077AA  C006  F0A9         	movff	?_read_prec_or_width+1,_prec+1
  2173   0077AE                     l3259:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2176   0077AE  0100               	movlb	0	; () banked
  2177   0077B0  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2178   0077B2  6ED9               	movwf	fsr2l,c
  2179   0077B4  6ADA               	clrf	fsr2h,c
  2180   0077B6  50DF               	movf	indf2,w,c
  2181   0077B8  6E46               	movwf	vfpfcnvrt@cp^0,c
  2182   0077BA                     
  2183                           ; BSR set to: 0
  2184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2185   0077BA  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2186   0077C0                     	if	1	;There is more than 1 active tblptr byte
  2187   0077C0  0E20               	movlw	high __smallconst
  2188   0077C2  6EF7               	movwf	tblptrh,c
  2189   0077C4                     	endif
  2190   0077C4                     	if	0	;tblptru may be non-zero
  2191   0077C4                     	endif
  2192   0077C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2193   0077C4  0E00               	movlw	low (__smallconst shr (0+16))
  2194   0077C6  6EF8               	movwf	tblptru,c
  2195   0077C8                     	endif
  2196   0077C8  0008               	tblrd		*
  2197   0077CA  006F FFD4  F045    	movff	tablat,vfpfcnvrt@c
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2200   0077D0  EFF4  F03B         	goto	l3269
  2201   0077D4                     l3263:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2205   0077D4  2A46               	incf	vfpfcnvrt@cp^0,f,c
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2208   0077D6  EF03  F03C         	goto	l3271
  2209   0077DA                     l3265:
  2210                           
  2211                           ; BSR set to: 0
  2212                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2213   0077DA  0E6C               	movlw	108
  2214   0077DC  6E45               	movwf	vfpfcnvrt@c^0,c
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2217   0077DE  EF03  F03C         	goto	l3271
  2218   0077E2                     l959:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2222   0077E2  6A45               	clrf	vfpfcnvrt@c^0,c
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2225   0077E4  EF03  F03C         	goto	l3271
  2226   0077E8                     l3269:
  2227                           
  2228                           ; BSR set to: 0
  2229   0077E8  5045               	movf	vfpfcnvrt@c^0,w,c
  2230                           
  2231                           ; Switch size 1, requested type "simple"
  2232                           ; Number of cases is 3, Range of values is 76 to 108
  2233                           ; switch strategies available:
  2234                           ; Name         Instructions Cycles
  2235                           ; simple_byte           10     6 (average)
  2236                           ;	Chosen strategy is simple_byte
  2237   0077EA  0A4C               	xorlw	76	; case 76
  2238   0077EC  B4D8               	btfsc	status,2,c
  2239   0077EE  EFEA  F03B         	goto	l3263
  2240   0077F2  0A2A               	xorlw	42	; case 102
  2241   0077F4  B4D8               	btfsc	status,2,c
  2242   0077F6  EFED  F03B         	goto	l3265
  2243   0077FA  0A0A               	xorlw	10	; case 108
  2244   0077FC  B4D8               	btfsc	status,2,c
  2245   0077FE  EFEA  F03B         	goto	l3263
  2246   007802  EFF1  F03B         	goto	l959
  2247   007806                     l3271:
  2248                           
  2249                           ; BSR set to: 0
  2250   007806  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2251   00780C                     	if	1	;There is more than 1 active tblptr byte
  2252   00780C  0E20               	movlw	high __smallconst
  2253   00780E  6EF7               	movwf	tblptrh,c
  2254   007810                     	endif
  2255   007810                     	if	0	;tblptru may be non-zero
  2256   007810                     	endif
  2257   007810                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2258   007810  0E00               	movlw	low (__smallconst shr (0+16))
  2259   007812  6EF8               	movwf	tblptru,c
  2260   007814                     	endif
  2261   007814  0008               	tblrd		*
  2262   007816  50F5               	movf	tablat,w,c
  2263   007818  0A66               	xorlw	102
  2264   00781A  A4D8               	btfss	status,2,c
  2265   00781C  EF12  F03C         	goto	u3461
  2266   007820  EF14  F03C         	goto	u3460
  2267   007824                     u3461:
  2268   007824  EF82  F03C         	goto	l3291
  2269   007828                     u3460:
  2270   007828  EF48  F03C         	goto	l3279
  2271   00782C                     l3273:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2275   00782C  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2276   00782E  6ED9               	movwf	fsr2l,c
  2277   007830  6ADA               	clrf	fsr2h,c
  2278   007832  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2279   007838  0E04               	movlw	4
  2280   00783A  26DF               	addwf	indf2,f,c
  2281   00783C  5040               	movf	??_vfpfcnvrt^0,w,c
  2282   00783E  6ED9               	movwf	fsr2l,c
  2283   007840  6ADA               	clrf	fsr2h,c
  2284   007842  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2285   007848  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2286   00784E  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2287   007854  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2290   00785A  EF53  F03C         	goto	l3281
  2291   00785E                     l3275:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2295   00785E  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2296   007860  6ED9               	movwf	fsr2l,c
  2297   007862  6ADA               	clrf	fsr2h,c
  2298   007864  006F FF7C  F040    	movff	indf2,??_vfpfcnvrt
  2299   00786A  0E04               	movlw	4
  2300   00786C  26DF               	addwf	indf2,f,c
  2301   00786E  5040               	movf	??_vfpfcnvrt^0,w,c
  2302   007870  6ED9               	movwf	fsr2l,c
  2303   007872  6ADA               	clrf	fsr2h,c
  2304   007874  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg
  2305   00787A  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+1
  2306   007880  006F FF78  F043    	movff	postinc2,vfpfcnvrt@convarg+2
  2307   007886  006F FF78  F044    	movff	postinc2,vfpfcnvrt@convarg+3
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2310   00788C  EF53  F03C         	goto	l3281
  2311   007890                     l3279:
  2312                           
  2313                           ; BSR set to: 0
  2314   007890  5045               	movf	vfpfcnvrt@c^0,w,c
  2315                           
  2316                           ; Switch size 1, requested type "simple"
  2317                           ; Number of cases is 2, Range of values is 76 to 108
  2318                           ; switch strategies available:
  2319                           ; Name         Instructions Cycles
  2320                           ; simple_byte            7     4 (average)
  2321                           ;	Chosen strategy is simple_byte
  2322   007892  0A4C               	xorlw	76	; case 76
  2323   007894  B4D8               	btfsc	status,2,c
  2324   007896  EF2F  F03C         	goto	l3275
  2325   00789A  0A20               	xorlw	32	; case 108
  2326   00789C  B4D8               	btfsc	status,2,c
  2327   00789E  EF16  F03C         	goto	l3273
  2328   0078A2  EF53  F03C         	goto	l3281
  2329   0078A6                     l3281:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2333   0078A6  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2334   0078A8  6ED9               	movwf	fsr2l,c
  2335   0078AA  6ADA               	clrf	fsr2h,c
  2336   0078AC  2846               	incf	vfpfcnvrt@cp^0,w,c
  2337   0078AE  6EDF               	movwf	indf2,c
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2340   0078B0  EF73  F03C         	goto	l3289
  2341   0078B4                     l3283:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2345   0078B4  C08C  F038         	movff	vfpfcnvrt@fp,efgtoa@fp
  2346   0078B8  C041  F039         	movff	vfpfcnvrt@convarg,efgtoa@f
  2347   0078BC  C042  F03A         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2348   0078C0  C043  F03B         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2349   0078C4  C044  F03C         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2350   0078C8  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2351   0078CE                     	if	1	;There is more than 1 active tblptr byte
  2352   0078CE  0E20               	movlw	high __smallconst
  2353   0078D0  6EF7               	movwf	tblptrh,c
  2354   0078D2                     	endif
  2355   0078D2                     	if	0	;tblptru may be non-zero
  2356   0078D2                     	endif
  2357   0078D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2358   0078D2  0E00               	movlw	low (__smallconst shr (0+16))
  2359   0078D4  6EF8               	movwf	tblptru,c
  2360   0078D6                     	endif
  2361   0078D6  0008               	tblrd		*
  2362   0078D8  006F FFD4  F03D    	movff	tablat,efgtoa@c
  2363   0078DE  EC59  F030         	call	_efgtoa	;wreg free
  2364   0078E2  EF9D  F03C         	goto	l969
  2365   0078E6                     l3289:
  2366                           
  2367                           ; BSR set to: 0
  2368   0078E6  0060  F11B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2369   0078EC                     	if	1	;There is more than 1 active tblptr byte
  2370   0078EC  0E20               	movlw	high __smallconst
  2371   0078EE  6EF7               	movwf	tblptrh,c
  2372   0078F0                     	endif
  2373   0078F0                     	if	0	;tblptru may be non-zero
  2374   0078F0                     	endif
  2375   0078F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2376   0078F0  0E00               	movlw	low (__smallconst shr (0+16))
  2377   0078F2  6EF8               	movwf	tblptru,c
  2378   0078F4                     	endif
  2379   0078F4  0008               	tblrd		*
  2380   0078F6  50F5               	movf	tablat,w,c
  2381                           
  2382                           ; Switch size 1, requested type "simple"
  2383                           ; Number of cases is 1, Range of values is 102 to 102
  2384                           ; switch strategies available:
  2385                           ; Name         Instructions Cycles
  2386                           ; simple_byte            4     3 (average)
  2387                           ;	Chosen strategy is simple_byte
  2388   0078F8  0A66               	xorlw	102	; case 102
  2389   0078FA  B4D8               	btfsc	status,2,c
  2390   0078FC  EF5A  F03C         	goto	l3283
  2391   007900  EF82  F03C         	goto	l3291
  2392   007904                     l3291:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2395   007904  0100               	movlb	0	; () banked
  2396   007906  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2397   007908  6ED9               	movwf	fsr2l,c
  2398   00790A  6ADA               	clrf	fsr2h,c
  2399   00790C  2ADF               	incf	indf2,f,c
  2400   00790E  EF9D  F03C         	goto	l969
  2401   007912                     l3295:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2405   007912  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2406   007914  6ED9               	movwf	fsr2l,c
  2407   007916  6ADA               	clrf	fsr2h,c
  2408   007918  006F FF7F FFF6     	movff	indf2,tblptrl
  2409   00791E                     	if	1	;There is more than 1 active tblptr byte
  2410   00791E  0E20               	movlw	high __smallconst
  2411   007920  6EF7               	movwf	tblptrh,c
  2412   007922                     	endif
  2413   007922                     	if	0	;tblptru may be non-zero
  2414   007922                     	endif
  2415   007922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2416   007922  0E00               	movlw	low (__smallconst shr (0+16))
  2417   007924  6EF8               	movwf	tblptru,c
  2418   007926                     	endif
  2419   007926  0008               	tblrd		*
  2420   007928  50F5               	movf	tablat,w,c
  2421   00792A  6E05               	movwf	fputc@c^0,c
  2422   00792C  6A06               	clrf	(fputc@c+1)^0,c
  2423   00792E  C08C  F007         	movff	vfpfcnvrt@fp,fputc@fp
  2424   007932  ECF6  F040         	call	_fputc	;wreg free
  2425   007936  EF82  F03C         	goto	l3291
  2426   00793A                     l969:
  2427   00793A  0012               	return		;funcret
  2428   00793C                     __end_of_vfpfcnvrt:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _read_prec_or_width *****************
  2432 ;; Defined at:
  2433 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  fmt             1    4[COMRAM] PTR PTR const unsigned c
  2436 ;;		 -> vfprintf@cfmt(1), 
  2437 ;;  ap              1    5[COMRAM] PTR PTR void [1]
  2438 ;;		 -> sprintf@ap(1), 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  c               1    8[COMRAM] unsigned char 
  2441 ;;  n               2    9[COMRAM] int 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  2    4[COMRAM] int 
  2444 ;; Registers used:
  2445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2452 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2454 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2455 ;;Total ram usage:        7 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_vfpfcnvrt
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text5
  2466   008134                     __ptext5:
  2467                           	callstack 0
  2468   008134                     _read_prec_or_width:
  2469                           	callstack 25
  2470   008134                     
  2471                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2472   008134  0E00               	movlw	0
  2473   008136  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2474   008138  0E00               	movlw	0
  2475   00813A  6E0A               	movwf	read_prec_or_width@n^0,c
  2476   00813C                     
  2477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2478   00813C  5005               	movf	read_prec_or_width@fmt^0,w,c
  2479   00813E  6ED9               	movwf	fsr2l,c
  2480   008140  6ADA               	clrf	fsr2h,c
  2481   008142  006F FF7F FFF6     	movff	indf2,tblptrl
  2482   008148                     	if	1	;There is more than 1 active tblptr byte
  2483   008148  0E20               	movlw	high __smallconst
  2484   00814A  6EF7               	movwf	tblptrh,c
  2485   00814C                     	endif
  2486   00814C                     	if	0	;tblptru may be non-zero
  2487   00814C                     	endif
  2488   00814C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2489   00814C  0E00               	movlw	low (__smallconst shr (0+16))
  2490   00814E  6EF8               	movwf	tblptru,c
  2491   008150                     	endif
  2492   008150  0008               	tblrd		*
  2493   008152  50F5               	movf	tablat,w,c
  2494   008154  0A2A               	xorlw	42
  2495   008156  A4D8               	btfss	status,2,c
  2496   008158  EFB0  F040         	goto	u3421
  2497   00815C  EFB2  F040         	goto	u3420
  2498   008160                     u3421:
  2499   008160  EFDB  F040         	goto	l3231
  2500   008164                     u3420:
  2501   008164                     
  2502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2503   008164  5005               	movf	read_prec_or_width@fmt^0,w,c
  2504   008166  6ED9               	movwf	fsr2l,c
  2505   008168  6ADA               	clrf	fsr2h,c
  2506   00816A  2ADF               	incf	indf2,f,c
  2507   00816C                     
  2508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2509   00816C  5006               	movf	read_prec_or_width@ap^0,w,c
  2510   00816E  6ED9               	movwf	fsr2l,c
  2511   008170  6ADA               	clrf	fsr2h,c
  2512   008172  0E02               	movlw	2
  2513   008174  26DF               	addwf	indf2,f,c
  2514   008176  5CDF               	subwf	indf2,w,c
  2515   008178  6ED9               	movwf	fsr2l,c
  2516   00817A  6ADA               	clrf	fsr2h,c
  2517   00817C  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  2518   008182  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2521   008188  EFF1  F040         	goto	l945
  2522   00818C                     l3227:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2525   00818C  0E0A               	movlw	10
  2526   00818E  020A               	mulwf	read_prec_or_width@n^0,c
  2527   008190  006F FFCC  F007    	movff	prodl,??_read_prec_or_width
  2528   008196  006F FFD0  F008    	movff	prodh,??_read_prec_or_width+1
  2529   00819C  020B               	mulwf	(read_prec_or_width@n+1)^0,c
  2530   00819E  50F3               	movf	prodl,w,c
  2531   0081A0  2608               	addwf	(??_read_prec_or_width+1)^0,f,c
  2532   0081A2  5009               	movf	read_prec_or_width@c^0,w,c
  2533   0081A4  2407               	addwf	??_read_prec_or_width^0,w,c
  2534   0081A6  6E0A               	movwf	read_prec_or_width@n^0,c
  2535   0081A8  0E00               	movlw	0
  2536   0081AA  2008               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2537   0081AC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  2538   0081AE                     
  2539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2540   0081AE  5005               	movf	read_prec_or_width@fmt^0,w,c
  2541   0081B0  6ED9               	movwf	fsr2l,c
  2542   0081B2  6ADA               	clrf	fsr2h,c
  2543   0081B4  2ADF               	incf	indf2,f,c
  2544   0081B6                     l3231:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2547   0081B6  5005               	movf	read_prec_or_width@fmt^0,w,c
  2548   0081B8  6ED9               	movwf	fsr2l,c
  2549   0081BA  6ADA               	clrf	fsr2h,c
  2550   0081BC  006F FF7F FFF6     	movff	indf2,tblptrl
  2551   0081C2                     	if	1	;There is more than 1 active tblptr byte
  2552   0081C2  0E20               	movlw	high __smallconst
  2553   0081C4  6EF7               	movwf	tblptrh,c
  2554   0081C6                     	endif
  2555   0081C6                     	if	0	;tblptru may be non-zero
  2556   0081C6                     	endif
  2557   0081C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2558   0081C6  0E00               	movlw	low (__smallconst shr (0+16))
  2559   0081C8  6EF8               	movwf	tblptru,c
  2560   0081CA                     	endif
  2561   0081CA  0008               	tblrd		*
  2562   0081CC  50F5               	movf	tablat,w,c
  2563   0081CE  0FD0               	addlw	208
  2564   0081D0  6E09               	movwf	read_prec_or_width@c^0,c
  2565   0081D2  0E09               	movlw	9
  2566   0081D4  6409               	cpfsgt	read_prec_or_width@c^0,c
  2567   0081D6  EFEF  F040         	goto	u3431
  2568   0081DA  EFF1  F040         	goto	u3430
  2569   0081DE                     u3431:
  2570   0081DE  EFC6  F040         	goto	l3227
  2571   0081E2                     u3430:
  2572   0081E2                     l945:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2575   0081E2  C00A  F005         	movff	read_prec_or_width@n,?_read_prec_or_width
  2576   0081E6  C00B  F006         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2577   0081EA  0012               	return		;funcret
  2578   0081EC                     __end_of_read_prec_or_width:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _efgtoa *****************
  2582 ;; Defined at:
  2583 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  fp              1   55[COMRAM] PTR struct _IO_FILE
  2586 ;;		 -> sprintf@f(11), 
  2587 ;;  f               4   56[COMRAM] PTR struct _IO_FILE
  2588 ;;  c               1   60[COMRAM] unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  u               4   40[BANK0 ] struct flui
  2591 ;;  g               4   36[BANK0 ] struct flui
  2592 ;;  l               4   29[BANK0 ] struct flui
  2593 ;;  h               4   25[BANK0 ] struct flui
  2594 ;;  ou              4   19[BANK0 ] struct flui
  2595 ;;  n               2   34[BANK0 ] int 
  2596 ;;  i               2   23[BANK0 ] int 
  2597 ;;  w               2   17[BANK0 ] int 
  2598 ;;  e               2   15[BANK0 ] int 
  2599 ;;  m               2   13[BANK0 ] int 
  2600 ;;  d               2   11[BANK0 ] int 
  2601 ;;  t               2    4[BANK0 ] int 
  2602 ;;  p               2    2[BANK0 ] int 
  2603 ;;  ne              2    0[BANK0 ] int 
  2604 ;;  sign            1   33[BANK0 ] unsigned char 
  2605 ;;  nmode           1   10[BANK0 ] unsigned char 
  2606 ;;  mode            1    9[BANK0 ] unsigned char 
  2607 ;;  pp              1    8[BANK0 ] unsigned char 
  2608 ;;  esign           1    0        unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2618 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2619 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2621 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;Total ram usage:       52 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 6
  2625 ;; This function calls:
  2626 ;;		___fladd
  2627 ;;		___fldiv
  2628 ;;		___fleq
  2629 ;;		___flge
  2630 ;;		___flmul
  2631 ;;		___flneg
  2632 ;;		___flsub
  2633 ;;		___fltol
  2634 ;;		___fpclassifyf
  2635 ;;		_floorf
  2636 ;;		_labs
  2637 ;;		_memcpy
  2638 ;;		_pad
  2639 ;;		_strcpy
  2640 ;; This function is called by:
  2641 ;;		_vfpfcnvrt
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text6
  2646   0060B2                     __ptext6:
  2647                           	callstack 0
  2648   0060B2                     _efgtoa:
  2649                           	callstack 21
  2650   0060B2                     
  2651                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2652   0060B2  0100               	movlb	0	; () banked
  2653   0060B4  6B81               	clrf	efgtoa@sign& (0+255),b
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2656   0060B6  C039  F084         	movff	efgtoa@f,efgtoa@g
  2657   0060BA  C03A  F085         	movff	efgtoa@f+1,efgtoa@g+1
  2658   0060BE  C03B  F086         	movff	efgtoa@f+2,efgtoa@g+2
  2659   0060C2  C03C  F087         	movff	efgtoa@f+3,efgtoa@g+3
  2660   0060C6                     
  2661                           ; BSR set to: 0
  2662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2663   0060C6  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2664   0060C8  EF6A  F030         	goto	u3100
  2665   0060CC  EF68  F030         	goto	u3101
  2666   0060D0                     u3101:
  2667   0060D0  EF7E  F030         	goto	l3007
  2668   0060D4                     u3100:
  2669   0060D4                     
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2672   0060D4  0E01               	movlw	1
  2673   0060D6  6F81               	movwf	efgtoa@sign& (0+255),b
  2674   0060D8                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2677   0060D8  C084  F005         	movff	efgtoa@g,___flneg@f1
  2678   0060DC  C085  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2679   0060E0  C086  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2680   0060E4  C087  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2681   0060E8  EC0D  F044         	call	___flneg	;wreg free
  2682   0060EC  C005  F084         	movff	?___flneg,efgtoa@g
  2683   0060F0  C006  F085         	movff	?___flneg+1,efgtoa@g+1
  2684   0060F4  C007  F086         	movff	?___flneg+2,efgtoa@g+2
  2685   0060F8  C008  F087         	movff	?___flneg+3,efgtoa@g+3
  2686   0060FC                     l3007:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2689   0060FC  0E00               	movlw	0
  2690   0060FE  0100               	movlb	0	; () banked
  2691   006100  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2692   006102  0E00               	movlw	0
  2693   006104  6F82               	movwf	efgtoa@n& (0+255),b
  2694   006106                     
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2697   006106  C0A6  F071         	movff	_width,efgtoa@w
  2698   00610A  C0A7  F072         	movff	_width+1,efgtoa@w+1
  2699   00610E                     
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2702   00610E  5181               	movf	efgtoa@sign& (0+255),w,b
  2703   006110  B4D8               	btfsc	status,2,c
  2704   006112  EF8D  F030         	goto	u3111
  2705   006116  EF8F  F030         	goto	u3110
  2706   00611A                     u3111:
  2707   00611A  EFA3  F030         	goto	l3021
  2708   00611E                     u3110:
  2709   00611E                     
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2712   00611E  5181               	movf	efgtoa@sign& (0+255),w,b
  2713   006120  A4D8               	btfss	status,2,c
  2714   006122  EF95  F030         	goto	u3121
  2715   006126  EF97  F030         	goto	u3120
  2716   00612A                     u3121:
  2717   00612A  EF9D  F030         	goto	l3017
  2718   00612E                     u3120:
  2719   00612E                     
  2720                           ; BSR set to: 0
  2721   00612E  0E00               	movlw	0
  2722   006130  6F67               	movwf	(_efgtoa$1101+1)& (0+255),b
  2723   006132  0E2B               	movlw	43
  2724   006134  6F66               	movwf	_efgtoa$1101& (0+255),b
  2725   006136  EFA1  F030         	goto	l3019
  2726   00613A                     l3017:
  2727                           
  2728                           ; BSR set to: 0
  2729   00613A  0E00               	movlw	0
  2730   00613C  6F67               	movwf	(_efgtoa$1101+1)& (0+255),b
  2731   00613E  0E2D               	movlw	45
  2732   006140  6F66               	movwf	_efgtoa$1101& (0+255),b
  2733   006142                     l3019:
  2734                           
  2735                           ; BSR set to: 0
  2736   006142  C066  F081         	movff	_efgtoa$1101,efgtoa@sign
  2737   006146                     l3021:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2741   006146  C084  F005         	movff	efgtoa@g,___fpclassifyf@x
  2742   00614A  C085  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2743   00614E  C086  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2744   006152  C087  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2745   006156  EC1B  F040         	call	___fpclassifyf	;wreg free
  2746   00615A  0405               	decf	?___fpclassifyf^0,w,c
  2747   00615C  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2748   00615E  A4D8               	btfss	status,2,c
  2749   006160  EFB4  F030         	goto	u3131
  2750   006164  EFB6  F030         	goto	u3130
  2751   006168                     u3131:
  2752   006168  EFE5  F030         	goto	l3039
  2753   00616C                     u3130:
  2754   00616C                     
  2755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2756   00616C  0100               	movlb	0	; () banked
  2757   00616E  5181               	movf	efgtoa@sign& (0+255),w,b
  2758   006170  B4D8               	btfsc	status,2,c
  2759   006172  EFBD  F030         	goto	u3141
  2760   006176  EFBF  F030         	goto	u3140
  2761   00617A                     u3141:
  2762   00617A  EFC8  F030         	goto	l3031
  2763   00617E                     u3140:
  2764   00617E                     
  2765                           ; BSR set to: 0
  2766                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2767   00617E  C081  F100         	movff	efgtoa@sign,_dbuf
  2768   006182                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  2771   006182  0771               	decf	efgtoa@w& (0+255),f,b
  2772   006184  A0D8               	btfss	status,0,c
  2773   006186  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2774   006188                     
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2777   006188  0E00               	movlw	0
  2778   00618A  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2779   00618C  0E01               	movlw	1
  2780   00618E  6F82               	movwf	efgtoa@n& (0+255),b
  2781   006190                     l3031:
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2785   006190  0E00               	movlw	low _dbuf
  2786   006192  2582               	addwf	efgtoa@n& (0+255),w,b
  2787   006194  6E05               	movwf	strcpy@dest^0,c
  2788   006196  0E01               	movlw	high _dbuf
  2789   006198  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2790   00619A  6E06               	movwf	(strcpy@dest+1)^0,c
  2791   00619C  0E1C               	movlw	low STR_4
  2792   00619E  6E07               	movwf	strcpy@src^0,c
  2793   0061A0  EC6B  F043         	call	_strcpy	;wreg free
  2794   0061A4                     l3033:
  2795                           
  2796                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2797   0061A4  0100               	movlb	0	; () banked
  2798   0061A6  0EFD               	movlw	253
  2799   0061A8  2771               	addwf	efgtoa@w& (0+255),f,b
  2800   0061AA  0EFF               	movlw	255
  2801   0061AC  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2802   0061AE                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2805   0061AE  C038  F013         	movff	efgtoa@fp,pad@fp
  2806   0061B2  0E00               	movlw	low _dbuf
  2807   0061B4  6E14               	movwf	pad@buf^0,c
  2808   0061B6  0E01               	movlw	high _dbuf
  2809   0061B8  6E15               	movwf	(pad@buf+1)^0,c
  2810   0061BA  C071  F016         	movff	efgtoa@w,pad@p
  2811   0061BE  C072  F017         	movff	efgtoa@w+1,pad@p+1
  2812   0061C2  EC16  F042         	call	_pad	;wreg free
  2813   0061C6  EF4B  F035         	goto	l900
  2814   0061CA                     l3039:
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2817   0061CA  C084  F005         	movff	efgtoa@g,___fpclassifyf@x
  2818   0061CE  C085  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2819   0061D2  C086  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2820   0061D6  C087  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2821   0061DA  EC1B  F040         	call	___fpclassifyf	;wreg free
  2822   0061DE  5005               	movf	?___fpclassifyf^0,w,c
  2823   0061E0  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2824   0061E2  A4D8               	btfss	status,2,c
  2825   0061E4  EFF6  F030         	goto	u3151
  2826   0061E8  EFF8  F030         	goto	u3150
  2827   0061EC                     u3151:
  2828   0061EC  EF16  F031         	goto	l3057
  2829   0061F0                     u3150:
  2830   0061F0                     
  2831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2832   0061F0  0100               	movlb	0	; () banked
  2833   0061F2  5181               	movf	efgtoa@sign& (0+255),w,b
  2834   0061F4  B4D8               	btfsc	status,2,c
  2835   0061F6  EFFF  F030         	goto	u3161
  2836   0061FA  EF01  F031         	goto	u3160
  2837   0061FE                     u3161:
  2838   0061FE  EF0A  F031         	goto	l3049
  2839   006202                     u3160:
  2840   006202                     
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2843   006202  C081  F100         	movff	efgtoa@sign,_dbuf
  2844   006206                     
  2845                           ; BSR set to: 0
  2846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  2847   006206  0771               	decf	efgtoa@w& (0+255),f,b
  2848   006208  A0D8               	btfss	status,0,c
  2849   00620A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2850   00620C                     
  2851                           ; BSR set to: 0
  2852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2853   00620C  0E00               	movlw	0
  2854   00620E  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2855   006210  0E01               	movlw	1
  2856   006212  6F82               	movwf	efgtoa@n& (0+255),b
  2857   006214                     l3049:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2861   006214  0E00               	movlw	low _dbuf
  2862   006216  2582               	addwf	efgtoa@n& (0+255),w,b
  2863   006218  6E05               	movwf	strcpy@dest^0,c
  2864   00621A  0E01               	movlw	high _dbuf
  2865   00621C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2866   00621E  6E06               	movwf	(strcpy@dest+1)^0,c
  2867   006220  0E20               	movlw	low STR_7
  2868   006222  6E07               	movwf	strcpy@src^0,c
  2869   006224  EC6B  F043         	call	_strcpy	;wreg free
  2870   006228  EFD2  F030         	goto	l3033
  2871   00622C                     l3057:
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2874   00622C  0E00               	movlw	0
  2875   00622E  0100               	movlb	0	; () banked
  2876   006230  6F88               	movwf	efgtoa@u& (0+255),b
  2877   006232  0E00               	movlw	0
  2878   006234  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2879   006236  0E80               	movlw	128
  2880   006238  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2881   00623A  0E3F               	movlw	63
  2882   00623C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2883                           
  2884                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2885   00623E  0E00               	movlw	0
  2886   006240  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2887   006242  0E00               	movlw	0
  2888   006244  6F6F               	movwf	efgtoa@e& (0+255),b
  2889   006246                     
  2890                           ; BSR set to: 0
  2891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2892   006246  C084  F005         	movff	efgtoa@g,___fleq@ff1
  2893   00624A  C085  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2894   00624E  C086  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2895   006252  C087  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2896   006256  0E00               	movlw	0
  2897   006258  6E09               	movwf	___fleq@ff2^0,c
  2898   00625A  0E00               	movlw	0
  2899   00625C  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2900   00625E  0E00               	movlw	0
  2901   006260  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2902   006262  0E00               	movlw	0
  2903   006264  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2904   006266  EC4C  F041         	call	___fleq	;wreg free
  2905   00626A  B0D8               	btfsc	status,0,c
  2906   00626C  EF3A  F031         	goto	u3171
  2907   006270  EF3C  F031         	goto	u3170
  2908   006274                     u3171:
  2909   006274  EF1B  F032         	goto	l903
  2910   006278                     u3170:
  2911   006278  EF49  F031         	goto	l3065
  2912   00627C                     l905:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2915   00627C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2916   006280  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2917   006284  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2918   006288  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2919   00628C                     
  2920                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2921   00628C  0100               	movlb	0	; () banked
  2922   00628E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2923   006290  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2924   006292                     l3065:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2927   006292  C088  F013         	movff	efgtoa@u,___flmul@b
  2928   006296  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  2929   00629A  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  2930   00629E  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  2931   0062A2  0E00               	movlw	0
  2932   0062A4  6E17               	movwf	___flmul@a^0,c
  2933   0062A6  0E00               	movlw	0
  2934   0062A8  6E18               	movwf	(___flmul@a+1)^0,c
  2935   0062AA  0E20               	movlw	32
  2936   0062AC  6E19               	movwf	(___flmul@a+2)^0,c
  2937   0062AE  0E41               	movlw	65
  2938   0062B0  6E1A               	movwf	(___flmul@a+3)^0,c
  2939   0062B2  ECA7  F037         	call	___flmul	;wreg free
  2940   0062B6  C013  F073         	movff	?___flmul,efgtoa@ou
  2941   0062BA  C014  F074         	movff	?___flmul+1,efgtoa@ou+1
  2942   0062BE  C015  F075         	movff	?___flmul+2,efgtoa@ou+2
  2943   0062C2  C016  F076         	movff	?___flmul+3,efgtoa@ou+3
  2944   0062C6  0100               	movlb	0	; () banked
  2945   0062C8  5173               	movf	efgtoa@ou& (0+255),w,b
  2946   0062CA  5D84               	subwf	efgtoa@g& (0+255),w,b
  2947   0062CC  6E05               	movwf	labs@a^0,c
  2948   0062CE  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2949   0062D0  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2950   0062D2  6E06               	movwf	(labs@a+1)^0,c
  2951   0062D4  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2952   0062D6  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2953   0062D8  6E07               	movwf	(labs@a+2)^0,c
  2954   0062DA  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2955   0062DC  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2956   0062DE  6E08               	movwf	(labs@a+3)^0,c
  2957   0062E0  ECA7  F042         	call	_labs	;wreg free
  2958   0062E4  BE08               	btfsc	(?_labs+3)^0,7,c
  2959   0062E6  EF80  F031         	goto	u3181
  2960   0062EA  5008               	movf	(?_labs+3)^0,w,c
  2961   0062EC  1007               	iorwf	(?_labs+2)^0,w,c
  2962   0062EE  1006               	iorwf	(?_labs+1)^0,w,c
  2963   0062F0  E109               	bnz	u3180
  2964   0062F2  0E02               	movlw	2
  2965   0062F4  5C05               	subwf	?_labs^0,w,c
  2966   0062F6  A0D8               	btfss	status,0,c
  2967   0062F8  EF80  F031         	goto	u3181
  2968   0062FC  EF82  F031         	goto	u3180
  2969   006300                     u3181:
  2970   006300  EF3E  F031         	goto	l905
  2971   006304                     u3180:
  2972   006304  C073  F02C         	movff	efgtoa@ou,___flge@ff1
  2973   006308  C074  F02D         	movff	efgtoa@ou+1,___flge@ff1+1
  2974   00630C  C075  F02E         	movff	efgtoa@ou+2,___flge@ff1+2
  2975   006310  C076  F02F         	movff	efgtoa@ou+3,___flge@ff1+3
  2976   006314  C084  F030         	movff	efgtoa@g,___flge@ff2
  2977   006318  C085  F031         	movff	efgtoa@g+1,___flge@ff2+1
  2978   00631C  C086  F032         	movff	efgtoa@g+2,___flge@ff2+2
  2979   006320  C087  F033         	movff	efgtoa@g+3,___flge@ff2+3
  2980   006324  EC99  F03F         	call	___flge	;wreg free
  2981   006328  A0D8               	btfss	status,0,c
  2982   00632A  EF99  F031         	goto	u3191
  2983   00632E  EF9B  F031         	goto	u3190
  2984   006332                     u3191:
  2985   006332  EF3E  F031         	goto	l905
  2986   006336                     u3190:
  2987   006336                     
  2988                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2989   006336  0100               	movlb	0	; () banked
  2990   006338  5188               	movf	efgtoa@u& (0+255),w,b
  2991   00633A  5D84               	subwf	efgtoa@g& (0+255),w,b
  2992   00633C  6E05               	movwf	labs@a^0,c
  2993   00633E  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2994   006340  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2995   006342  6E06               	movwf	(labs@a+1)^0,c
  2996   006344  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2997   006346  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2998   006348  6E07               	movwf	(labs@a+2)^0,c
  2999   00634A  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3000   00634C  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3001   00634E  6E08               	movwf	(labs@a+3)^0,c
  3002   006350  ECA7  F042         	call	_labs	;wreg free
  3003   006354  BE08               	btfsc	(?_labs+3)^0,7,c
  3004   006356  EFBA  F031         	goto	u3200
  3005   00635A  5008               	movf	(?_labs+3)^0,w,c
  3006   00635C  1007               	iorwf	(?_labs+2)^0,w,c
  3007   00635E  1006               	iorwf	(?_labs+1)^0,w,c
  3008   006360  E107               	bnz	u3201
  3009   006362  0E02               	movlw	2
  3010   006364  5C05               	subwf	?_labs^0,w,c
  3011   006366  B0D8               	btfsc	status,0,c
  3012   006368  EFB8  F031         	goto	u3201
  3013   00636C  EFBA  F031         	goto	u3200
  3014   006370                     u3201:
  3015   006370  EF02  F032         	goto	l3083
  3016   006374                     u3200:
  3017   006374                     l3073:
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3020   006374  C088  F084         	movff	efgtoa@u,efgtoa@g
  3021   006378  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  3022   00637C  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  3023   006380  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3026   006384  EF1B  F032         	goto	l903
  3027   006388                     l3075:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3030   006388  C088  F005         	movff	efgtoa@u,___fldiv@b
  3031   00638C  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3032   006390  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3033   006394  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3034   006398  0E00               	movlw	0
  3035   00639A  6E09               	movwf	___fldiv@a^0,c
  3036   00639C  0E00               	movlw	0
  3037   00639E  6E0A               	movwf	(___fldiv@a+1)^0,c
  3038   0063A0  0E20               	movlw	32
  3039   0063A2  6E0B               	movwf	(___fldiv@a+2)^0,c
  3040   0063A4  0E41               	movlw	65
  3041   0063A6  6E0C               	movwf	(___fldiv@a+3)^0,c
  3042   0063A8  ECCC  F039         	call	___fldiv	;wreg free
  3043   0063AC  C005  F088         	movff	?___fldiv,efgtoa@u
  3044   0063B0  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  3045   0063B4  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3046   0063B8  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3047   0063BC                     
  3048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3049   0063BC  0100               	movlb	0	; () banked
  3050   0063BE  076F               	decf	efgtoa@e& (0+255),f,b
  3051   0063C0  A0D8               	btfss	status,0,c
  3052   0063C2  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3053   0063C4                     
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3056   0063C4  5188               	movf	efgtoa@u& (0+255),w,b
  3057   0063C6  5D84               	subwf	efgtoa@g& (0+255),w,b
  3058   0063C8  6E05               	movwf	labs@a^0,c
  3059   0063CA  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3060   0063CC  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3061   0063CE  6E06               	movwf	(labs@a+1)^0,c
  3062   0063D0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3063   0063D2  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3064   0063D4  6E07               	movwf	(labs@a+2)^0,c
  3065   0063D6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3066   0063D8  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3067   0063DA  6E08               	movwf	(labs@a+3)^0,c
  3068   0063DC  ECA7  F042         	call	_labs	;wreg free
  3069   0063E0  BE08               	btfsc	(?_labs+3)^0,7,c
  3070   0063E2  EF00  F032         	goto	u3210
  3071   0063E6  5008               	movf	(?_labs+3)^0,w,c
  3072   0063E8  1007               	iorwf	(?_labs+2)^0,w,c
  3073   0063EA  1006               	iorwf	(?_labs+1)^0,w,c
  3074   0063EC  E107               	bnz	u3211
  3075   0063EE  0E02               	movlw	2
  3076   0063F0  5C05               	subwf	?_labs^0,w,c
  3077   0063F2  B0D8               	btfsc	status,0,c
  3078   0063F4  EFFE  F031         	goto	u3211
  3079   0063F8  EF00  F032         	goto	u3210
  3080   0063FC                     u3211:
  3081   0063FC  EF02  F032         	goto	l3083
  3082   006400                     u3210:
  3083   006400  EFBA  F031         	goto	l3073
  3084   006404                     l3083:
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3087   006404  C084  F02C         	movff	efgtoa@g,___flge@ff1
  3088   006408  C085  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3089   00640C  C086  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3090   006410  C087  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3091   006414  C088  F030         	movff	efgtoa@u,___flge@ff2
  3092   006418  C089  F031         	movff	efgtoa@u+1,___flge@ff2+1
  3093   00641C  C08A  F032         	movff	efgtoa@u+2,___flge@ff2+2
  3094   006420  C08B  F033         	movff	efgtoa@u+3,___flge@ff2+3
  3095   006424  EC99  F03F         	call	___flge	;wreg free
  3096   006428  A0D8               	btfss	status,0,c
  3097   00642A  EF19  F032         	goto	u3221
  3098   00642E  EF1B  F032         	goto	u3220
  3099   006432                     u3221:
  3100   006432  EFC4  F031         	goto	l3075
  3101   006436                     u3220:
  3102   006436                     l903:
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3105   006436  C03D  F069         	movff	efgtoa@c,efgtoa@mode
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3108   00643A  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3109   00643E                     
  3110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3111   00643E  0100               	movlb	0	; () banked
  3112   006440  BFA9               	btfsc	(_prec+1)& (0+255),7,b
  3113   006442  EF25  F032         	goto	u3231
  3114   006446  EF27  F032         	goto	u3230
  3115   00644A                     u3231:
  3116   00644A  EF2D  F032         	goto	l3089
  3117   00644E                     u3230:
  3118   00644E                     
  3119                           ; BSR set to: 0
  3120   00644E  C0A8  F062         	movff	_prec,efgtoa@p
  3121   006452  C0A9  F063         	movff	_prec+1,efgtoa@p+1
  3122   006456  EF31  F032         	goto	l3091
  3123   00645A                     l3089:
  3124                           
  3125                           ; BSR set to: 0
  3126   00645A  0E00               	movlw	0
  3127   00645C  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3128   00645E  0E06               	movlw	6
  3129   006460  6F62               	movwf	efgtoa@p& (0+255),b
  3130   006462                     l3091:
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3134   006462  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3135   006466  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3136   00646A                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3139   00646A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3140   00646C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3141   00646E                     
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3144   00646E  0E66               	movlw	102
  3145   006470  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3146   006472  A4D8               	btfss	status,2,c
  3147   006474  EF3E  F032         	goto	u3241
  3148   006478  EF40  F032         	goto	u3240
  3149   00647C                     u3241:
  3150   00647C  EF60  F032         	goto	l3105
  3151   006480                     u3240:
  3152   006480                     
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3155   006480  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3156   006482  EF47  F032         	goto	u3250
  3157   006486  EF45  F032         	goto	u3251
  3158   00648A                     u3251:
  3159   00648A  EF53  F032         	goto	l3101
  3160   00648E                     u3250:
  3161   00648E                     
  3162                           ; BSR set to: 0
  3163                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3164   00648E  0E00               	movlw	0
  3165   006490  6F88               	movwf	efgtoa@u& (0+255),b
  3166   006492  0E00               	movlw	0
  3167   006494  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3168   006496  0E80               	movlw	128
  3169   006498  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3170   00649A  0E3F               	movlw	63
  3171   00649C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3174   00649E  0E00               	movlw	0
  3175   0064A0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3176   0064A2  0E00               	movlw	0
  3177   0064A4  6F6F               	movwf	efgtoa@e& (0+255),b
  3178   0064A6                     l3101:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3182   0064A6  0E67               	movlw	103
  3183   0064A8  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3184   0064AA  B4D8               	btfsc	status,2,c
  3185   0064AC  EF5A  F032         	goto	u3261
  3186   0064B0  EF5C  F032         	goto	u3260
  3187   0064B4                     u3261:
  3188   0064B4  EF60  F032         	goto	l3105
  3189   0064B8                     u3260:
  3190   0064B8                     
  3191                           ; BSR set to: 0
  3192                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3193   0064B8  516F               	movf	efgtoa@e& (0+255),w,b
  3194   0064BA  276D               	addwf	efgtoa@m& (0+255),f,b
  3195   0064BC  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3196   0064BE  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3197   0064C0                     l3105:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3201   0064C0  0E00               	movlw	0
  3202   0064C2  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3203   0064C4  0E00               	movlw	0
  3204   0064C6  6F77               	movwf	efgtoa@i& (0+255),b
  3205   0064C8                     
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3208   0064C8  C084  F079         	movff	efgtoa@g,efgtoa@h
  3209   0064CC  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3210   0064D0  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3211   0064D4  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3212   0064D8                     
  3213                           ; BSR set to: 0
  3214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3215   0064D8  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3216   0064DC  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3217   0064E0  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3218   0064E4  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3221   0064E8  EFF1  F032         	goto	l3119
  3222   0064EC                     l3111:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3226   0064EC  C079  F005         	movff	efgtoa@h,___fldiv@b
  3227   0064F0  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3228   0064F4  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3229   0064F8  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3230   0064FC  C088  F009         	movff	efgtoa@u,___fldiv@a
  3231   006500  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3232   006504  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3233   006508  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3234   00650C  ECCC  F039         	call	___fldiv	;wreg free
  3235   006510  C005  F01E         	movff	?___fldiv,floorf@x
  3236   006514  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3237   006518  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3238   00651C  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3239   006520  EC9E  F03C         	call	_floorf	;wreg free
  3240   006524  C01E  F07D         	movff	?_floorf,efgtoa@l
  3241   006528  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  3242   00652C  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  3243   006530  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3246   006534  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3247   006538  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3248   00653C  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3249   006540  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3250   006544  EC16  F03F         	call	___fltol	;wreg free
  3251   006548  C005  F06B         	movff	?___fltol,efgtoa@d
  3252   00654C  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  3253   006550                     
  3254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3255   006550  C079  F02C         	movff	efgtoa@h,___flsub@b
  3256   006554  C07A  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3257   006558  C07B  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3258   00655C  C07C  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3259   006560  C07D  F017         	movff	efgtoa@l,___flmul@a
  3260   006564  C07E  F018         	movff	efgtoa@l+1,___flmul@a+1
  3261   006568  C07F  F019         	movff	efgtoa@l+2,___flmul@a+2
  3262   00656C  C080  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3263   006570  C088  F013         	movff	efgtoa@u,___flmul@b
  3264   006574  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3265   006578  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3266   00657C  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3267   006580  ECA7  F037         	call	___flmul	;wreg free
  3268   006584  C013  F030         	movff	?___flmul,___flsub@a
  3269   006588  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3270   00658C  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3271   006590  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3272   006594  EC8E  F043         	call	___flsub	;wreg free
  3273   006598  C02C  F079         	movff	?___flsub,efgtoa@h
  3274   00659C  C02D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3275   0065A0  C02E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3276   0065A4  C02F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3277   0065A8                     
  3278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3279   0065A8  C088  F005         	movff	efgtoa@u,___fldiv@b
  3280   0065AC  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3281   0065B0  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3282   0065B4  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3283   0065B8  0E00               	movlw	0
  3284   0065BA  6E09               	movwf	___fldiv@a^0,c
  3285   0065BC  0E00               	movlw	0
  3286   0065BE  6E0A               	movwf	(___fldiv@a+1)^0,c
  3287   0065C0  0E20               	movlw	32
  3288   0065C2  6E0B               	movwf	(___fldiv@a+2)^0,c
  3289   0065C4  0E41               	movlw	65
  3290   0065C6  6E0C               	movwf	(___fldiv@a+3)^0,c
  3291   0065C8  ECCC  F039         	call	___fldiv	;wreg free
  3292   0065CC  C005  F088         	movff	?___fldiv,efgtoa@u
  3293   0065D0  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  3294   0065D4  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3295   0065D8  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3296   0065DC                     
  3297                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3298   0065DC  0100               	movlb	0	; () banked
  3299   0065DE  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3300   0065E0  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3301   0065E2                     l3119:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3305   0065E2  516D               	movf	efgtoa@m& (0+255),w,b
  3306   0065E4  5D77               	subwf	efgtoa@i& (0+255),w,b
  3307   0065E6  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3308   0065E8  0A80               	xorlw	128
  3309   0065EA  6E3E               	movwf	??_efgtoa^0,c
  3310   0065EC  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3311   0065EE  0A80               	xorlw	128
  3312   0065F0  583E               	subwfb	??_efgtoa^0,w,c
  3313   0065F2  A0D8               	btfss	status,0,c
  3314   0065F4  EFFE  F032         	goto	u3271
  3315   0065F8  EF00  F033         	goto	u3270
  3316   0065FC                     u3271:
  3317   0065FC  EF76  F032         	goto	l3111
  3318   006600                     u3270:
  3319   006600                     
  3320                           ; BSR set to: 0
  3321                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3322   006600  C088  F013         	movff	efgtoa@u,___flmul@b
  3323   006604  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3324   006608  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3325   00660C  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3326   006610  0E00               	movlw	0
  3327   006612  6E17               	movwf	___flmul@a^0,c
  3328   006614  0E00               	movlw	0
  3329   006616  6E18               	movwf	(___flmul@a+1)^0,c
  3330   006618  0EA0               	movlw	160
  3331   00661A  6E19               	movwf	(___flmul@a+2)^0,c
  3332   00661C  0E40               	movlw	64
  3333   00661E  6E1A               	movwf	(___flmul@a+3)^0,c
  3334   006620  ECA7  F037         	call	___flmul	;wreg free
  3335   006624  C013  F07D         	movff	?___flmul,efgtoa@l
  3336   006628  C014  F07E         	movff	?___flmul+1,efgtoa@l+1
  3337   00662C  C015  F07F         	movff	?___flmul+2,efgtoa@l+2
  3338   006630  C016  F080         	movff	?___flmul+3,efgtoa@l+3
  3339   006634                     
  3340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3341   006634  C079  F02C         	movff	efgtoa@h,___flge@ff1
  3342   006638  C07A  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3343   00663C  C07B  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3344   006640  C07C  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3345   006644  C07D  F030         	movff	efgtoa@l,___flge@ff2
  3346   006648  C07E  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3347   00664C  C07F  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3348   006650  C080  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3349   006654  EC99  F03F         	call	___flge	;wreg free
  3350   006658  B0D8               	btfsc	status,0,c
  3351   00665A  EF31  F033         	goto	u3281
  3352   00665E  EF33  F033         	goto	u3280
  3353   006662                     u3281:
  3354   006662  EF3E  F033         	goto	l3127
  3355   006666                     u3280:
  3356   006666                     
  3357                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3358   006666  0E00               	movlw	0
  3359   006668  0100               	movlb	0	; () banked
  3360   00666A  6F7D               	movwf	efgtoa@l& (0+255),b
  3361   00666C  0E00               	movlw	0
  3362   00666E  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3363   006670  0E00               	movlw	0
  3364   006672  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3365   006674  0E00               	movlw	0
  3366   006676  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3369   006678  EF67  F033         	goto	l3133
  3370   00667C                     l3127:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3373   00667C  C079  F005         	movff	efgtoa@h,___fleq@ff1
  3374   006680  C07A  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3375   006684  C07B  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3376   006688  C07C  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3377   00668C  C07D  F009         	movff	efgtoa@l,___fleq@ff2
  3378   006690  C07E  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3379   006694  C07F  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3380   006698  C080  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3381   00669C  EC4C  F041         	call	___fleq	;wreg free
  3382   0066A0  A0D8               	btfss	status,0,c
  3383   0066A2  EF55  F033         	goto	u3291
  3384   0066A6  EF57  F033         	goto	u3290
  3385   0066AA                     u3291:
  3386   0066AA  EF67  F033         	goto	l3133
  3387   0066AE                     u3290:
  3388   0066AE  0100               	movlb	0	; () banked
  3389   0066B0  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3390   0066B2  EF5D  F033         	goto	u3301
  3391   0066B6  EF5F  F033         	goto	u3300
  3392   0066BA                     u3301:
  3393   0066BA  EF67  F033         	goto	l3133
  3394   0066BE                     u3300:
  3395   0066BE                     
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3398   0066BE  0E00               	movlw	0
  3399   0066C0  6F7D               	movwf	efgtoa@l& (0+255),b
  3400   0066C2  0E00               	movlw	0
  3401   0066C4  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3402   0066C6  0E00               	movlw	0
  3403   0066C8  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3404   0066CA  0E00               	movlw	0
  3405   0066CC  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3406   0066CE                     l3133:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3409   0066CE  C084  F005         	movff	efgtoa@g,___fladd@b
  3410   0066D2  C085  F006         	movff	efgtoa@g+1,___fladd@b+1
  3411   0066D6  C086  F007         	movff	efgtoa@g+2,___fladd@b+2
  3412   0066DA  C087  F008         	movff	efgtoa@g+3,___fladd@b+3
  3413   0066DE  C07D  F009         	movff	efgtoa@l,___fladd@a
  3414   0066E2  C07E  F00A         	movff	efgtoa@l+1,___fladd@a+1
  3415   0066E6  C07F  F00B         	movff	efgtoa@l+2,___fladd@a+2
  3416   0066EA  C080  F00C         	movff	efgtoa@l+3,___fladd@a+3
  3417   0066EE  EC4C  F035         	call	___fladd	;wreg free
  3418   0066F2  C005  F079         	movff	?___fladd,efgtoa@h
  3419   0066F6  C006  F07A         	movff	?___fladd+1,efgtoa@h+1
  3420   0066FA  C007  F07B         	movff	?___fladd+2,efgtoa@h+2
  3421   0066FE  C008  F07C         	movff	?___fladd+3,efgtoa@h+3
  3422   006702                     
  3423                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3424   006702  C079  F02C         	movff	efgtoa@h,___flge@ff1
  3425   006706  C07A  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3426   00670A  C07B  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3427   00670E  C07C  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3428   006712  0E00               	movlw	0
  3429   006714  6E17               	movwf	___flmul@a^0,c
  3430   006716  0E00               	movlw	0
  3431   006718  6E18               	movwf	(___flmul@a+1)^0,c
  3432   00671A  0E20               	movlw	32
  3433   00671C  6E19               	movwf	(___flmul@a+2)^0,c
  3434   00671E  0E41               	movlw	65
  3435   006720  6E1A               	movwf	(___flmul@a+3)^0,c
  3436   006722  C073  F013         	movff	efgtoa@ou,___flmul@b
  3437   006726  C074  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3438   00672A  C075  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3439   00672E  C076  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3440   006732  ECA7  F037         	call	___flmul	;wreg free
  3441   006736  C013  F030         	movff	?___flmul,___flge@ff2
  3442   00673A  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3443   00673E  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3444   006742  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3445   006746  EC99  F03F         	call	___flge	;wreg free
  3446   00674A  A0D8               	btfss	status,0,c
  3447   00674C  EFAA  F033         	goto	u3311
  3448   006750  EFAC  F033         	goto	u3310
  3449   006754                     u3311:
  3450   006754  EFD5  F033         	goto	l3145
  3451   006758                     u3310:
  3452   006758                     
  3453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3454   006758  0100               	movlb	0	; () banked
  3455   00675A  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3456   00675C  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3457   00675E                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3460   00675E  C073  F013         	movff	efgtoa@ou,___flmul@b
  3461   006762  C074  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3462   006766  C075  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3463   00676A  C076  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3464   00676E  0E00               	movlw	0
  3465   006770  6E17               	movwf	___flmul@a^0,c
  3466   006772  0E00               	movlw	0
  3467   006774  6E18               	movwf	(___flmul@a+1)^0,c
  3468   006776  0E20               	movlw	32
  3469   006778  6E19               	movwf	(___flmul@a+2)^0,c
  3470   00677A  0E41               	movlw	65
  3471   00677C  6E1A               	movwf	(___flmul@a+3)^0,c
  3472   00677E  ECA7  F037         	call	___flmul	;wreg free
  3473   006782  C013  F073         	movff	?___flmul,efgtoa@ou
  3474   006786  C014  F074         	movff	?___flmul+1,efgtoa@ou+1
  3475   00678A  C015  F075         	movff	?___flmul+2,efgtoa@ou+2
  3476   00678E  C016  F076         	movff	?___flmul+3,efgtoa@ou+3
  3477   006792                     
  3478                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3479   006792  0E66               	movlw	102
  3480   006794  0100               	movlb	0	; () banked
  3481   006796  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3482   006798  A4D8               	btfss	status,2,c
  3483   00679A  EFD1  F033         	goto	u3321
  3484   00679E  EFD3  F033         	goto	u3320
  3485   0067A2                     u3321:
  3486   0067A2  EFD5  F033         	goto	l3145
  3487   0067A6                     u3320:
  3488   0067A6                     
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3491   0067A6  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3492   0067A8  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3493   0067AA                     l3145:
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3496   0067AA  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3497   0067AE  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3498   0067B2  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3499   0067B6  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3500   0067BA                     
  3501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3502   0067BA  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3503   0067BE  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3504   0067C2                     
  3505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3506   0067C2  0100               	movlb	0	; () banked
  3507   0067C4  6B68               	clrf	efgtoa@pp& (0+255),b
  3508   0067C6                     
  3509                           ; BSR set to: 0
  3510                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3511   0067C6  0E00               	movlw	0
  3512   0067C8  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3513   0067CA  0E00               	movlw	0
  3514   0067CC  6F64               	movwf	efgtoa@t& (0+255),b
  3515   0067CE                     
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3518   0067CE  0E00               	movlw	0
  3519   0067D0  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3520   0067D2  0E00               	movlw	0
  3521   0067D4  6F77               	movwf	efgtoa@i& (0+255),b
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3524   0067D6  EFD2  F034         	goto	l3195
  3525   0067DA                     l3155:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3529   0067DA  C079  F005         	movff	efgtoa@h,___fldiv@b
  3530   0067DE  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3531   0067E2  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3532   0067E6  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3533   0067EA  C088  F009         	movff	efgtoa@u,___fldiv@a
  3534   0067EE  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3535   0067F2  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3536   0067F6  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3537   0067FA  ECCC  F039         	call	___fldiv	;wreg free
  3538   0067FE  C005  F01E         	movff	?___fldiv,floorf@x
  3539   006802  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3540   006806  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3541   00680A  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3542   00680E  EC9E  F03C         	call	_floorf	;wreg free
  3543   006812  C01E  F07D         	movff	?_floorf,efgtoa@l
  3544   006816  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  3545   00681A  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  3546   00681E  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3549   006822  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3550   006826  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3551   00682A  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3552   00682E  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3553   006832  EC16  F03F         	call	___fltol	;wreg free
  3554   006836  BE06               	btfsc	(?___fltol+1)^0,7,c
  3555   006838  EF29  F034         	goto	u3330
  3556   00683C  5006               	movf	(?___fltol+1)^0,w,c
  3557   00683E  E107               	bnz	u3331
  3558   006840  0E0A               	movlw	10
  3559   006842  5C05               	subwf	?___fltol^0,w,c
  3560   006844  B0D8               	btfsc	status,0,c
  3561   006846  EF27  F034         	goto	u3331
  3562   00684A  EF29  F034         	goto	u3330
  3563   00684E                     u3331:
  3564   00684E  EF39  F034         	goto	l3159
  3565   006852                     u3330:
  3566   006852  C07D  F005         	movff	efgtoa@l,___fltol@f1
  3567   006856  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3568   00685A  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3569   00685E  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3570   006862  EC16  F03F         	call	___fltol	;wreg free
  3571   006866  C005  F06B         	movff	?___fltol,efgtoa@d
  3572   00686A  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  3573   00686E  EF3E  F034         	goto	l933
  3574   006872                     l3159:
  3575   006872  0E00               	movlw	0
  3576   006874  0100               	movlb	0	; () banked
  3577   006876  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3578   006878  0E09               	movlw	9
  3579   00687A  6F6B               	movwf	efgtoa@d& (0+255),b
  3580   00687C                     l933:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3583   00687C  0100               	movlb	0	; () banked
  3584   00687E  5168               	movf	efgtoa@pp& (0+255),w,b
  3585   006880  A4D8               	btfss	status,2,c
  3586   006882  EF45  F034         	goto	u3341
  3587   006886  EF47  F034         	goto	u3340
  3588   00688A                     u3341:
  3589   00688A  EF6F  F034         	goto	l3179
  3590   00688E                     u3340:
  3591   00688E                     
  3592                           ; BSR set to: 0
  3593   00688E  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3594   006890  EF4E  F034         	goto	u3350
  3595   006894  EF4C  F034         	goto	u3351
  3596   006898                     u3351:
  3597   006898  EF6F  F034         	goto	l3179
  3598   00689C                     u3350:
  3599   00689C                     
  3600                           ; BSR set to: 0
  3601                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3602   00689C  0E00               	movlw	low _dbuf
  3603   00689E  2582               	addwf	efgtoa@n& (0+255),w,b
  3604   0068A0  6ED9               	movwf	fsr2l,c
  3605   0068A2  0E01               	movlw	high _dbuf
  3606   0068A4  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3607   0068A6  6EDA               	movwf	fsr2h,c
  3608   0068A8  0E2E               	movlw	46
  3609   0068AA  6EDF               	movwf	indf2,c
  3610   0068AC                     
  3611                           ; BSR set to: 0
  3612   0068AC  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3613   0068AE  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3614   0068B0                     
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3617   0068B0  0771               	decf	efgtoa@w& (0+255),f,b
  3618   0068B2  A0D8               	btfss	status,0,c
  3619   0068B4  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3620   0068B6                     
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3623   0068B6  0E01               	movlw	1
  3624   0068B8  6F68               	movwf	efgtoa@pp& (0+255),b
  3625   0068BA  EF6F  F034         	goto	l3179
  3626   0068BE                     l3171:
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3630   0068BE  0E00               	movlw	low _dbuf
  3631   0068C0  2582               	addwf	efgtoa@n& (0+255),w,b
  3632   0068C2  6ED9               	movwf	fsr2l,c
  3633   0068C4  0E01               	movlw	high _dbuf
  3634   0068C6  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3635   0068C8  6EDA               	movwf	fsr2h,c
  3636   0068CA  0E30               	movlw	48
  3637   0068CC  6EDF               	movwf	indf2,c
  3638   0068CE                     
  3639                           ; BSR set to: 0
  3640   0068CE  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3641   0068D0  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3642   0068D2                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3645   0068D2  0771               	decf	efgtoa@w& (0+255),f,b
  3646   0068D4  A0D8               	btfss	status,0,c
  3647   0068D6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3648   0068D8                     
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3651   0068D8  0764               	decf	efgtoa@t& (0+255),f,b
  3652   0068DA  A0D8               	btfss	status,0,c
  3653   0068DC  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3654   0068DE                     l3179:
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3658   0068DE  5164               	movf	efgtoa@t& (0+255),w,b
  3659   0068E0  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3660   0068E2  A4D8               	btfss	status,2,c
  3661   0068E4  EF76  F034         	goto	u3361
  3662   0068E8  EF78  F034         	goto	u3360
  3663   0068EC                     u3361:
  3664   0068EC  EF5F  F034         	goto	l3171
  3665   0068F0                     u3360:
  3666   0068F0                     
  3667                           ; BSR set to: 0
  3668                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3669   0068F0  0E00               	movlw	low _dbuf
  3670   0068F2  2582               	addwf	efgtoa@n& (0+255),w,b
  3671   0068F4  6ED9               	movwf	fsr2l,c
  3672   0068F6  0E01               	movlw	high _dbuf
  3673   0068F8  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3674   0068FA  6EDA               	movwf	fsr2h,c
  3675   0068FC  516B               	movf	efgtoa@d& (0+255),w,b
  3676   0068FE  0F30               	addlw	48
  3677   006900  6EDF               	movwf	indf2,c
  3678   006902                     
  3679                           ; BSR set to: 0
  3680   006902  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3681   006904  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3682   006906                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3685   006906  0771               	decf	efgtoa@w& (0+255),f,b
  3686   006908  A0D8               	btfss	status,0,c
  3687   00690A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3688   00690C                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3691   00690C  C079  F02C         	movff	efgtoa@h,___flsub@b
  3692   006910  C07A  F02D         	movff	efgtoa@h+1,___flsub@b+1
  3693   006914  C07B  F02E         	movff	efgtoa@h+2,___flsub@b+2
  3694   006918  C07C  F02F         	movff	efgtoa@h+3,___flsub@b+3
  3695   00691C  C07D  F017         	movff	efgtoa@l,___flmul@a
  3696   006920  C07E  F018         	movff	efgtoa@l+1,___flmul@a+1
  3697   006924  C07F  F019         	movff	efgtoa@l+2,___flmul@a+2
  3698   006928  C080  F01A         	movff	efgtoa@l+3,___flmul@a+3
  3699   00692C  C088  F013         	movff	efgtoa@u,___flmul@b
  3700   006930  C089  F014         	movff	efgtoa@u+1,___flmul@b+1
  3701   006934  C08A  F015         	movff	efgtoa@u+2,___flmul@b+2
  3702   006938  C08B  F016         	movff	efgtoa@u+3,___flmul@b+3
  3703   00693C  ECA7  F037         	call	___flmul	;wreg free
  3704   006940  C013  F030         	movff	?___flmul,___flsub@a
  3705   006944  C014  F031         	movff	?___flmul+1,___flsub@a+1
  3706   006948  C015  F032         	movff	?___flmul+2,___flsub@a+2
  3707   00694C  C016  F033         	movff	?___flmul+3,___flsub@a+3
  3708   006950  EC8E  F043         	call	___flsub	;wreg free
  3709   006954  C02C  F079         	movff	?___flsub,efgtoa@h
  3710   006958  C02D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3711   00695C  C02E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3712   006960  C02F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3713   006964                     
  3714                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3715   006964  C088  F005         	movff	efgtoa@u,___fldiv@b
  3716   006968  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3717   00696C  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3718   006970  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3719   006974  0E00               	movlw	0
  3720   006976  6E09               	movwf	___fldiv@a^0,c
  3721   006978  0E00               	movlw	0
  3722   00697A  6E0A               	movwf	(___fldiv@a+1)^0,c
  3723   00697C  0E20               	movlw	32
  3724   00697E  6E0B               	movwf	(___fldiv@a+2)^0,c
  3725   006980  0E41               	movlw	65
  3726   006982  6E0C               	movwf	(___fldiv@a+3)^0,c
  3727   006984  ECCC  F039         	call	___fldiv	;wreg free
  3728   006988  C005  F088         	movff	?___fldiv,efgtoa@u
  3729   00698C  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  3730   006990  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3731   006994  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3732   006998                     
  3733                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3734   006998  0100               	movlb	0	; () banked
  3735   00699A  0760               	decf	efgtoa@ne& (0+255),f,b
  3736   00699C  A0D8               	btfss	status,0,c
  3737   00699E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3738   0069A0                     
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3741   0069A0  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3742   0069A2  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3743   0069A4                     l3195:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3747   0069A4  516D               	movf	efgtoa@m& (0+255),w,b
  3748   0069A6  5D77               	subwf	efgtoa@i& (0+255),w,b
  3749   0069A8  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3750   0069AA  0A80               	xorlw	128
  3751   0069AC  6E3E               	movwf	??_efgtoa^0,c
  3752   0069AE  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3753   0069B0  0A80               	xorlw	128
  3754   0069B2  583E               	subwfb	??_efgtoa^0,w,c
  3755   0069B4  B0D8               	btfsc	status,0,c
  3756   0069B6  EFDF  F034         	goto	u3371
  3757   0069BA  EFE1  F034         	goto	u3370
  3758   0069BE                     u3371:
  3759   0069BE  EFEF  F034         	goto	l3199
  3760   0069C2                     u3370:
  3761   0069C2                     
  3762                           ; BSR set to: 0
  3763   0069C2  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3764   0069C4  EFED  F034         	goto	u3381
  3765   0069C8  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3766   0069CA  E109               	bnz	u3380
  3767   0069CC  0E4B               	movlw	75
  3768   0069CE  5D82               	subwf	efgtoa@n& (0+255),w,b
  3769   0069D0  A0D8               	btfss	status,0,c
  3770   0069D2  EFED  F034         	goto	u3381
  3771   0069D6  EFEF  F034         	goto	u3380
  3772   0069DA                     u3381:
  3773   0069DA  EFED  F033         	goto	l3155
  3774   0069DE                     u3380:
  3775   0069DE                     l3199:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3779   0069DE  0E00               	movlw	0
  3780   0069E0  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3781   0069E2  0E4F               	movlw	79
  3782   0069E4  6F77               	movwf	efgtoa@i& (0+255),b
  3783   0069E6                     
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3786   0069E6  0E00               	movlw	low _dbuf
  3787   0069E8  2577               	addwf	efgtoa@i& (0+255),w,b
  3788   0069EA  6ED9               	movwf	fsr2l,c
  3789   0069EC  0E01               	movlw	high _dbuf
  3790   0069EE  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3791   0069F0  6EDA               	movwf	fsr2h,c
  3792   0069F2  6ADF               	clrf	indf2,c
  3793   0069F4                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3796   0069F4  0E00               	movlw	low _dbuf
  3797   0069F6  6E3E               	movwf	??_efgtoa^0,c
  3798   0069F8  0E01               	movlw	high _dbuf
  3799   0069FA  6E3F               	movwf	(??_efgtoa+1)^0,c
  3800   0069FC  5182               	movf	efgtoa@n& (0+255),w,b
  3801   0069FE  5E3E               	subwf	??_efgtoa^0,f,c
  3802   006A00  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3803   006A02  5A3F               	subwfb	(??_efgtoa+1)^0,f,c
  3804   006A04  5177               	movf	efgtoa@i& (0+255),w,b
  3805   006A06  243E               	addwf	??_efgtoa^0,w,c
  3806   006A08  6E05               	movwf	memcpy@d1^0,c
  3807   006A0A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3808   006A0C  203F               	addwfc	(??_efgtoa+1)^0,w,c
  3809   006A0E  6E06               	movwf	(memcpy@d1+1)^0,c
  3810   006A10  0E00               	movlw	low _dbuf
  3811   006A12  6E07               	movwf	memcpy@s1^0,c
  3812   006A14  0E01               	movlw	high _dbuf
  3813   006A16  6E08               	movwf	(memcpy@s1+1)^0,c
  3814   006A18  C082  F009         	movff	efgtoa@n,memcpy@n
  3815   006A1C  C083  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3816   006A20  EC7A  F042         	call	_memcpy	;wreg free
  3817   006A24                     
  3818                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3819   006A24  0100               	movlb	0	; () banked
  3820   006A26  5182               	movf	efgtoa@n& (0+255),w,b
  3821   006A28  5D77               	subwf	efgtoa@i& (0+255),w,b
  3822   006A2A  6F82               	movwf	efgtoa@n& (0+255),b
  3823   006A2C  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3824   006A2E  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3825   006A30  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3826   006A32                     
  3827                           ; BSR set to: 0
  3828                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3829   006A32  5181               	movf	efgtoa@sign& (0+255),w,b
  3830   006A34  A4D8               	btfss	status,2,c
  3831   006A36  EF1F  F035         	goto	u3391
  3832   006A3A  EF22  F035         	goto	u3390
  3833   006A3E                     u3391:
  3834   006A3E  0E01               	movlw	1
  3835   006A40  EF23  F035         	goto	u3400
  3836   006A44                     u3390:
  3837   006A44  0E00               	movlw	0
  3838   006A46                     u3400:
  3839   006A46  6F77               	movwf	efgtoa@i& (0+255),b
  3840   006A48  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3841   006A4A                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3844   006A4A  5181               	movf	efgtoa@sign& (0+255),w,b
  3845   006A4C  B4D8               	btfsc	status,2,c
  3846   006A4E  EF2B  F035         	goto	u3411
  3847   006A52  EF2D  F035         	goto	u3410
  3848   006A56                     u3411:
  3849   006A56  EF39  F035         	goto	l3213
  3850   006A5A                     u3410:
  3851   006A5A                     
  3852                           ; BSR set to: 0
  3853                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3854   006A5A  0782               	decf	efgtoa@n& (0+255),f,b
  3855   006A5C  A0D8               	btfss	status,0,c
  3856   006A5E  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3857   006A60  0E00               	movlw	low _dbuf
  3858   006A62  2582               	addwf	efgtoa@n& (0+255),w,b
  3859   006A64  6ED9               	movwf	fsr2l,c
  3860   006A66  0E01               	movlw	high _dbuf
  3861   006A68  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3862   006A6A  6EDA               	movwf	fsr2h,c
  3863   006A6C  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  3864   006A72                     l3213:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3868   006A72  5177               	movf	efgtoa@i& (0+255),w,b
  3869   006A74  5F71               	subwf	efgtoa@w& (0+255),f,b
  3870   006A76  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3871   006A78  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3872   006A7A                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3875   006A7A  C038  F013         	movff	efgtoa@fp,pad@fp
  3876   006A7E  0E00               	movlw	low _dbuf
  3877   006A80  2582               	addwf	efgtoa@n& (0+255),w,b
  3878   006A82  6E14               	movwf	pad@buf^0,c
  3879   006A84  0E01               	movlw	high _dbuf
  3880   006A86  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3881   006A88  6E15               	movwf	(pad@buf+1)^0,c
  3882   006A8A  C071  F016         	movff	efgtoa@w,pad@p
  3883   006A8E  C072  F017         	movff	efgtoa@w+1,pad@p+1
  3884   006A92  EC16  F042         	call	_pad	;wreg free
  3885   006A96                     l900:
  3886   006A96  0012               	return		;funcret
  3887   006A98                     __end_of_efgtoa:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _strcpy *****************
  3891 ;; Defined at:
  3892 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3895 ;;		 -> dbuf(80), 
  3896 ;;  src             1    6[COMRAM] PTR const unsigned char 
  3897 ;;		 -> STR_7(4), STR_4(4), 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  d               2    8[COMRAM] PTR unsigned char 
  3900 ;;		 -> dbuf(80), 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  2    4[COMRAM] PTR unsigned char 
  3903 ;; Registers used:
  3904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3910 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3914 ;;Total ram usage:        6 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 2
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_efgtoa
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text7
  3925   0086D6                     __ptext7:
  3926                           	callstack 0
  3927   0086D6                     _strcpy:
  3928                           	callstack 24
  3929   0086D6  C005  F009         	movff	strcpy@dest,strcpy@d
  3930   0086DA  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3931   0086DE                     l2933:
  3932   0086DE  2A07               	incf	strcpy@src^0,f,c
  3933   0086E0  0407               	decf	strcpy@src^0,w,c
  3934   0086E2  6E08               	movwf	??_strcpy^0,c
  3935   0086E4  0060  F023  FFF6   	movff	??_strcpy,tblptrl
  3936   0086EA                     	if	1	;There is more than 1 active tblptr byte
  3937   0086EA  0E20               	movlw	high __smallconst
  3938   0086EC  6EF7               	movwf	tblptrh,c
  3939   0086EE                     	endif
  3940   0086EE                     	if	0	;tblptru may be non-zero
  3941   0086EE                     	endif
  3942   0086EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3943   0086EE  0E00               	movlw	low (__smallconst shr (0+16))
  3944   0086F0  6EF8               	movwf	tblptru,c
  3945   0086F2                     	endif
  3946   0086F2  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  3947   0086F8  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  3948   0086FE  4A09               	infsnz	strcpy@d^0,f,c
  3949   008700  2A0A               	incf	(strcpy@d+1)^0,f,c
  3950   008702  0008               	tblrd		*
  3951   008704  006F FFD7 FFDF     	movff	tablat,indf2
  3952   00870A  50DF               	movf	indf2,w,c
  3953   00870C  A4D8               	btfss	status,2,c
  3954   00870E  EF8B  F043         	goto	u2951
  3955   008712  EF8D  F043         	goto	u2950
  3956   008716                     u2951:
  3957   008716  EF6F  F043         	goto	l2933
  3958   00871A                     u2950:
  3959   00871A  0012               	return		;funcret
  3960   00871C                     __end_of_strcpy:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function _pad *****************
  3964 ;; Defined at:
  3965 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  fp              1   18[COMRAM] PTR struct _IO_FILE
  3968 ;;		 -> sprintf@f(11), 
  3969 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3970 ;;		 -> dbuf(80), 
  3971 ;;  p               2   21[COMRAM] int 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  i               2   24[COMRAM] int 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  1    wreg      void 
  3976 ;; Registers used:
  3977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3983 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3986 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3987 ;;Total ram usage:        8 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; Hardware stack levels required when called: 5
  3990 ;; This function calls:
  3991 ;;		_fputc
  3992 ;;		_fputs
  3993 ;; This function is called by:
  3994 ;;		_efgtoa
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text8
  3999   00842C                     __ptext8:
  4000                           	callstack 0
  4001   00842C                     _pad:
  4002                           	callstack 21
  4003   00842C                     
  4004                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4005   00842C  BE17               	btfsc	(pad@p+1)^0,7,c
  4006   00842E  EF1D  F042         	goto	u2860
  4007   008432  EF1B  F042         	goto	u2861
  4008   008436                     u2861:
  4009   008436  EF21  F042         	goto	l885
  4010   00843A                     u2860:
  4011   00843A                     
  4012                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4013   00843A  0E00               	movlw	0
  4014   00843C  6E17               	movwf	(pad@p+1)^0,c
  4015   00843E  0E00               	movlw	0
  4016   008440  6E16               	movwf	pad@p^0,c
  4017   008442                     l885:
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4020   008442  0E00               	movlw	0
  4021   008444  6E1A               	movwf	(pad@i+1)^0,c
  4022   008446  0E00               	movlw	0
  4023   008448  6E19               	movwf	pad@i^0,c
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4026   00844A  EF31  F042         	goto	l2905
  4027   00844E                     l2901:
  4028                           
  4029                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4030   00844E  0E00               	movlw	0
  4031   008450  6E06               	movwf	(fputc@c+1)^0,c
  4032   008452  0E20               	movlw	32
  4033   008454  6E05               	movwf	fputc@c^0,c
  4034   008456  C013  F007         	movff	pad@fp,fputc@fp
  4035   00845A  ECF6  F040         	call	_fputc	;wreg free
  4036   00845E                     
  4037                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4038   00845E  4A19               	infsnz	pad@i^0,f,c
  4039   008460  2A1A               	incf	(pad@i+1)^0,f,c
  4040   008462                     l2905:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4043   008462  5016               	movf	pad@p^0,w,c
  4044   008464  5C19               	subwf	pad@i^0,w,c
  4045   008466  501A               	movf	(pad@i+1)^0,w,c
  4046   008468  0A80               	xorlw	128
  4047   00846A  6E18               	movwf	??_pad^0,c
  4048   00846C  5017               	movf	(pad@p+1)^0,w,c
  4049   00846E  0A80               	xorlw	128
  4050   008470  5818               	subwfb	??_pad^0,w,c
  4051   008472  A0D8               	btfss	status,0,c
  4052   008474  EF3E  F042         	goto	u2871
  4053   008478  EF40  F042         	goto	u2870
  4054   00847C                     u2871:
  4055   00847C  EF27  F042         	goto	l2901
  4056   008480                     u2870:
  4057   008480                     
  4058                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4059   008480  C014  F00D         	movff	pad@buf,fputs@s
  4060   008484  C015  F00E         	movff	pad@buf+1,fputs@s+1
  4061   008488  C013  F00F         	movff	pad@fp,fputs@fp
  4062   00848C  ECB1  F043         	call	_fputs	;wreg free
  4063   008490  0012               	return		;funcret
  4064   008492                     __end_of_pad:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _fputs *****************
  4068 ;; Defined at:
  4069 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4072 ;;		 -> dbuf(80), 
  4073 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4074 ;;		 -> sprintf@f(11), 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  i               2   16[COMRAM] int 
  4077 ;;  c               1   15[COMRAM] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2   12[COMRAM] int 
  4080 ;; Registers used:
  4081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4087 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4088 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4091 ;;Total ram usage:        6 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 4
  4094 ;; This function calls:
  4095 ;;		_fputc
  4096 ;; This function is called by:
  4097 ;;		_pad
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text9
  4102   008762                     __ptext9:
  4103                           	callstack 0
  4104   008762                     _fputs:
  4105                           	callstack 21
  4106   008762  0E00               	movlw	0
  4107   008764  6E12               	movwf	(fputs@i+1)^0,c
  4108   008766  0E00               	movlw	0
  4109   008768  6E11               	movwf	fputs@i^0,c
  4110   00876A  EFC0  F043         	goto	l2535
  4111   00876E                     l2531:
  4112   00876E  C010  F005         	movff	fputs@c,fputc@c
  4113   008772  6A06               	clrf	(fputc@c+1)^0,c
  4114   008774  C00F  F007         	movff	fputs@fp,fputc@fp
  4115   008778  ECF6  F040         	call	_fputc	;wreg free
  4116   00877C  4A11               	infsnz	fputs@i^0,f,c
  4117   00877E  2A12               	incf	(fputs@i+1)^0,f,c
  4118   008780                     l2535:
  4119   008780  5011               	movf	fputs@i^0,w,c
  4120   008782  240D               	addwf	fputs@s^0,w,c
  4121   008784  6ED9               	movwf	fsr2l,c
  4122   008786  5012               	movf	(fputs@i+1)^0,w,c
  4123   008788  200E               	addwfc	(fputs@s+1)^0,w,c
  4124   00878A  6EDA               	movwf	fsr2h,c
  4125   00878C  50DF               	movf	indf2,w,c
  4126   00878E  6E10               	movwf	fputs@c^0,c
  4127   008790  5010               	movf	fputs@c^0,w,c
  4128   008792  A4D8               	btfss	status,2,c
  4129   008794  EFCE  F043         	goto	u2271
  4130   008798  EFD0  F043         	goto	u2270
  4131   00879C                     u2271:
  4132   00879C  EFB7  F043         	goto	l2531
  4133   0087A0                     u2270:
  4134   0087A0  0012               	return		;funcret
  4135   0087A2                     __end_of_fputs:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _fputc *****************
  4139 ;; Defined at:
  4140 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  c               2    4[COMRAM] int 
  4143 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  4144 ;;		 -> sprintf@f(11), 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  2    4[COMRAM] int 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4156 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4158 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4159 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4160 ;;Total ram usage:        8 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 3
  4163 ;; This function calls:
  4164 ;;		_putch
  4165 ;; This function is called by:
  4166 ;;		_pad
  4167 ;;		_vfpfcnvrt
  4168 ;;		_fputs
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text10
  4173   0081EC                     __ptext10:
  4174                           	callstack 0
  4175   0081EC                     _fputc:
  4176                           	callstack 24
  4177   0081EC  5007               	movf	fputc@fp^0,w,c
  4178   0081EE  B4D8               	btfsc	status,2,c
  4179   0081F0  EFFC  F040         	goto	u1841
  4180   0081F4  EFFE  F040         	goto	u1840
  4181   0081F8                     u1841:
  4182   0081F8  EF06  F041         	goto	l2325
  4183   0081FC                     u1840:
  4184   0081FC  5007               	movf	fputc@fp^0,w,c
  4185   0081FE  A4D8               	btfss	status,2,c
  4186   008200  EF04  F041         	goto	u1851
  4187   008204  EF06  F041         	goto	u1850
  4188   008208                     u1851:
  4189   008208  EF0B  F041         	goto	l2327
  4190   00820C                     u1850:
  4191   00820C                     l2325:
  4192   00820C  5005               	movf	fputc@c^0,w,c
  4193   00820E  EC8A  F044         	call	_putch
  4194   008212  EF4B  F041         	goto	l1025
  4195   008216                     l2327:
  4196   008216  5007               	movf	fputc@fp^0,w,c
  4197   008218  6ED9               	movwf	fsr2l,c
  4198   00821A  6ADA               	clrf	fsr2h,c
  4199   00821C  0E09               	movlw	9
  4200   00821E  26D9               	addwf	fsr2l,f,c
  4201   008220  50DE               	movf	postinc2,w,c
  4202   008222  10DE               	iorwf	postinc2,w,c
  4203   008224  B4D8               	btfsc	status,2,c
  4204   008226  EF17  F041         	goto	u1861
  4205   00822A  EF19  F041         	goto	u1860
  4206   00822E                     u1861:
  4207   00822E  EF32  F041         	goto	l2331
  4208   008232                     u1860:
  4209   008232  5007               	movf	fputc@fp^0,w,c
  4210   008234  6ED9               	movwf	fsr2l,c
  4211   008236  6ADA               	clrf	fsr2h,c
  4212   008238  0E09               	movlw	9
  4213   00823A  26D9               	addwf	fsr2l,f,c
  4214   00823C  5007               	movf	fputc@fp^0,w,c
  4215   00823E  6EE1               	movwf	fsr1l,c
  4216   008240  6AE2               	clrf	fsr1h,c
  4217   008242  0E02               	movlw	2
  4218   008244  26E1               	addwf	fsr1l,f,c
  4219   008246  50DE               	movf	postinc2,w,c
  4220   008248  5CE6               	subwf	postinc1,w,c
  4221   00824A  50E6               	movf	postinc1,w,c
  4222   00824C  0A80               	xorlw	128
  4223   00824E  6E0C               	movwf	(??_fputc+4)^0,c
  4224   008250  50DE               	movf	postinc2,w,c
  4225   008252  0A80               	xorlw	128
  4226   008254  580C               	subwfb	(??_fputc+4)^0,w,c
  4227   008256  B0D8               	btfsc	status,0,c
  4228   008258  EF30  F041         	goto	u1871
  4229   00825C  EF32  F041         	goto	u1870
  4230   008260                     u1871:
  4231   008260  EF4B  F041         	goto	l1025
  4232   008264                     u1870:
  4233   008264                     l2331:
  4234   008264  5007               	movf	fputc@fp^0,w,c
  4235   008266  6ED9               	movwf	fsr2l,c
  4236   008268  6ADA               	clrf	fsr2h,c
  4237   00826A  0E02               	movlw	2
  4238   00826C  26D9               	addwf	fsr2l,f,c
  4239   00826E  50DF               	movf	indf2,w,c
  4240   008270  6E08               	movwf	??_fputc^0,c
  4241   008272  5007               	movf	fputc@fp^0,w,c
  4242   008274  6ED9               	movwf	fsr2l,c
  4243   008276  6ADA               	clrf	fsr2h,c
  4244   008278  50DF               	movf	indf2,w,c
  4245   00827A  2408               	addwf	??_fputc^0,w,c
  4246   00827C  6ED9               	movwf	fsr2l,c
  4247   00827E  6ADA               	clrf	fsr2h,c
  4248   008280  0060  F017  FFDF   	movff	fputc@c,indf2
  4249   008286  5007               	movf	fputc@fp^0,w,c
  4250   008288  6ED9               	movwf	fsr2l,c
  4251   00828A  6ADA               	clrf	fsr2h,c
  4252   00828C  0E02               	movlw	2
  4253   00828E  26D9               	addwf	fsr2l,f,c
  4254   008290  2ADE               	incf	postinc2,f,c
  4255   008292  0E00               	movlw	0
  4256   008294  22DD               	addwfc	postdec2,f,c
  4257   008296                     l1025:
  4258   008296  0012               	return		;funcret
  4259   008298                     __end_of_fputc:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _putch *****************
  4263 ;; Defined at:
  4264 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  c               1    wreg     unsigned char 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  c               1    0[COMRAM] unsigned char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4282 ;;Total ram usage:        0 bytes
  4283 ;; Hardware stack levels used: 1
  4284 ;; Hardware stack levels required when called: 2
  4285 ;; This function calls:
  4286 ;;		Nothing
  4287 ;; This function is called by:
  4288 ;;		_fputc
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text11
  4293   008914                     __ptext11:
  4294                           	callstack 0
  4295   008914                     _putch:
  4296                           	callstack 24
  4297   008914  0012               	return		;funcret
  4298   008916                     __end_of_putch:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _memcpy *****************
  4302 ;; Defined at:
  4303 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  d1              2    4[COMRAM] PTR void 
  4306 ;;		 -> dbuf(80), 
  4307 ;;  s1              2    6[COMRAM] PTR const void 
  4308 ;;		 -> dbuf(80), 
  4309 ;;  n               2    8[COMRAM] unsigned int 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4312 ;;		 -> dbuf(80), 
  4313 ;;  d               2   10[COMRAM] PTR unsigned char 
  4314 ;;		 -> dbuf(80), 
  4315 ;;  tmp             1   14[COMRAM] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2    4[COMRAM] PTR void 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4325 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4326 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;Total ram usage:       11 bytes
  4330 ;; Hardware stack levels used: 1
  4331 ;; Hardware stack levels required when called: 2
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_efgtoa
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text12
  4340   0084F4                     __ptext12:
  4341                           	callstack 0
  4342   0084F4                     _memcpy:
  4343                           	callstack 24
  4344   0084F4  C007  F00D         	movff	memcpy@s1,memcpy@s
  4345   0084F8  C008  F00E         	movff	memcpy@s1+1,memcpy@s+1
  4346   0084FC  C005  F00B         	movff	memcpy@d1,memcpy@d
  4347   008500  C006  F00C         	movff	memcpy@d1+1,memcpy@d+1
  4348   008504  EF99  F042         	goto	l2981
  4349   008508                     l2973:
  4350   008508  0060  F037  FFD9   	movff	memcpy@s,fsr2l
  4351   00850E  0060  F03B  FFDA   	movff	memcpy@s+1,fsr2h
  4352   008514  50DF               	movf	indf2,w,c
  4353   008516  6E0F               	movwf	memcpy@tmp^0,c
  4354   008518  4A0D               	infsnz	memcpy@s^0,f,c
  4355   00851A  2A0E               	incf	(memcpy@s+1)^0,f,c
  4356   00851C  0060  F02F  FFD9   	movff	memcpy@d,fsr2l
  4357   008522  0060  F033  FFDA   	movff	memcpy@d+1,fsr2h
  4358   008528  0060  F03F  FFDF   	movff	memcpy@tmp,indf2
  4359   00852E  4A0B               	infsnz	memcpy@d^0,f,c
  4360   008530  2A0C               	incf	(memcpy@d+1)^0,f,c
  4361   008532                     l2981:
  4362   008532  0609               	decf	memcpy@n^0,f,c
  4363   008534  A0D8               	btfss	status,0,c
  4364   008536  060A               	decf	(memcpy@n+1)^0,f,c
  4365   008538  2809               	incf	memcpy@n^0,w,c
  4366   00853A  E106               	bnz	u3071
  4367   00853C  280A               	incf	(memcpy@n+1)^0,w,c
  4368   00853E  A4D8               	btfss	status,2,c
  4369   008540  EFA4  F042         	goto	u3071
  4370   008544  EFA6  F042         	goto	u3070
  4371   008548                     u3071:
  4372   008548  EF84  F042         	goto	l2973
  4373   00854C                     u3070:
  4374   00854C  0012               	return		;funcret
  4375   00854E                     __end_of_memcpy:
  4376                           	callstack 0
  4377                           
  4378 ;; *************** function _labs *****************
  4379 ;; Defined at:
  4380 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;  a               4    4[COMRAM] long 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  4    4[COMRAM] long 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4396 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4397 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4398 ;;Total ram usage:        8 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 2
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_efgtoa
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text13
  4409   00854E                     __ptext13:
  4410                           	callstack 0
  4411   00854E                     _labs:
  4412                           	callstack 24
  4413   00854E  BE08               	btfsc	(labs@a+3)^0,7,c
  4414   008550  EFAC  F042         	goto	u2961
  4415   008554  EFAE  F042         	goto	u2960
  4416   008558                     u2961:
  4417   008558  EFB8  F042         	goto	l2939
  4418   00855C                     u2960:
  4419   00855C  C005  F005         	movff	labs@a,?_labs
  4420   008560  C006  F006         	movff	labs@a+1,?_labs+1
  4421   008564  C007  F007         	movff	labs@a+2,?_labs+2
  4422   008568  C008  F008         	movff	labs@a+3,?_labs+3
  4423   00856C  EFD1  F042         	goto	l1007
  4424   008570                     l2939:
  4425   008570  C005  F009         	movff	labs@a,??_labs
  4426   008574  C006  F00A         	movff	labs@a+1,??_labs+1
  4427   008578  C007  F00B         	movff	labs@a+2,??_labs+2
  4428   00857C  C008  F00C         	movff	labs@a+3,??_labs+3
  4429   008580  1E09               	comf	??_labs^0,f,c
  4430   008582  1E0A               	comf	(??_labs+1)^0,f,c
  4431   008584  1E0B               	comf	(??_labs+2)^0,f,c
  4432   008586  1E0C               	comf	(??_labs+3)^0,f,c
  4433   008588  2A09               	incf	??_labs^0,f,c
  4434   00858A  0E00               	movlw	0
  4435   00858C  220A               	addwfc	(??_labs+1)^0,f,c
  4436   00858E  220B               	addwfc	(??_labs+2)^0,f,c
  4437   008590  220C               	addwfc	(??_labs+3)^0,f,c
  4438   008592  C009  F005         	movff	??_labs,?_labs
  4439   008596  C00A  F006         	movff	??_labs+1,?_labs+1
  4440   00859A  C00B  F007         	movff	??_labs+2,?_labs+2
  4441   00859E  C00C  F008         	movff	??_labs+3,?_labs+3
  4442   0085A2                     l1007:
  4443   0085A2  0012               	return		;funcret
  4444   0085A4                     __end_of_labs:
  4445                           	callstack 0
  4446                           
  4447 ;; *************** function _floorf *****************
  4448 ;; Defined at:
  4449 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  x               4   29[COMRAM] float 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  u               4   45[COMRAM] struct .
  4454 ;;  m               4   39[COMRAM] unsigned long 
  4455 ;;  e               2   43[COMRAM] int 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  4   29[COMRAM] float 
  4458 ;; Registers used:
  4459 ;;		wreg, status,2, status,0
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4466 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4467 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4468 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4469 ;;Total ram usage:       20 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; Hardware stack levels required when called: 2
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_efgtoa
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text14
  4480   00793C                     __ptext14:
  4481                           	callstack 0
  4482   00793C                     _floorf:
  4483                           	callstack 24
  4484   00793C  C09A  F02E         	movff	floorf@F521,floorf@u
  4485   007940  C09B  F02F         	movff	floorf@F521+1,floorf@u+1
  4486   007944  C09C  F030         	movff	floorf@F521+2,floorf@u+2
  4487   007948  C09D  F031         	movff	floorf@F521+3,floorf@u+3
  4488   00794C  C01E  F02E         	movff	floorf@x,floorf@u
  4489   007950  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  4490   007954  C020  F030         	movff	floorf@x+2,floorf@u+2
  4491   007958  C021  F031         	movff	floorf@x+3,floorf@u+3
  4492   00795C  0E81               	movlw	129
  4493   00795E  6E22               	movwf	??_floorf^0,c
  4494   007960  0EFF               	movlw	255
  4495   007962  6E23               	movwf	(??_floorf+1)^0,c
  4496   007964  C02E  F024         	movff	floorf@u,??_floorf+2
  4497   007968  C02F  F025         	movff	floorf@u+1,??_floorf+3
  4498   00796C  C030  F026         	movff	floorf@u+2,??_floorf+4
  4499   007970  C031  F027         	movff	floorf@u+3,??_floorf+5
  4500   007974  0E18               	movlw	24
  4501   007976  EFC2  F03C         	goto	u2970
  4502   00797A                     u2975:
  4503   00797A  90D8               	bcf	status,0,c
  4504   00797C  3227               	rrcf	(??_floorf+5)^0,f,c
  4505   00797E  3226               	rrcf	(??_floorf+4)^0,f,c
  4506   007980  3225               	rrcf	(??_floorf+3)^0,f,c
  4507   007982  3224               	rrcf	(??_floorf+2)^0,f,c
  4508   007984                     u2970:
  4509   007984  2EE8               	decfsz	wreg,f,c
  4510   007986  EFBD  F03C         	goto	u2975
  4511   00798A  5024               	movf	(??_floorf+2)^0,w,c
  4512   00798C  2422               	addwf	??_floorf^0,w,c
  4513   00798E  6E2C               	movwf	floorf@e^0,c
  4514   007990  0E00               	movlw	0
  4515   007992  2023               	addwfc	(??_floorf+1)^0,w,c
  4516   007994  6E2D               	movwf	(floorf@e+1)^0,c
  4517   007996  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4518   007998  EFD7  F03C         	goto	u2981
  4519   00799C  502D               	movf	(floorf@e+1)^0,w,c
  4520   00799E  E109               	bnz	u2980
  4521   0079A0  0E17               	movlw	23
  4522   0079A2  5C2C               	subwf	floorf@e^0,w,c
  4523   0079A4  A0D8               	btfss	status,0,c
  4524   0079A6  EFD7  F03C         	goto	u2981
  4525   0079AA  EFD9  F03C         	goto	u2980
  4526   0079AE                     u2981:
  4527   0079AE  EFE3  F03C         	goto	l2949
  4528   0079B2                     u2980:
  4529   0079B2                     l2947:
  4530   0079B2  C01E  F01E         	movff	floorf@x,?_floorf
  4531   0079B6  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  4532   0079BA  C020  F020         	movff	floorf@x+2,?_floorf+2
  4533   0079BE  C021  F021         	movff	floorf@x+3,?_floorf+3
  4534   0079C2  EFA6  F03D         	goto	l993
  4535   0079C6                     l2949:
  4536   0079C6  BE2D               	btfsc	(floorf@e+1)^0,7,c
  4537   0079C8  EFE8  F03C         	goto	u2991
  4538   0079CC  EFEA  F03C         	goto	u2990
  4539   0079D0                     u2991:
  4540   0079D0  EF5A  F03D         	goto	l2959
  4541   0079D4                     u2990:
  4542   0079D4  C02C  F022         	movff	floorf@e,??_floorf
  4543   0079D8  0EFF               	movlw	255
  4544   0079DA  6E23               	movwf	(??_floorf+1)^0,c
  4545   0079DC  0EFF               	movlw	255
  4546   0079DE  6E24               	movwf	(??_floorf+2)^0,c
  4547   0079E0  0E7F               	movlw	127
  4548   0079E2  6E25               	movwf	(??_floorf+3)^0,c
  4549   0079E4  0E00               	movlw	0
  4550   0079E6  6E26               	movwf	(??_floorf+4)^0,c
  4551   0079E8                     u3005:
  4552   0079E8  6622               	tstfsz	??_floorf^0,c
  4553   0079EA  EFF9  F03C         	goto	u3006
  4554   0079EE  EF01  F03D         	goto	u3007
  4555   0079F2                     u3006:
  4556   0079F2  3426               	rlcf	(??_floorf+4)^0,w,c
  4557   0079F4  3226               	rrcf	(??_floorf+4)^0,f,c
  4558   0079F6  3225               	rrcf	(??_floorf+3)^0,f,c
  4559   0079F8  3224               	rrcf	(??_floorf+2)^0,f,c
  4560   0079FA  3223               	rrcf	(??_floorf+1)^0,f,c
  4561   0079FC  2E22               	decfsz	??_floorf^0,f,c
  4562   0079FE  EFF4  F03C         	goto	u3005
  4563   007A02                     u3007:
  4564   007A02  C023  F028         	movff	??_floorf+1,floorf@m
  4565   007A06  C024  F029         	movff	??_floorf+2,floorf@m+1
  4566   007A0A  C025  F02A         	movff	??_floorf+3,floorf@m+2
  4567   007A0E  C026  F02B         	movff	??_floorf+4,floorf@m+3
  4568   007A12  5028               	movf	floorf@m^0,w,c
  4569   007A14  142E               	andwf	floorf@u^0,w,c
  4570   007A16  6E22               	movwf	??_floorf^0,c
  4571   007A18  5029               	movf	(floorf@m+1)^0,w,c
  4572   007A1A  142F               	andwf	(floorf@u+1)^0,w,c
  4573   007A1C  6E23               	movwf	(??_floorf+1)^0,c
  4574   007A1E  502A               	movf	(floorf@m+2)^0,w,c
  4575   007A20  1430               	andwf	(floorf@u+2)^0,w,c
  4576   007A22  6E24               	movwf	(??_floorf+2)^0,c
  4577   007A24  502B               	movf	(floorf@m+3)^0,w,c
  4578   007A26  1431               	andwf	(floorf@u+3)^0,w,c
  4579   007A28  6E25               	movwf	(??_floorf+3)^0,c
  4580   007A2A  5022               	movf	??_floorf^0,w,c
  4581   007A2C  1023               	iorwf	(??_floorf+1)^0,w,c
  4582   007A2E  1024               	iorwf	(??_floorf+2)^0,w,c
  4583   007A30  1025               	iorwf	(??_floorf+3)^0,w,c
  4584   007A32  A4D8               	btfss	status,2,c
  4585   007A34  EF1E  F03D         	goto	u3011
  4586   007A38  EF20  F03D         	goto	u3010
  4587   007A3C                     u3011:
  4588   007A3C  EF22  F03D         	goto	l2955
  4589   007A40                     u3010:
  4590   007A40  EFD9  F03C         	goto	l2947
  4591   007A44                     l2955:
  4592   007A44  C02E  F022         	movff	floorf@u,??_floorf
  4593   007A48  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4594   007A4C  C030  F024         	movff	floorf@u+2,??_floorf+2
  4595   007A50  C031  F025         	movff	floorf@u+3,??_floorf+3
  4596   007A54  0E20               	movlw	32
  4597   007A56  EF32  F03D         	goto	u3020
  4598   007A5A                     u3025:
  4599   007A5A  90D8               	bcf	status,0,c
  4600   007A5C  3225               	rrcf	(??_floorf+3)^0,f,c
  4601   007A5E  3224               	rrcf	(??_floorf+2)^0,f,c
  4602   007A60  3223               	rrcf	(??_floorf+1)^0,f,c
  4603   007A62  3222               	rrcf	??_floorf^0,f,c
  4604   007A64                     u3020:
  4605   007A64  2EE8               	decfsz	wreg,f,c
  4606   007A66  EF2D  F03D         	goto	u3025
  4607   007A6A  5022               	movf	??_floorf^0,w,c
  4608   007A6C  1023               	iorwf	(??_floorf+1)^0,w,c
  4609   007A6E  1024               	iorwf	(??_floorf+2)^0,w,c
  4610   007A70  1025               	iorwf	(??_floorf+3)^0,w,c
  4611   007A72  B4D8               	btfsc	status,2,c
  4612   007A74  EF3E  F03D         	goto	u3031
  4613   007A78  EF40  F03D         	goto	u3030
  4614   007A7C                     u3031:
  4615   007A7C  EF48  F03D         	goto	l996
  4616   007A80                     u3030:
  4617   007A80  5028               	movf	floorf@m^0,w,c
  4618   007A82  262E               	addwf	floorf@u^0,f,c
  4619   007A84  5029               	movf	(floorf@m+1)^0,w,c
  4620   007A86  222F               	addwfc	(floorf@u+1)^0,f,c
  4621   007A88  502A               	movf	(floorf@m+2)^0,w,c
  4622   007A8A  2230               	addwfc	(floorf@u+2)^0,f,c
  4623   007A8C  502B               	movf	(floorf@m+3)^0,w,c
  4624   007A8E  2231               	addwfc	(floorf@u+3)^0,f,c
  4625   007A90                     l996:
  4626   007A90  1C28               	comf	floorf@m^0,w,c
  4627   007A92  6E22               	movwf	??_floorf^0,c
  4628   007A94  1C29               	comf	(floorf@m+1)^0,w,c
  4629   007A96  6E23               	movwf	(??_floorf+1)^0,c
  4630   007A98  1C2A               	comf	(floorf@m+2)^0,w,c
  4631   007A9A  6E24               	movwf	(??_floorf+2)^0,c
  4632   007A9C  1C2B               	comf	(floorf@m+3)^0,w,c
  4633   007A9E  6E25               	movwf	(??_floorf+3)^0,c
  4634   007AA0  5022               	movf	??_floorf^0,w,c
  4635   007AA2  162E               	andwf	floorf@u^0,f,c
  4636   007AA4  5023               	movf	(??_floorf+1)^0,w,c
  4637   007AA6  162F               	andwf	(floorf@u+1)^0,f,c
  4638   007AA8  5024               	movf	(??_floorf+2)^0,w,c
  4639   007AAA  1630               	andwf	(floorf@u+2)^0,f,c
  4640   007AAC  5025               	movf	(??_floorf+3)^0,w,c
  4641   007AAE  1631               	andwf	(floorf@u+3)^0,f,c
  4642   007AB0  EF9E  F03D         	goto	l2967
  4643   007AB4                     l2959:
  4644   007AB4  C02E  F022         	movff	floorf@u,??_floorf
  4645   007AB8  C02F  F023         	movff	floorf@u+1,??_floorf+1
  4646   007ABC  C030  F024         	movff	floorf@u+2,??_floorf+2
  4647   007AC0  C031  F025         	movff	floorf@u+3,??_floorf+3
  4648   007AC4  0E20               	movlw	32
  4649   007AC6  EF6A  F03D         	goto	u3040
  4650   007ACA                     u3045:
  4651   007ACA  90D8               	bcf	status,0,c
  4652   007ACC  3225               	rrcf	(??_floorf+3)^0,f,c
  4653   007ACE  3224               	rrcf	(??_floorf+2)^0,f,c
  4654   007AD0  3223               	rrcf	(??_floorf+1)^0,f,c
  4655   007AD2  3222               	rrcf	??_floorf^0,f,c
  4656   007AD4                     u3040:
  4657   007AD4  2EE8               	decfsz	wreg,f,c
  4658   007AD6  EF65  F03D         	goto	u3045
  4659   007ADA  5022               	movf	??_floorf^0,w,c
  4660   007ADC  1023               	iorwf	(??_floorf+1)^0,w,c
  4661   007ADE  1024               	iorwf	(??_floorf+2)^0,w,c
  4662   007AE0  1025               	iorwf	(??_floorf+3)^0,w,c
  4663   007AE2  A4D8               	btfss	status,2,c
  4664   007AE4  EF76  F03D         	goto	u3051
  4665   007AE8  EF78  F03D         	goto	u3050
  4666   007AEC                     u3051:
  4667   007AEC  EF82  F03D         	goto	l2963
  4668   007AF0                     u3050:
  4669   007AF0  0E00               	movlw	0
  4670   007AF2  6E2E               	movwf	floorf@u^0,c
  4671   007AF4  0E00               	movlw	0
  4672   007AF6  6E2F               	movwf	(floorf@u+1)^0,c
  4673   007AF8  0E00               	movlw	0
  4674   007AFA  6E30               	movwf	(floorf@u+2)^0,c
  4675   007AFC  0E00               	movlw	0
  4676   007AFE  6E31               	movwf	(floorf@u+3)^0,c
  4677   007B00  EF9E  F03D         	goto	l2967
  4678   007B04                     l2963:
  4679   007B04  90D8               	bcf	status,0,c
  4680   007B06  342E               	rlcf	floorf@u^0,w,c
  4681   007B08  6E22               	movwf	??_floorf^0,c
  4682   007B0A  342F               	rlcf	(floorf@u+1)^0,w,c
  4683   007B0C  6E23               	movwf	(??_floorf+1)^0,c
  4684   007B0E  3430               	rlcf	(floorf@u+2)^0,w,c
  4685   007B10  6E24               	movwf	(??_floorf+2)^0,c
  4686   007B12  3431               	rlcf	(floorf@u+3)^0,w,c
  4687   007B14  6E25               	movwf	(??_floorf+3)^0,c
  4688   007B16  5022               	movf	??_floorf^0,w,c
  4689   007B18  1023               	iorwf	(??_floorf+1)^0,w,c
  4690   007B1A  1024               	iorwf	(??_floorf+2)^0,w,c
  4691   007B1C  1025               	iorwf	(??_floorf+3)^0,w,c
  4692   007B1E  B4D8               	btfsc	status,2,c
  4693   007B20  EF94  F03D         	goto	u3061
  4694   007B24  EF96  F03D         	goto	u3060
  4695   007B28                     u3061:
  4696   007B28  EF9E  F03D         	goto	l2967
  4697   007B2C                     u3060:
  4698   007B2C  0E00               	movlw	0
  4699   007B2E  6E2E               	movwf	floorf@u^0,c
  4700   007B30  0E00               	movlw	0
  4701   007B32  6E2F               	movwf	(floorf@u+1)^0,c
  4702   007B34  0E80               	movlw	128
  4703   007B36  6E30               	movwf	(floorf@u+2)^0,c
  4704   007B38  0EBF               	movlw	191
  4705   007B3A  6E31               	movwf	(floorf@u+3)^0,c
  4706   007B3C                     l2967:
  4707   007B3C  C02E  F01E         	movff	floorf@u,?_floorf
  4708   007B40  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  4709   007B44  C030  F020         	movff	floorf@u+2,?_floorf+2
  4710   007B48  C031  F021         	movff	floorf@u+3,?_floorf+3
  4711   007B4C                     l993:
  4712   007B4C  0012               	return		;funcret
  4713   007B4E                     __end_of_floorf:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function ___fpclassifyf *****************
  4717 ;; Defined at:
  4718 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  x               4    4[COMRAM] float 
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  u               4   14[COMRAM] struct .
  4723 ;;  e               2   12[COMRAM] int 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  2    4[COMRAM] int 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4734 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4736 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4737 ;;Total ram usage:       14 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 2
  4740 ;; This function calls:
  4741 ;;		Nothing
  4742 ;; This function is called by:
  4743 ;;		_efgtoa
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text15
  4748   008036                     __ptext15:
  4749                           	callstack 0
  4750   008036                     ___fpclassifyf:
  4751                           	callstack 24
  4752   008036  C09E  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4753   00803A  C09F  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4754   00803E  C0A0  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4755   008042  C0A1  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4756   008046  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  4757   00804A  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4758   00804E  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4759   008052  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4760   008056  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4761   00805A  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4762   00805E  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4763   008062  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4764   008066  0E18               	movlw	24
  4765   008068  EF3B  F040         	goto	u2880
  4766   00806C                     u2885:
  4767   00806C  90D8               	bcf	status,0,c
  4768   00806E  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  4769   008070  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  4770   008072  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  4771   008074  3209               	rrcf	??___fpclassifyf^0,f,c
  4772   008076                     u2880:
  4773   008076  2EE8               	decfsz	wreg,f,c
  4774   008078  EF36  F040         	goto	u2885
  4775   00807C  5009               	movf	??___fpclassifyf^0,w,c
  4776   00807E  6E0D               	movwf	___fpclassifyf@e^0,c
  4777   008080  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  4778   008082  500D               	movf	___fpclassifyf@e^0,w,c
  4779   008084  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4780   008086  A4D8               	btfss	status,2,c
  4781   008088  EF48  F040         	goto	u2891
  4782   00808C  EF4A  F040         	goto	u2890
  4783   008090                     u2891:
  4784   008090  EF6A  F040         	goto	l2921
  4785   008094                     u2890:
  4786   008094  90D8               	bcf	status,0,c
  4787   008096  340F               	rlcf	___fpclassifyf@u^0,w,c
  4788   008098  6E09               	movwf	??___fpclassifyf^0,c
  4789   00809A  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4790   00809C  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  4791   00809E  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4792   0080A0  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  4793   0080A2  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4794   0080A4  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  4795   0080A6  5009               	movf	??___fpclassifyf^0,w,c
  4796   0080A8  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4797   0080AA  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4798   0080AC  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4799   0080AE  A4D8               	btfss	status,2,c
  4800   0080B0  EF5C  F040         	goto	u2901
  4801   0080B4  EF5E  F040         	goto	u2900
  4802   0080B8                     u2901:
  4803   0080B8  EF64  F040         	goto	l2917
  4804   0080BC                     u2900:
  4805   0080BC  0E00               	movlw	0
  4806   0080BE  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4807   0080C0  0E02               	movlw	2
  4808   0080C2  6E05               	movwf	?___fpclassifyf^0,c
  4809   0080C4  EF99  F040         	goto	l986
  4810   0080C8                     l2917:
  4811   0080C8  0E00               	movlw	0
  4812   0080CA  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4813   0080CC  0E03               	movlw	3
  4814   0080CE  6E05               	movwf	?___fpclassifyf^0,c
  4815   0080D0  EF99  F040         	goto	l986
  4816   0080D4                     l2921:
  4817   0080D4  280D               	incf	___fpclassifyf@e^0,w,c
  4818   0080D6  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4819   0080D8  A4D8               	btfss	status,2,c
  4820   0080DA  EF71  F040         	goto	u2911
  4821   0080DE  EF73  F040         	goto	u2910
  4822   0080E2                     u2911:
  4823   0080E2  EF95  F040         	goto	l2927
  4824   0080E6                     u2910:
  4825   0080E6  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  4826   0080EA  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4827   0080EE  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4828   0080F2  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4829   0080F6  0E09               	movlw	9
  4830   0080F8                     u2925:
  4831   0080F8  90D8               	bcf	status,0,c
  4832   0080FA  3609               	rlcf	??___fpclassifyf^0,f,c
  4833   0080FC  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  4834   0080FE  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  4835   008100  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  4836   008102  2EE8               	decfsz	wreg,f,c
  4837   008104  EF7C  F040         	goto	u2925
  4838   008108  5009               	movf	??___fpclassifyf^0,w,c
  4839   00810A  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  4840   00810C  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  4841   00810E  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  4842   008110  B4D8               	btfsc	status,2,c
  4843   008112  EF8D  F040         	goto	u2931
  4844   008116  EF90  F040         	goto	u2930
  4845   00811A                     u2931:
  4846   00811A  0E01               	movlw	1
  4847   00811C  EF91  F040         	goto	u2940
  4848   008120                     u2930:
  4849   008120  0E00               	movlw	0
  4850   008122                     u2940:
  4851   008122  6E05               	movwf	?___fpclassifyf^0,c
  4852   008124  6A06               	clrf	(?___fpclassifyf+1)^0,c
  4853   008126  EF99  F040         	goto	l986
  4854   00812A                     l2927:
  4855   00812A  0E00               	movlw	0
  4856   00812C  6E06               	movwf	(?___fpclassifyf+1)^0,c
  4857   00812E  0E04               	movlw	4
  4858   008130  6E05               	movwf	?___fpclassifyf^0,c
  4859   008132                     l986:
  4860   008132  0012               	return		;funcret
  4861   008134                     __end_of___fpclassifyf:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function ___fltol *****************
  4865 ;; Defined at:
  4866 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  f1              4    4[COMRAM] int 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  exp1            1   13[COMRAM] unsigned char 
  4871 ;;  sign1           1   12[COMRAM] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  4    4[COMRAM] long 
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4884 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4885 ;;Total ram usage:       10 bytes
  4886 ;; Hardware stack levels used: 1
  4887 ;; Hardware stack levels required when called: 2
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_efgtoa
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text16
  4896   007E2C                     __ptext16:
  4897                           	callstack 0
  4898   007E2C                     ___fltol:
  4899                           	callstack 24
  4900   007E2C  3407               	rlcf	(___fltol@f1+2)^0,w,c
  4901   007E2E  3408               	rlcf	(___fltol@f1+3)^0,w,c
  4902   007E30  6E0E               	movwf	___fltol@exp1^0,c
  4903   007E32  500E               	movf	___fltol@exp1^0,w,c
  4904   007E34  A4D8               	btfss	status,2,c
  4905   007E36  EF1F  F03F         	goto	u2791
  4906   007E3A  EF21  F03F         	goto	u2790
  4907   007E3E                     u2791:
  4908   007E3E  EF2B  F03F         	goto	l2859
  4909   007E42                     u2790:
  4910   007E42                     l2855:
  4911   007E42  0E00               	movlw	0
  4912   007E44  6E05               	movwf	?___fltol^0,c
  4913   007E46  0E00               	movlw	0
  4914   007E48  6E06               	movwf	(?___fltol+1)^0,c
  4915   007E4A  0E00               	movlw	0
  4916   007E4C  6E07               	movwf	(?___fltol+2)^0,c
  4917   007E4E  0E00               	movlw	0
  4918   007E50  6E08               	movwf	(?___fltol+3)^0,c
  4919   007E52  EF98  F03F         	goto	l477
  4920   007E56                     l2859:
  4921   007E56  C005  F009         	movff	___fltol@f1,??___fltol
  4922   007E5A  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  4923   007E5E  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  4924   007E62  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  4925   007E66  0E20               	movlw	32
  4926   007E68  EF3B  F03F         	goto	u2800
  4927   007E6C                     u2805:
  4928   007E6C  90D8               	bcf	status,0,c
  4929   007E6E  320C               	rrcf	(??___fltol+3)^0,f,c
  4930   007E70  320B               	rrcf	(??___fltol+2)^0,f,c
  4931   007E72  320A               	rrcf	(??___fltol+1)^0,f,c
  4932   007E74  3209               	rrcf	??___fltol^0,f,c
  4933   007E76                     u2800:
  4934   007E76  2EE8               	decfsz	wreg,f,c
  4935   007E78  EF36  F03F         	goto	u2805
  4936   007E7C  5009               	movf	??___fltol^0,w,c
  4937   007E7E  6E0D               	movwf	___fltol@sign1^0,c
  4938   007E80  8E07               	bsf	(___fltol@f1+2)^0,7,c
  4939   007E82  0EFF               	movlw	255
  4940   007E84  1605               	andwf	___fltol@f1^0,f,c
  4941   007E86  0EFF               	movlw	255
  4942   007E88  1606               	andwf	(___fltol@f1+1)^0,f,c
  4943   007E8A  0EFF               	movlw	255
  4944   007E8C  1607               	andwf	(___fltol@f1+2)^0,f,c
  4945   007E8E  0E00               	movlw	0
  4946   007E90  1608               	andwf	(___fltol@f1+3)^0,f,c
  4947   007E92  0E96               	movlw	150
  4948   007E94  5E0E               	subwf	___fltol@exp1^0,f,c
  4949   007E96  BE0E               	btfsc	___fltol@exp1^0,7,c
  4950   007E98  EF52  F03F         	goto	u2810
  4951   007E9C  EF50  F03F         	goto	u2811
  4952   007EA0                     u2811:
  4953   007EA0  EF68  F03F         	goto	l2879
  4954   007EA4                     u2810:
  4955   007EA4  500E               	movf	___fltol@exp1^0,w,c
  4956   007EA6  0A80               	xorlw	128
  4957   007EA8  0F97               	addlw	151
  4958   007EAA  B0D8               	btfsc	status,0,c
  4959   007EAC  EF5A  F03F         	goto	u2821
  4960   007EB0  EF5C  F03F         	goto	u2820
  4961   007EB4                     u2821:
  4962   007EB4  EF5E  F03F         	goto	l2875
  4963   007EB8                     u2820:
  4964   007EB8  EF21  F03F         	goto	l2855
  4965   007EBC                     l2875:
  4966   007EBC  90D8               	bcf	status,0,c
  4967   007EBE  3208               	rrcf	(___fltol@f1+3)^0,f,c
  4968   007EC0  3207               	rrcf	(___fltol@f1+2)^0,f,c
  4969   007EC2  3206               	rrcf	(___fltol@f1+1)^0,f,c
  4970   007EC4  3205               	rrcf	___fltol@f1^0,f,c
  4971   007EC6  3E0E               	incfsz	___fltol@exp1^0,f,c
  4972   007EC8  EF5E  F03F         	goto	l2875
  4973   007ECC  EF80  F03F         	goto	l2889
  4974   007ED0                     l2879:
  4975   007ED0  0E1F               	movlw	31
  4976   007ED2  640E               	cpfsgt	___fltol@exp1^0,c
  4977   007ED4  EF6E  F03F         	goto	u2831
  4978   007ED8  EF70  F03F         	goto	u2830
  4979   007EDC                     u2831:
  4980   007EDC  EF78  F03F         	goto	l2887
  4981   007EE0                     u2830:
  4982   007EE0  EF21  F03F         	goto	l2855
  4983   007EE4                     l2885:
  4984   007EE4  90D8               	bcf	status,0,c
  4985   007EE6  3605               	rlcf	___fltol@f1^0,f,c
  4986   007EE8  3606               	rlcf	(___fltol@f1+1)^0,f,c
  4987   007EEA  3607               	rlcf	(___fltol@f1+2)^0,f,c
  4988   007EEC  3608               	rlcf	(___fltol@f1+3)^0,f,c
  4989   007EEE  060E               	decf	___fltol@exp1^0,f,c
  4990   007EF0                     l2887:
  4991   007EF0  500E               	movf	___fltol@exp1^0,w,c
  4992   007EF2  A4D8               	btfss	status,2,c
  4993   007EF4  EF7E  F03F         	goto	u2841
  4994   007EF8  EF80  F03F         	goto	u2840
  4995   007EFC                     u2841:
  4996   007EFC  EF72  F03F         	goto	l2885
  4997   007F00                     u2840:
  4998   007F00                     l2889:
  4999   007F00  500D               	movf	___fltol@sign1^0,w,c
  5000   007F02  B4D8               	btfsc	status,2,c
  5001   007F04  EF86  F03F         	goto	u2851
  5002   007F08  EF88  F03F         	goto	u2850
  5003   007F0C                     u2851:
  5004   007F0C  EF90  F03F         	goto	l2893
  5005   007F10                     u2850:
  5006   007F10  1E08               	comf	(___fltol@f1+3)^0,f,c
  5007   007F12  1E07               	comf	(___fltol@f1+2)^0,f,c
  5008   007F14  1E06               	comf	(___fltol@f1+1)^0,f,c
  5009   007F16  6C05               	negf	___fltol@f1^0,c
  5010   007F18  0E00               	movlw	0
  5011   007F1A  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5012   007F1C  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5013   007F1E  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5014   007F20                     l2893:
  5015   007F20  C005  F005         	movff	___fltol@f1,?___fltol
  5016   007F24  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5017   007F28  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5018   007F2C  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5019   007F30                     l477:
  5020   007F30  0012               	return		;funcret
  5021   007F32                     __end_of___fltol:
  5022                           	callstack 0
  5023                           
  5024 ;; *************** function ___flsub *****************
  5025 ;; Defined at:
  5026 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  b               4   43[COMRAM] long 
  5029 ;;  a               4   47[COMRAM] long 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  4   43[COMRAM] long 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5041 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5044 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5045 ;;Total ram usage:        8 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 3
  5048 ;; This function calls:
  5049 ;;		___fladd
  5050 ;; This function is called by:
  5051 ;;		_efgtoa
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text17
  5056   00871C                     __ptext17:
  5057                           	callstack 0
  5058   00871C                     ___flsub:
  5059                           	callstack 23
  5060   00871C  0E00               	movlw	0
  5061   00871E  1A30               	xorwf	___flsub@a^0,f,c
  5062   008720  0E00               	movlw	0
  5063   008722  1A31               	xorwf	(___flsub@a+1)^0,f,c
  5064   008724  0E00               	movlw	0
  5065   008726  1A32               	xorwf	(___flsub@a+2)^0,f,c
  5066   008728  0E80               	movlw	128
  5067   00872A  1A33               	xorwf	(___flsub@a+3)^0,f,c
  5068   00872C  C02C  F005         	movff	___flsub@b,___fladd@b
  5069   008730  C02D  F006         	movff	___flsub@b+1,___fladd@b+1
  5070   008734  C02E  F007         	movff	___flsub@b+2,___fladd@b+2
  5071   008738  C02F  F008         	movff	___flsub@b+3,___fladd@b+3
  5072   00873C  C030  F009         	movff	___flsub@a,___fladd@a
  5073   008740  C031  F00A         	movff	___flsub@a+1,___fladd@a+1
  5074   008744  C032  F00B         	movff	___flsub@a+2,___fladd@a+2
  5075   008748  C033  F00C         	movff	___flsub@a+3,___fladd@a+3
  5076   00874C  EC4C  F035         	call	___fladd	;wreg free
  5077   008750  C005  F02C         	movff	?___fladd,?___flsub
  5078   008754  C006  F02D         	movff	?___fladd+1,?___flsub+1
  5079   008758  C007  F02E         	movff	?___fladd+2,?___flsub+2
  5080   00875C  C008  F02F         	movff	?___fladd+3,?___flsub+3
  5081   008760  0012               	return		;funcret
  5082   008762                     __end_of___flsub:
  5083                           	callstack 0
  5084                           
  5085 ;; *************** function ___fladd *****************
  5086 ;; Defined at:
  5087 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  b               4    4[COMRAM] long 
  5090 ;;  a               4    8[COMRAM] long 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  grs             1   19[COMRAM] unsigned char 
  5093 ;;  bexp            1   18[COMRAM] unsigned char 
  5094 ;;  aexp            1   17[COMRAM] unsigned char 
  5095 ;;  signs           1   16[COMRAM] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  4    4[COMRAM] unsigned char 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5105 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5106 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5107 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5108 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5109 ;;Total ram usage:       16 bytes
  5110 ;; Hardware stack levels used: 1
  5111 ;; Hardware stack levels required when called: 2
  5112 ;; This function calls:
  5113 ;;		Nothing
  5114 ;; This function is called by:
  5115 ;;		___flsub
  5116 ;;		_efgtoa
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           
  5120                           	psect	text18
  5121   006A98                     __ptext18:
  5122                           	callstack 0
  5123   006A98                     ___fladd:
  5124                           	callstack 23
  5125   006A98  5008               	movf	(___fladd@b+3)^0,w,c
  5126   006A9A  0B80               	andlw	128
  5127   006A9C  6E11               	movwf	___fladd@signs^0,c
  5128   006A9E  5008               	movf	(___fladd@b+3)^0,w,c
  5129   006AA0  2408               	addwf	(___fladd@b+3)^0,w,c
  5130   006AA2  6E13               	movwf	___fladd@bexp^0,c
  5131   006AA4  AE07               	btfss	(___fladd@b+2)^0,7,c
  5132   006AA6  EF57  F035         	goto	u1881
  5133   006AAA  EF59  F035         	goto	u1880
  5134   006AAE                     u1881:
  5135   006AAE  EF5A  F035         	goto	l2341
  5136   006AB2                     u1880:
  5137   006AB2  8013               	bsf	___fladd@bexp^0,0,c
  5138   006AB4                     l2341:
  5139   006AB4  5013               	movf	___fladd@bexp^0,w,c
  5140   006AB6  B4D8               	btfsc	status,2,c
  5141   006AB8  EF60  F035         	goto	u1891
  5142   006ABC  EF62  F035         	goto	u1890
  5143   006AC0                     u1891:
  5144   006AC0  EF76  F035         	goto	l2351
  5145   006AC4                     u1890:
  5146   006AC4  2813               	incf	___fladd@bexp^0,w,c
  5147   006AC6  A4D8               	btfss	status,2,c
  5148   006AC8  EF68  F035         	goto	u1901
  5149   006ACC  EF6A  F035         	goto	u1900
  5150   006AD0                     u1901:
  5151   006AD0  EF72  F035         	goto	l2347
  5152   006AD4                     u1900:
  5153   006AD4  0E00               	movlw	0
  5154   006AD6  6E05               	movwf	___fladd@b^0,c
  5155   006AD8  0E00               	movlw	0
  5156   006ADA  6E06               	movwf	(___fladd@b+1)^0,c
  5157   006ADC  0E00               	movlw	0
  5158   006ADE  6E07               	movwf	(___fladd@b+2)^0,c
  5159   006AE0  0E00               	movlw	0
  5160   006AE2  6E08               	movwf	(___fladd@b+3)^0,c
  5161   006AE4                     l2347:
  5162   006AE4  8E07               	bsf	(___fladd@b+2)^0,7,c
  5163   006AE6  6A08               	clrf	(___fladd@b+3)^0,c
  5164   006AE8  EF7E  F035         	goto	l2353
  5165   006AEC                     l2351:
  5166   006AEC  0E00               	movlw	0
  5167   006AEE  6E05               	movwf	___fladd@b^0,c
  5168   006AF0  0E00               	movlw	0
  5169   006AF2  6E06               	movwf	(___fladd@b+1)^0,c
  5170   006AF4  0E00               	movlw	0
  5171   006AF6  6E07               	movwf	(___fladd@b+2)^0,c
  5172   006AF8  0E00               	movlw	0
  5173   006AFA  6E08               	movwf	(___fladd@b+3)^0,c
  5174   006AFC                     l2353:
  5175   006AFC  500C               	movf	(___fladd@a+3)^0,w,c
  5176   006AFE  0B80               	andlw	128
  5177   006B00  6E12               	movwf	___fladd@aexp^0,c
  5178   006B02  5011               	movf	___fladd@signs^0,w,c
  5179   006B04  1812               	xorwf	___fladd@aexp^0,w,c
  5180   006B06  B4D8               	btfsc	status,2,c
  5181   006B08  EF88  F035         	goto	u1911
  5182   006B0C  EF8A  F035         	goto	u1910
  5183   006B10                     u1911:
  5184   006B10  EF8B  F035         	goto	l2359
  5185   006B14                     u1910:
  5186   006B14  8C11               	bsf	___fladd@signs^0,6,c
  5187   006B16                     l2359:
  5188   006B16  500C               	movf	(___fladd@a+3)^0,w,c
  5189   006B18  240C               	addwf	(___fladd@a+3)^0,w,c
  5190   006B1A  6E12               	movwf	___fladd@aexp^0,c
  5191   006B1C  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5192   006B1E  EF93  F035         	goto	u1921
  5193   006B22  EF95  F035         	goto	u1920
  5194   006B26                     u1921:
  5195   006B26  EF96  F035         	goto	l2365
  5196   006B2A                     u1920:
  5197   006B2A  8012               	bsf	___fladd@aexp^0,0,c
  5198   006B2C                     l2365:
  5199   006B2C  5012               	movf	___fladd@aexp^0,w,c
  5200   006B2E  B4D8               	btfsc	status,2,c
  5201   006B30  EF9C  F035         	goto	u1931
  5202   006B34  EF9E  F035         	goto	u1930
  5203   006B38                     u1931:
  5204   006B38  EFB2  F035         	goto	l2375
  5205   006B3C                     u1930:
  5206   006B3C  2812               	incf	___fladd@aexp^0,w,c
  5207   006B3E  A4D8               	btfss	status,2,c
  5208   006B40  EFA4  F035         	goto	u1941
  5209   006B44  EFA6  F035         	goto	u1940
  5210   006B48                     u1941:
  5211   006B48  EFAE  F035         	goto	l2371
  5212   006B4C                     u1940:
  5213   006B4C  0E00               	movlw	0
  5214   006B4E  6E09               	movwf	___fladd@a^0,c
  5215   006B50  0E00               	movlw	0
  5216   006B52  6E0A               	movwf	(___fladd@a+1)^0,c
  5217   006B54  0E00               	movlw	0
  5218   006B56  6E0B               	movwf	(___fladd@a+2)^0,c
  5219   006B58  0E00               	movlw	0
  5220   006B5A  6E0C               	movwf	(___fladd@a+3)^0,c
  5221   006B5C                     l2371:
  5222   006B5C  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5223   006B5E  6A0C               	clrf	(___fladd@a+3)^0,c
  5224   006B60  EFBA  F035         	goto	l2377
  5225   006B64                     l2375:
  5226   006B64  0E00               	movlw	0
  5227   006B66  6E09               	movwf	___fladd@a^0,c
  5228   006B68  0E00               	movlw	0
  5229   006B6A  6E0A               	movwf	(___fladd@a+1)^0,c
  5230   006B6C  0E00               	movlw	0
  5231   006B6E  6E0B               	movwf	(___fladd@a+2)^0,c
  5232   006B70  0E00               	movlw	0
  5233   006B72  6E0C               	movwf	(___fladd@a+3)^0,c
  5234   006B74                     l2377:
  5235   006B74  5013               	movf	___fladd@bexp^0,w,c
  5236   006B76  5C12               	subwf	___fladd@aexp^0,w,c
  5237   006B78  B0D8               	btfsc	status,0,c
  5238   006B7A  EFC1  F035         	goto	u1951
  5239   006B7E  EFC3  F035         	goto	u1950
  5240   006B82                     u1951:
  5241   006B82  EFEA  F035         	goto	l2413
  5242   006B86                     u1950:
  5243   006B86  AC11               	btfss	___fladd@signs^0,6,c
  5244   006B88  EFC8  F035         	goto	u1961
  5245   006B8C  EFCA  F035         	goto	u1960
  5246   006B90                     u1961:
  5247   006B90  EFCC  F035         	goto	l2383
  5248   006B94                     u1960:
  5249   006B94  0E80               	movlw	128
  5250   006B96  1A11               	xorwf	___fladd@signs^0,f,c
  5251   006B98                     l2383:
  5252   006B98  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5253   006B9C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5254   006BA0  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5255   006BA4  C005  F014         	movff	___fladd@b,___fladd@grs
  5256   006BA8  C009  F005         	movff	___fladd@a,___fladd@b
  5257   006BAC  C014  F009         	movff	___fladd@grs,___fladd@a
  5258   006BB0  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5259   006BB4  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5260   006BB8  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5261   006BBC  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5262   006BC0  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5263   006BC4  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5264   006BC8  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5265   006BCC  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5266   006BD0  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5267   006BD4                     l2413:
  5268   006BD4  6A14               	clrf	___fladd@grs^0,c
  5269   006BD6  5013               	movf	___fladd@bexp^0,w,c
  5270   006BD8  C012  F00D         	movff	___fladd@aexp,??___fladd
  5271   006BDC  6A0E               	clrf	(??___fladd+1)^0,c
  5272   006BDE  5E0D               	subwf	??___fladd^0,f,c
  5273   006BE0  0E00               	movlw	0
  5274   006BE2  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5275   006BE4  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5276   006BE6  EFFE  F035         	goto	u1971
  5277   006BEA  500E               	movf	(??___fladd+1)^0,w,c
  5278   006BEC  E109               	bnz	u1970
  5279   006BEE  0E1A               	movlw	26
  5280   006BF0  5C0D               	subwf	??___fladd^0,w,c
  5281   006BF2  A0D8               	btfss	status,0,c
  5282   006BF4  EFFE  F035         	goto	u1971
  5283   006BF8  EF00  F036         	goto	u1970
  5284   006BFC                     u1971:
  5285   006BFC  EF37  F036         	goto	l709
  5286   006C00                     u1970:
  5287   006C00  5005               	movf	___fladd@b^0,w,c
  5288   006C02  1006               	iorwf	(___fladd@b+1)^0,w,c
  5289   006C04  1007               	iorwf	(___fladd@b+2)^0,w,c
  5290   006C06  1008               	iorwf	(___fladd@b+3)^0,w,c
  5291   006C08  A4D8               	btfss	status,2,c
  5292   006C0A  EF09  F036         	goto	u1981
  5293   006C0E  EF0C  F036         	goto	u1980
  5294   006C12                     u1981:
  5295   006C12  0E01               	movlw	1
  5296   006C14  EF0D  F036         	goto	u1990
  5297   006C18                     u1980:
  5298   006C18  0E00               	movlw	0
  5299   006C1A                     u1990:
  5300   006C1A  6E14               	movwf	___fladd@grs^0,c
  5301   006C1C  0E00               	movlw	0
  5302   006C1E  6E05               	movwf	___fladd@b^0,c
  5303   006C20  0E00               	movlw	0
  5304   006C22  6E06               	movwf	(___fladd@b+1)^0,c
  5305   006C24  0E00               	movlw	0
  5306   006C26  6E07               	movwf	(___fladd@b+2)^0,c
  5307   006C28  0E00               	movlw	0
  5308   006C2A  6E08               	movwf	(___fladd@b+3)^0,c
  5309   006C2C  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5310   006C30  EF40  F036         	goto	l708
  5311   006C34                     l710:
  5312   006C34  A014               	btfss	___fladd@grs^0,0,c
  5313   006C36  EF1F  F036         	goto	u2001
  5314   006C3A  EF21  F036         	goto	u2000
  5315   006C3E                     u2001:
  5316   006C3E  EF27  F036         	goto	l2423
  5317   006C42                     u2000:
  5318   006C42  90D8               	bcf	status,0,c
  5319   006C44  3014               	rrcf	___fladd@grs^0,w,c
  5320   006C46  0901               	iorlw	1
  5321   006C48  6E14               	movwf	___fladd@grs^0,c
  5322   006C4A  EF29  F036         	goto	l2425
  5323   006C4E                     l2423:
  5324   006C4E  90D8               	bcf	status,0,c
  5325   006C50  3214               	rrcf	___fladd@grs^0,f,c
  5326   006C52                     l2425:
  5327   006C52  A005               	btfss	___fladd@b^0,0,c
  5328   006C54  EF2E  F036         	goto	u2011
  5329   006C58  EF30  F036         	goto	u2010
  5330   006C5C                     u2011:
  5331   006C5C  EF31  F036         	goto	l2429
  5332   006C60                     u2010:
  5333   006C60  8E14               	bsf	___fladd@grs^0,7,c
  5334   006C62                     l2429:
  5335   006C62  3408               	rlcf	(___fladd@b+3)^0,w,c
  5336   006C64  3208               	rrcf	(___fladd@b+3)^0,f,c
  5337   006C66  3207               	rrcf	(___fladd@b+2)^0,f,c
  5338   006C68  3206               	rrcf	(___fladd@b+1)^0,f,c
  5339   006C6A  3205               	rrcf	___fladd@b^0,f,c
  5340   006C6C  2A13               	incf	___fladd@bexp^0,f,c
  5341   006C6E                     l709:
  5342   006C6E  5012               	movf	___fladd@aexp^0,w,c
  5343   006C70  5C13               	subwf	___fladd@bexp^0,w,c
  5344   006C72  A0D8               	btfss	status,0,c
  5345   006C74  EF3E  F036         	goto	u2021
  5346   006C78  EF40  F036         	goto	u2020
  5347   006C7C                     u2021:
  5348   006C7C  EF1A  F036         	goto	l710
  5349   006C80                     u2020:
  5350   006C80                     l708:
  5351   006C80  BC11               	btfsc	___fladd@signs^0,6,c
  5352   006C82  EF45  F036         	goto	u2031
  5353   006C86  EF47  F036         	goto	u2030
  5354   006C8A                     u2031:
  5355   006C8A  EF87  F036         	goto	l2457
  5356   006C8E                     u2030:
  5357   006C8E  5013               	movf	___fladd@bexp^0,w,c
  5358   006C90  A4D8               	btfss	status,2,c
  5359   006C92  EF4D  F036         	goto	u2041
  5360   006C96  EF4F  F036         	goto	u2040
  5361   006C9A                     u2041:
  5362   006C9A  EF59  F036         	goto	l2439
  5363   006C9E                     u2040:
  5364   006C9E  0E00               	movlw	0
  5365   006CA0  6E05               	movwf	?___fladd^0,c
  5366   006CA2  0E00               	movlw	0
  5367   006CA4  6E06               	movwf	(?___fladd+1)^0,c
  5368   006CA6  0E00               	movlw	0
  5369   006CA8  6E07               	movwf	(?___fladd+2)^0,c
  5370   006CAA  0E00               	movlw	0
  5371   006CAC  6E08               	movwf	(?___fladd+3)^0,c
  5372   006CAE  EFA6  F037         	goto	l717
  5373   006CB2                     l2439:
  5374   006CB2  5009               	movf	___fladd@a^0,w,c
  5375   006CB4  2605               	addwf	___fladd@b^0,f,c
  5376   006CB6  500A               	movf	(___fladd@a+1)^0,w,c
  5377   006CB8  2206               	addwfc	(___fladd@b+1)^0,f,c
  5378   006CBA  500B               	movf	(___fladd@a+2)^0,w,c
  5379   006CBC  2207               	addwfc	(___fladd@b+2)^0,f,c
  5380   006CBE  500C               	movf	(___fladd@a+3)^0,w,c
  5381   006CC0  2208               	addwfc	(___fladd@b+3)^0,f,c
  5382   006CC2  A008               	btfss	(___fladd@b+3)^0,0,c
  5383   006CC4  EF66  F036         	goto	u2051
  5384   006CC8  EF68  F036         	goto	u2050
  5385   006CCC                     u2051:
  5386   006CCC  EF14  F037         	goto	l722
  5387   006CD0                     u2050:
  5388   006CD0  A014               	btfss	___fladd@grs^0,0,c
  5389   006CD2  EF6D  F036         	goto	u2061
  5390   006CD6  EF6F  F036         	goto	u2060
  5391   006CDA                     u2061:
  5392   006CDA  EF75  F036         	goto	l2447
  5393   006CDE                     u2060:
  5394   006CDE  90D8               	bcf	status,0,c
  5395   006CE0  3014               	rrcf	___fladd@grs^0,w,c
  5396   006CE2  0901               	iorlw	1
  5397   006CE4  6E14               	movwf	___fladd@grs^0,c
  5398   006CE6  EF77  F036         	goto	l2449
  5399   006CEA                     l2447:
  5400   006CEA  90D8               	bcf	status,0,c
  5401   006CEC  3214               	rrcf	___fladd@grs^0,f,c
  5402   006CEE                     l2449:
  5403   006CEE  A005               	btfss	___fladd@b^0,0,c
  5404   006CF0  EF7C  F036         	goto	u2071
  5405   006CF4  EF7E  F036         	goto	u2070
  5406   006CF8                     u2071:
  5407   006CF8  EF7F  F036         	goto	l2453
  5408   006CFC                     u2070:
  5409   006CFC  8E14               	bsf	___fladd@grs^0,7,c
  5410   006CFE                     l2453:
  5411   006CFE  3408               	rlcf	(___fladd@b+3)^0,w,c
  5412   006D00  3208               	rrcf	(___fladd@b+3)^0,f,c
  5413   006D02  3207               	rrcf	(___fladd@b+2)^0,f,c
  5414   006D04  3206               	rrcf	(___fladd@b+1)^0,f,c
  5415   006D06  3205               	rrcf	___fladd@b^0,f,c
  5416   006D08  2A13               	incf	___fladd@bexp^0,f,c
  5417   006D0A  EF14  F037         	goto	l722
  5418   006D0E                     l2457:
  5419   006D0E  5009               	movf	___fladd@a^0,w,c
  5420   006D10  5C05               	subwf	___fladd@b^0,w,c
  5421   006D12  500A               	movf	(___fladd@a+1)^0,w,c
  5422   006D14  5806               	subwfb	(___fladd@b+1)^0,w,c
  5423   006D16  500B               	movf	(___fladd@a+2)^0,w,c
  5424   006D18  5807               	subwfb	(___fladd@b+2)^0,w,c
  5425   006D1A  5008               	movf	(___fladd@b+3)^0,w,c
  5426   006D1C  0A80               	xorlw	128
  5427   006D1E  6E0D               	movwf	??___fladd^0,c
  5428   006D20  500C               	movf	(___fladd@a+3)^0,w,c
  5429   006D22  0A80               	xorlw	128
  5430   006D24  580D               	subwfb	??___fladd^0,w,c
  5431   006D26  B0D8               	btfsc	status,0,c
  5432   006D28  EF98  F036         	goto	u2081
  5433   006D2C  EF9A  F036         	goto	u2080
  5434   006D30                     u2081:
  5435   006D30  EFC5  F036         	goto	l2467
  5436   006D34                     u2080:
  5437   006D34  5005               	movf	___fladd@b^0,w,c
  5438   006D36  5C09               	subwf	___fladd@a^0,w,c
  5439   006D38  6E0D               	movwf	??___fladd^0,c
  5440   006D3A  5006               	movf	(___fladd@b+1)^0,w,c
  5441   006D3C  580A               	subwfb	(___fladd@a+1)^0,w,c
  5442   006D3E  6E0E               	movwf	(??___fladd+1)^0,c
  5443   006D40  5007               	movf	(___fladd@b+2)^0,w,c
  5444   006D42  580B               	subwfb	(___fladd@a+2)^0,w,c
  5445   006D44  6E0F               	movwf	(??___fladd+2)^0,c
  5446   006D46  5008               	movf	(___fladd@b+3)^0,w,c
  5447   006D48  580C               	subwfb	(___fladd@a+3)^0,w,c
  5448   006D4A  6E10               	movwf	(??___fladd+3)^0,c
  5449   006D4C  0EFF               	movlw	255
  5450   006D4E  240D               	addwf	??___fladd^0,w,c
  5451   006D50  6E05               	movwf	___fladd@b^0,c
  5452   006D52  0EFF               	movlw	255
  5453   006D54  200E               	addwfc	(??___fladd+1)^0,w,c
  5454   006D56  6E06               	movwf	(___fladd@b+1)^0,c
  5455   006D58  0EFF               	movlw	255
  5456   006D5A  200F               	addwfc	(??___fladd+2)^0,w,c
  5457   006D5C  6E07               	movwf	(___fladd@b+2)^0,c
  5458   006D5E  0EFF               	movlw	255
  5459   006D60  2010               	addwfc	(??___fladd+3)^0,w,c
  5460   006D62  6E08               	movwf	(___fladd@b+3)^0,c
  5461   006D64  0E80               	movlw	128
  5462   006D66  1A11               	xorwf	___fladd@signs^0,f,c
  5463   006D68  6C14               	negf	___fladd@grs^0,c
  5464   006D6A  5014               	movf	___fladd@grs^0,w,c
  5465   006D6C  A4D8               	btfss	status,2,c
  5466   006D6E  EFBB  F036         	goto	u2091
  5467   006D72  EFBD  F036         	goto	u2090
  5468   006D76                     u2091:
  5469   006D76  EFCD  F036         	goto	l725
  5470   006D7A                     u2090:
  5471   006D7A  0E01               	movlw	1
  5472   006D7C  2605               	addwf	___fladd@b^0,f,c
  5473   006D7E  0E00               	movlw	0
  5474   006D80  2206               	addwfc	(___fladd@b+1)^0,f,c
  5475   006D82  2207               	addwfc	(___fladd@b+2)^0,f,c
  5476   006D84  2208               	addwfc	(___fladd@b+3)^0,f,c
  5477   006D86  EFCD  F036         	goto	l725
  5478   006D8A                     l2467:
  5479   006D8A  5009               	movf	___fladd@a^0,w,c
  5480   006D8C  5E05               	subwf	___fladd@b^0,f,c
  5481   006D8E  500A               	movf	(___fladd@a+1)^0,w,c
  5482   006D90  5A06               	subwfb	(___fladd@b+1)^0,f,c
  5483   006D92  500B               	movf	(___fladd@a+2)^0,w,c
  5484   006D94  5A07               	subwfb	(___fladd@b+2)^0,f,c
  5485   006D96  500C               	movf	(___fladd@a+3)^0,w,c
  5486   006D98  5A08               	subwfb	(___fladd@b+3)^0,f,c
  5487   006D9A                     l725:
  5488   006D9A  5005               	movf	___fladd@b^0,w,c
  5489   006D9C  1006               	iorwf	(___fladd@b+1)^0,w,c
  5490   006D9E  1007               	iorwf	(___fladd@b+2)^0,w,c
  5491   006DA0  1008               	iorwf	(___fladd@b+3)^0,w,c
  5492   006DA2  A4D8               	btfss	status,2,c
  5493   006DA4  EFD6  F036         	goto	u2101
  5494   006DA8  EFD8  F036         	goto	u2100
  5495   006DAC                     u2101:
  5496   006DAC  EF0D  F037         	goto	l2491
  5497   006DB0                     u2100:
  5498   006DB0  5014               	movf	___fladd@grs^0,w,c
  5499   006DB2  A4D8               	btfss	status,2,c
  5500   006DB4  EFDE  F036         	goto	u2111
  5501   006DB8  EFE0  F036         	goto	u2110
  5502   006DBC                     u2111:
  5503   006DBC  EF0D  F037         	goto	l2491
  5504   006DC0                     u2110:
  5505   006DC0  0E00               	movlw	0
  5506   006DC2  6E05               	movwf	?___fladd^0,c
  5507   006DC4  0E00               	movlw	0
  5508   006DC6  6E06               	movwf	(?___fladd+1)^0,c
  5509   006DC8  0E00               	movlw	0
  5510   006DCA  6E07               	movwf	(?___fladd+2)^0,c
  5511   006DCC  0E00               	movlw	0
  5512   006DCE  6E08               	movwf	(?___fladd+3)^0,c
  5513   006DD0  EFA6  F037         	goto	l717
  5514   006DD4                     l2475:
  5515   006DD4  90D8               	bcf	status,0,c
  5516   006DD6  3605               	rlcf	___fladd@b^0,f,c
  5517   006DD8  3606               	rlcf	(___fladd@b+1)^0,f,c
  5518   006DDA  3607               	rlcf	(___fladd@b+2)^0,f,c
  5519   006DDC  3608               	rlcf	(___fladd@b+3)^0,f,c
  5520   006DDE  AE14               	btfss	___fladd@grs^0,7,c
  5521   006DE0  EFF4  F036         	goto	u2121
  5522   006DE4  EFF6  F036         	goto	u2120
  5523   006DE8                     u2121:
  5524   006DE8  EFF7  F036         	goto	l2481
  5525   006DEC                     u2120:
  5526   006DEC  8005               	bsf	___fladd@b^0,0,c
  5527   006DEE                     l2481:
  5528   006DEE  A014               	btfss	___fladd@grs^0,0,c
  5529   006DF0  EFFC  F036         	goto	u2131
  5530   006DF4  EFFE  F036         	goto	u2130
  5531   006DF8                     u2131:
  5532   006DF8  EF02  F037         	goto	l2485
  5533   006DFC                     u2130:
  5534   006DFC  80D8               	bsf	status,0,c
  5535   006DFE  3614               	rlcf	___fladd@grs^0,f,c
  5536   006E00  EF04  F037         	goto	l2487
  5537   006E04                     l2485:
  5538   006E04  90D8               	bcf	status,0,c
  5539   006E06  3614               	rlcf	___fladd@grs^0,f,c
  5540   006E08                     l2487:
  5541   006E08  5013               	movf	___fladd@bexp^0,w,c
  5542   006E0A  B4D8               	btfsc	status,2,c
  5543   006E0C  EF0A  F037         	goto	u2141
  5544   006E10  EF0C  F037         	goto	u2140
  5545   006E14                     u2141:
  5546   006E14  EF0D  F037         	goto	l2491
  5547   006E18                     u2140:
  5548   006E18  0613               	decf	___fladd@bexp^0,f,c
  5549   006E1A                     l2491:
  5550   006E1A  AE07               	btfss	(___fladd@b+2)^0,7,c
  5551   006E1C  EF12  F037         	goto	u2151
  5552   006E20  EF14  F037         	goto	u2150
  5553   006E24                     u2151:
  5554   006E24  EFEA  F036         	goto	l2475
  5555   006E28                     u2150:
  5556   006E28                     l722:
  5557   006E28  6A12               	clrf	___fladd@aexp^0,c
  5558   006E2A  AE14               	btfss	___fladd@grs^0,7,c
  5559   006E2C  EF1A  F037         	goto	u2161
  5560   006E30  EF1C  F037         	goto	u2160
  5561   006E34                     u2161:
  5562   006E34  EF34  F037         	goto	l734
  5563   006E38                     u2160:
  5564   006E38  C014  F00D         	movff	___fladd@grs,??___fladd
  5565   006E3C  0E7F               	movlw	127
  5566   006E3E  160D               	andwf	??___fladd^0,f,c
  5567   006E40  B4D8               	btfsc	status,2,c
  5568   006E42  EF25  F037         	goto	u2171
  5569   006E46  EF27  F037         	goto	u2170
  5570   006E4A                     u2171:
  5571   006E4A  EF2B  F037         	goto	l735
  5572   006E4E                     u2170:
  5573   006E4E                     l2495:
  5574   006E4E  0E01               	movlw	1
  5575   006E50  6E12               	movwf	___fladd@aexp^0,c
  5576   006E52  EF34  F037         	goto	l734
  5577   006E56                     l735:
  5578   006E56  A005               	btfss	___fladd@b^0,0,c
  5579   006E58  EF30  F037         	goto	u2181
  5580   006E5C  EF32  F037         	goto	u2180
  5581   006E60                     u2181:
  5582   006E60  EF34  F037         	goto	l734
  5583   006E64                     u2180:
  5584   006E64  EF27  F037         	goto	l2495
  5585   006E68                     l734:
  5586   006E68  5012               	movf	___fladd@aexp^0,w,c
  5587   006E6A  B4D8               	btfsc	status,2,c
  5588   006E6C  EF3A  F037         	goto	u2191
  5589   006E70  EF3C  F037         	goto	u2190
  5590   006E74                     u2191:
  5591   006E74  EF67  F037         	goto	l2507
  5592   006E78                     u2190:
  5593   006E78  0E01               	movlw	1
  5594   006E7A  2605               	addwf	___fladd@b^0,f,c
  5595   006E7C  0E00               	movlw	0
  5596   006E7E  2206               	addwfc	(___fladd@b+1)^0,f,c
  5597   006E80  2207               	addwfc	(___fladd@b+2)^0,f,c
  5598   006E82  2208               	addwfc	(___fladd@b+3)^0,f,c
  5599   006E84  A008               	btfss	(___fladd@b+3)^0,0,c
  5600   006E86  EF47  F037         	goto	u2201
  5601   006E8A  EF49  F037         	goto	u2200
  5602   006E8E                     u2201:
  5603   006E8E  EF67  F037         	goto	l2507
  5604   006E92                     u2200:
  5605   006E92  C005  F00D         	movff	___fladd@b,??___fladd
  5606   006E96  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  5607   006E9A  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  5608   006E9E  C008  F010         	movff	___fladd@b+3,??___fladd+3
  5609   006EA2  3410               	rlcf	(??___fladd+3)^0,w,c
  5610   006EA4  3210               	rrcf	(??___fladd+3)^0,f,c
  5611   006EA6  320F               	rrcf	(??___fladd+2)^0,f,c
  5612   006EA8  320E               	rrcf	(??___fladd+1)^0,f,c
  5613   006EAA  320D               	rrcf	??___fladd^0,f,c
  5614   006EAC  C00D  F005         	movff	??___fladd,___fladd@b
  5615   006EB0  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  5616   006EB4  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  5617   006EB8  C010  F008         	movff	??___fladd+3,___fladd@b+3
  5618   006EBC  2813               	incf	___fladd@bexp^0,w,c
  5619   006EBE  B4D8               	btfsc	status,2,c
  5620   006EC0  EF64  F037         	goto	u2211
  5621   006EC4  EF66  F037         	goto	u2210
  5622   006EC8                     u2211:
  5623   006EC8  EF67  F037         	goto	l2507
  5624   006ECC                     u2210:
  5625   006ECC  2A13               	incf	___fladd@bexp^0,f,c
  5626   006ECE                     l2507:
  5627   006ECE  2813               	incf	___fladd@bexp^0,w,c
  5628   006ED0  B4D8               	btfsc	status,2,c
  5629   006ED2  EF6D  F037         	goto	u2221
  5630   006ED6  EF6F  F037         	goto	u2220
  5631   006EDA                     u2221:
  5632   006EDA  EF77  F037         	goto	l2511
  5633   006EDE                     u2220:
  5634   006EDE  5013               	movf	___fladd@bexp^0,w,c
  5635   006EE0  A4D8               	btfss	status,2,c
  5636   006EE2  EF75  F037         	goto	u2231
  5637   006EE6  EF77  F037         	goto	u2230
  5638   006EEA                     u2231:
  5639   006EEA  EF88  F037         	goto	l741
  5640   006EEE                     u2230:
  5641   006EEE                     l2511:
  5642   006EEE  0E00               	movlw	0
  5643   006EF0  6E05               	movwf	___fladd@b^0,c
  5644   006EF2  0E00               	movlw	0
  5645   006EF4  6E06               	movwf	(___fladd@b+1)^0,c
  5646   006EF6  0E00               	movlw	0
  5647   006EF8  6E07               	movwf	(___fladd@b+2)^0,c
  5648   006EFA  0E00               	movlw	0
  5649   006EFC  6E08               	movwf	(___fladd@b+3)^0,c
  5650   006EFE  5013               	movf	___fladd@bexp^0,w,c
  5651   006F00  A4D8               	btfss	status,2,c
  5652   006F02  EF85  F037         	goto	u2241
  5653   006F06  EF87  F037         	goto	u2240
  5654   006F0A                     u2241:
  5655   006F0A  EF88  F037         	goto	l741
  5656   006F0E                     u2240:
  5657   006F0E  6A11               	clrf	___fladd@signs^0,c
  5658   006F10                     l741:
  5659   006F10  A013               	btfss	___fladd@bexp^0,0,c
  5660   006F12  EF8D  F037         	goto	u2251
  5661   006F16  EF8F  F037         	goto	u2250
  5662   006F1A                     u2251:
  5663   006F1A  EF92  F037         	goto	l2517
  5664   006F1E                     u2250:
  5665   006F1E  8E07               	bsf	(___fladd@b+2)^0,7,c
  5666   006F20  EF93  F037         	goto	l2519
  5667   006F24                     l2517:
  5668   006F24  9E07               	bcf	(___fladd@b+2)^0,7,c
  5669   006F26                     l2519:
  5670   006F26  90D8               	bcf	status,0,c
  5671   006F28  3013               	rrcf	___fladd@bexp^0,w,c
  5672   006F2A  6E08               	movwf	(___fladd@b+3)^0,c
  5673   006F2C  AE11               	btfss	___fladd@signs^0,7,c
  5674   006F2E  EF9B  F037         	goto	u2261
  5675   006F32  EF9D  F037         	goto	u2260
  5676   006F36                     u2261:
  5677   006F36  EF9E  F037         	goto	l2525
  5678   006F3A                     u2260:
  5679   006F3A  8E08               	bsf	(___fladd@b+3)^0,7,c
  5680   006F3C                     l2525:
  5681   006F3C  C005  F005         	movff	___fladd@b,?___fladd
  5682   006F40  C006  F006         	movff	___fladd@b+1,?___fladd+1
  5683   006F44  C007  F007         	movff	___fladd@b+2,?___fladd+2
  5684   006F48  C008  F008         	movff	___fladd@b+3,?___fladd+3
  5685   006F4C                     l717:
  5686   006F4C  0012               	return		;funcret
  5687   006F4E                     __end_of___fladd:
  5688                           	callstack 0
  5689                           
  5690 ;; *************** function ___flneg *****************
  5691 ;; Defined at:
  5692 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  f1              4    4[COMRAM] unsigned char 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  4    4[COMRAM] unsigned char 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5709 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5710 ;;Total ram usage:        4 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; Hardware stack levels required when called: 2
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_efgtoa
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text19
  5721   00881A                     __ptext19:
  5722                           	callstack 0
  5723   00881A                     ___flneg:
  5724                           	callstack 24
  5725   00881A  5005               	movf	___flneg@f1^0,w,c
  5726   00881C  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5727   00881E  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5728   008820  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5729   008822  B4D8               	btfsc	status,2,c
  5730   008824  EF16  F044         	goto	u2781
  5731   008828  EF18  F044         	goto	u2780
  5732   00882C                     u2781:
  5733   00882C  EF20  F044         	goto	l2849
  5734   008830                     u2780:
  5735   008830  0E00               	movlw	0
  5736   008832  1A05               	xorwf	___flneg@f1^0,f,c
  5737   008834  0E00               	movlw	0
  5738   008836  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5739   008838  0E00               	movlw	0
  5740   00883A  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5741   00883C  0E80               	movlw	128
  5742   00883E  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5743   008840                     l2849:
  5744   008840  C005  F005         	movff	___flneg@f1,?___flneg
  5745   008844  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5746   008848  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5747   00884C  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5748   008850  0012               	return		;funcret
  5749   008852                     __end_of___flneg:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function ___flmul *****************
  5753 ;; Defined at:
  5754 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  b               4   18[COMRAM] unsigned char 
  5757 ;;  a               4   22[COMRAM] unsigned char 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;  prod            4   37[COMRAM] struct .
  5760 ;;  grs             4   31[COMRAM] unsigned long 
  5761 ;;  temp            2   41[COMRAM] struct .
  5762 ;;  bexp            1   36[COMRAM] unsigned char 
  5763 ;;  aexp            1   35[COMRAM] unsigned char 
  5764 ;;  sign            1   30[COMRAM] unsigned char 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  4   18[COMRAM] unsigned char 
  5767 ;; Registers used:
  5768 ;;		wreg, status,2, status,0, prodl, prodh
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5774 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5775 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5776 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5777 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5778 ;;Total ram usage:       25 bytes
  5779 ;; Hardware stack levels used: 1
  5780 ;; Hardware stack levels required when called: 2
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;;		_efgtoa
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text20
  5790   006F4E                     __ptext20:
  5791                           	callstack 0
  5792   006F4E                     ___flmul:
  5793                           	callstack 24
  5794   006F4E  5016               	movf	(___flmul@b+3)^0,w,c
  5795   006F50  0B80               	andlw	128
  5796   006F52  6E1F               	movwf	___flmul@sign^0,c
  5797   006F54  5016               	movf	(___flmul@b+3)^0,w,c
  5798   006F56  2416               	addwf	(___flmul@b+3)^0,w,c
  5799   006F58  6E25               	movwf	___flmul@bexp^0,c
  5800   006F5A  AE15               	btfss	(___flmul@b+2)^0,7,c
  5801   006F5C  EFB2  F037         	goto	u2511
  5802   006F60  EFB4  F037         	goto	u2510
  5803   006F64                     u2511:
  5804   006F64  EFB5  F037         	goto	l2679
  5805   006F68                     u2510:
  5806   006F68  8025               	bsf	___flmul@bexp^0,0,c
  5807   006F6A                     l2679:
  5808   006F6A  5025               	movf	___flmul@bexp^0,w,c
  5809   006F6C  B4D8               	btfsc	status,2,c
  5810   006F6E  EFBB  F037         	goto	u2521
  5811   006F72  EFBD  F037         	goto	u2520
  5812   006F76                     u2521:
  5813   006F76  EFD0  F037         	goto	l2687
  5814   006F7A                     u2520:
  5815   006F7A  2825               	incf	___flmul@bexp^0,w,c
  5816   006F7C  A4D8               	btfss	status,2,c
  5817   006F7E  EFC3  F037         	goto	u2531
  5818   006F82  EFC5  F037         	goto	u2530
  5819   006F86                     u2531:
  5820   006F86  EFCD  F037         	goto	l2685
  5821   006F8A                     u2530:
  5822   006F8A  0E00               	movlw	0
  5823   006F8C  6E13               	movwf	___flmul@b^0,c
  5824   006F8E  0E00               	movlw	0
  5825   006F90  6E14               	movwf	(___flmul@b+1)^0,c
  5826   006F92  0E00               	movlw	0
  5827   006F94  6E15               	movwf	(___flmul@b+2)^0,c
  5828   006F96  0E00               	movlw	0
  5829   006F98  6E16               	movwf	(___flmul@b+3)^0,c
  5830   006F9A                     l2685:
  5831   006F9A  8E15               	bsf	(___flmul@b+2)^0,7,c
  5832   006F9C  EFD8  F037         	goto	l2689
  5833   006FA0                     l2687:
  5834   006FA0  0E00               	movlw	0
  5835   006FA2  6E13               	movwf	___flmul@b^0,c
  5836   006FA4  0E00               	movlw	0
  5837   006FA6  6E14               	movwf	(___flmul@b+1)^0,c
  5838   006FA8  0E00               	movlw	0
  5839   006FAA  6E15               	movwf	(___flmul@b+2)^0,c
  5840   006FAC  0E00               	movlw	0
  5841   006FAE  6E16               	movwf	(___flmul@b+3)^0,c
  5842   006FB0                     l2689:
  5843   006FB0  501A               	movf	(___flmul@a+3)^0,w,c
  5844   006FB2  0B80               	andlw	128
  5845   006FB4  1A1F               	xorwf	___flmul@sign^0,f,c
  5846   006FB6  501A               	movf	(___flmul@a+3)^0,w,c
  5847   006FB8  241A               	addwf	(___flmul@a+3)^0,w,c
  5848   006FBA  6E24               	movwf	___flmul@aexp^0,c
  5849   006FBC  AE19               	btfss	(___flmul@a+2)^0,7,c
  5850   006FBE  EFE3  F037         	goto	u2541
  5851   006FC2  EFE5  F037         	goto	u2540
  5852   006FC6                     u2541:
  5853   006FC6  EFE6  F037         	goto	l2697
  5854   006FCA                     u2540:
  5855   006FCA  8024               	bsf	___flmul@aexp^0,0,c
  5856   006FCC                     l2697:
  5857   006FCC  5024               	movf	___flmul@aexp^0,w,c
  5858   006FCE  B4D8               	btfsc	status,2,c
  5859   006FD0  EFEC  F037         	goto	u2551
  5860   006FD4  EFEE  F037         	goto	u2550
  5861   006FD8                     u2551:
  5862   006FD8  EF01  F038         	goto	l2705
  5863   006FDC                     u2550:
  5864   006FDC  2824               	incf	___flmul@aexp^0,w,c
  5865   006FDE  A4D8               	btfss	status,2,c
  5866   006FE0  EFF4  F037         	goto	u2561
  5867   006FE4  EFF6  F037         	goto	u2560
  5868   006FE8                     u2561:
  5869   006FE8  EFFE  F037         	goto	l2703
  5870   006FEC                     u2560:
  5871   006FEC  0E00               	movlw	0
  5872   006FEE  6E17               	movwf	___flmul@a^0,c
  5873   006FF0  0E00               	movlw	0
  5874   006FF2  6E18               	movwf	(___flmul@a+1)^0,c
  5875   006FF4  0E00               	movlw	0
  5876   006FF6  6E19               	movwf	(___flmul@a+2)^0,c
  5877   006FF8  0E00               	movlw	0
  5878   006FFA  6E1A               	movwf	(___flmul@a+3)^0,c
  5879   006FFC                     l2703:
  5880   006FFC  8E19               	bsf	(___flmul@a+2)^0,7,c
  5881   006FFE  EF09  F038         	goto	l794
  5882   007002                     l2705:
  5883   007002  0E00               	movlw	0
  5884   007004  6E17               	movwf	___flmul@a^0,c
  5885   007006  0E00               	movlw	0
  5886   007008  6E18               	movwf	(___flmul@a+1)^0,c
  5887   00700A  0E00               	movlw	0
  5888   00700C  6E19               	movwf	(___flmul@a+2)^0,c
  5889   00700E  0E00               	movlw	0
  5890   007010  6E1A               	movwf	(___flmul@a+3)^0,c
  5891   007012                     l794:
  5892   007012  5024               	movf	___flmul@aexp^0,w,c
  5893   007014  B4D8               	btfsc	status,2,c
  5894   007016  EF0F  F038         	goto	u2571
  5895   00701A  EF11  F038         	goto	u2570
  5896   00701E                     u2571:
  5897   00701E  EF19  F038         	goto	l2709
  5898   007022                     u2570:
  5899   007022  5025               	movf	___flmul@bexp^0,w,c
  5900   007024  A4D8               	btfss	status,2,c
  5901   007026  EF17  F038         	goto	u2581
  5902   00702A  EF19  F038         	goto	u2580
  5903   00702E                     u2581:
  5904   00702E  EF23  F038         	goto	l2713
  5905   007032                     u2580:
  5906   007032                     l2709:
  5907   007032  0E00               	movlw	0
  5908   007034  6E13               	movwf	?___flmul^0,c
  5909   007036  0E00               	movlw	0
  5910   007038  6E14               	movwf	(?___flmul+1)^0,c
  5911   00703A  0E00               	movlw	0
  5912   00703C  6E15               	movwf	(?___flmul+2)^0,c
  5913   00703E  0E00               	movlw	0
  5914   007040  6E16               	movwf	(?___flmul+3)^0,c
  5915   007042  EFCB  F039         	goto	l798
  5916   007046                     l2713:
  5917   007046  5019               	movf	(___flmul@a+2)^0,w,c
  5918   007048  0213               	mulwf	___flmul@b^0,c
  5919   00704A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5920   007050  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5921   007056  502A               	movf	___flmul@temp^0,w,c
  5922   007058  6E20               	movwf	___flmul@grs^0,c
  5923   00705A  6A21               	clrf	(___flmul@grs+1)^0,c
  5924   00705C  6A22               	clrf	(___flmul@grs+2)^0,c
  5925   00705E  6A23               	clrf	(___flmul@grs+3)^0,c
  5926   007060  502B               	movf	(___flmul@temp+1)^0,w,c
  5927   007062  6E26               	movwf	___flmul@prod^0,c
  5928   007064  6A27               	clrf	(___flmul@prod+1)^0,c
  5929   007066  6A28               	clrf	(___flmul@prod+2)^0,c
  5930   007068  6A29               	clrf	(___flmul@prod+3)^0,c
  5931   00706A  5018               	movf	(___flmul@a+1)^0,w,c
  5932   00706C  0214               	mulwf	(___flmul@b+1)^0,c
  5933   00706E  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5934   007074  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5935   00707A  502A               	movf	___flmul@temp^0,w,c
  5936   00707C  2620               	addwf	___flmul@grs^0,f,c
  5937   00707E  0E00               	movlw	0
  5938   007080  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5939   007082  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5940   007084  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5941   007086  502B               	movf	(___flmul@temp+1)^0,w,c
  5942   007088  2626               	addwf	___flmul@prod^0,f,c
  5943   00708A  0E00               	movlw	0
  5944   00708C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5945   00708E  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5946   007090  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5947   007092  5017               	movf	___flmul@a^0,w,c
  5948   007094  0215               	mulwf	(___flmul@b+2)^0,c
  5949   007096  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5950   00709C  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5951   0070A2  502A               	movf	___flmul@temp^0,w,c
  5952   0070A4  2620               	addwf	___flmul@grs^0,f,c
  5953   0070A6  0E00               	movlw	0
  5954   0070A8  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5955   0070AA  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5956   0070AC  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5957   0070AE  502B               	movf	(___flmul@temp+1)^0,w,c
  5958   0070B0  2626               	addwf	___flmul@prod^0,f,c
  5959   0070B2  0E00               	movlw	0
  5960   0070B4  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5961   0070B6  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5962   0070B8  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5963   0070BA  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  5964   0070BE  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  5965   0070C2  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  5966   0070C6  6A20               	clrf	___flmul@grs^0,c
  5967   0070C8  5017               	movf	___flmul@a^0,w,c
  5968   0070CA  0214               	mulwf	(___flmul@b+1)^0,c
  5969   0070CC  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5970   0070D2  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5971   0070D8  502A               	movf	___flmul@temp^0,w,c
  5972   0070DA  2620               	addwf	___flmul@grs^0,f,c
  5973   0070DC  502B               	movf	(___flmul@temp+1)^0,w,c
  5974   0070DE  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5975   0070E0  0E00               	movlw	0
  5976   0070E2  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5977   0070E4  0E00               	movlw	0
  5978   0070E6  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5979   0070E8  5018               	movf	(___flmul@a+1)^0,w,c
  5980   0070EA  0213               	mulwf	___flmul@b^0,c
  5981   0070EC  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5982   0070F2  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5983   0070F8  502A               	movf	___flmul@temp^0,w,c
  5984   0070FA  2620               	addwf	___flmul@grs^0,f,c
  5985   0070FC  502B               	movf	(___flmul@temp+1)^0,w,c
  5986   0070FE  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5987   007100  0E00               	movlw	0
  5988   007102  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5989   007104  0E00               	movlw	0
  5990   007106  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5991   007108  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  5992   00710C  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  5993   007110  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  5994   007114  6A20               	clrf	___flmul@grs^0,c
  5995   007116  5017               	movf	___flmul@a^0,w,c
  5996   007118  0213               	mulwf	___flmul@b^0,c
  5997   00711A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  5998   007120  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  5999   007126  502A               	movf	___flmul@temp^0,w,c
  6000   007128  2620               	addwf	___flmul@grs^0,f,c
  6001   00712A  502B               	movf	(___flmul@temp+1)^0,w,c
  6002   00712C  2221               	addwfc	(___flmul@grs+1)^0,f,c
  6003   00712E  0E00               	movlw	0
  6004   007130  2222               	addwfc	(___flmul@grs+2)^0,f,c
  6005   007132  0E00               	movlw	0
  6006   007134  2223               	addwfc	(___flmul@grs+3)^0,f,c
  6007   007136  5019               	movf	(___flmul@a+2)^0,w,c
  6008   007138  0214               	mulwf	(___flmul@b+1)^0,c
  6009   00713A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6010   007140  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6011   007146  502A               	movf	___flmul@temp^0,w,c
  6012   007148  2626               	addwf	___flmul@prod^0,f,c
  6013   00714A  502B               	movf	(___flmul@temp+1)^0,w,c
  6014   00714C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6015   00714E  0E00               	movlw	0
  6016   007150  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6017   007152  0E00               	movlw	0
  6018   007154  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6019   007156  5018               	movf	(___flmul@a+1)^0,w,c
  6020   007158  0215               	mulwf	(___flmul@b+2)^0,c
  6021   00715A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6022   007160  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6023   007166  502A               	movf	___flmul@temp^0,w,c
  6024   007168  2626               	addwf	___flmul@prod^0,f,c
  6025   00716A  502B               	movf	(___flmul@temp+1)^0,w,c
  6026   00716C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6027   00716E  0E00               	movlw	0
  6028   007170  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6029   007172  0E00               	movlw	0
  6030   007174  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6031   007176  5019               	movf	(___flmul@a+2)^0,w,c
  6032   007178  0215               	mulwf	(___flmul@b+2)^0,c
  6033   00717A  006F FFCC  F02A    	movff	prodl,___flmul@temp
  6034   007180  006F FFD0  F02B    	movff	prodh,___flmul@temp+1
  6035   007186  502A               	movf	___flmul@temp^0,w,c
  6036   007188  6E1B               	movwf	??___flmul^0,c
  6037   00718A  502B               	movf	(___flmul@temp+1)^0,w,c
  6038   00718C  6E1C               	movwf	(??___flmul+1)^0,c
  6039   00718E  6A1D               	clrf	(??___flmul+2)^0,c
  6040   007190  6A1E               	clrf	(??___flmul+3)^0,c
  6041   007192  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  6042   007196  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  6043   00719A  C01B  F01C         	movff	??___flmul,??___flmul+1
  6044   00719E  6A1B               	clrf	??___flmul^0,c
  6045   0071A0  501B               	movf	??___flmul^0,w,c
  6046   0071A2  2626               	addwf	___flmul@prod^0,f,c
  6047   0071A4  501C               	movf	(??___flmul+1)^0,w,c
  6048   0071A6  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6049   0071A8  501D               	movf	(??___flmul+2)^0,w,c
  6050   0071AA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6051   0071AC  501E               	movf	(??___flmul+3)^0,w,c
  6052   0071AE  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6053   0071B0  C020  F01B         	movff	___flmul@grs,??___flmul
  6054   0071B4  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  6055   0071B8  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  6056   0071BC  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  6057   0071C0  0E19               	movlw	25
  6058   0071C2  EFE8  F038         	goto	u2590
  6059   0071C6                     u2595:
  6060   0071C6  90D8               	bcf	status,0,c
  6061   0071C8  321E               	rrcf	(??___flmul+3)^0,f,c
  6062   0071CA  321D               	rrcf	(??___flmul+2)^0,f,c
  6063   0071CC  321C               	rrcf	(??___flmul+1)^0,f,c
  6064   0071CE  321B               	rrcf	??___flmul^0,f,c
  6065   0071D0                     u2590:
  6066   0071D0  2EE8               	decfsz	wreg,f,c
  6067   0071D2  EFE3  F038         	goto	u2595
  6068   0071D6  501B               	movf	??___flmul^0,w,c
  6069   0071D8  2626               	addwf	___flmul@prod^0,f,c
  6070   0071DA  501C               	movf	(??___flmul+1)^0,w,c
  6071   0071DC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6072   0071DE  501D               	movf	(??___flmul+2)^0,w,c
  6073   0071E0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6074   0071E2  501E               	movf	(??___flmul+3)^0,w,c
  6075   0071E4  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6076   0071E6  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  6077   0071EA  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  6078   0071EE  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  6079   0071F2  6A20               	clrf	___flmul@grs^0,c
  6080   0071F4  5024               	movf	___flmul@aexp^0,w,c
  6081   0071F6  C025  F01B         	movff	___flmul@bexp,??___flmul
  6082   0071FA  6A1C               	clrf	(??___flmul+1)^0,c
  6083   0071FC  261B               	addwf	??___flmul^0,f,c
  6084   0071FE  0E00               	movlw	0
  6085   007200  221C               	addwfc	(??___flmul+1)^0,f,c
  6086   007202  0E82               	movlw	130
  6087   007204  241B               	addwf	??___flmul^0,w,c
  6088   007206  6E2A               	movwf	___flmul@temp^0,c
  6089   007208  0EFF               	movlw	255
  6090   00720A  201C               	addwfc	(??___flmul+1)^0,w,c
  6091   00720C  6E2B               	movwf	(___flmul@temp+1)^0,c
  6092   00720E  EF1E  F039         	goto	l2761
  6093   007212                     l2755:
  6094   007212  90D8               	bcf	status,0,c
  6095   007214  3626               	rlcf	___flmul@prod^0,f,c
  6096   007216  3627               	rlcf	(___flmul@prod+1)^0,f,c
  6097   007218  3628               	rlcf	(___flmul@prod+2)^0,f,c
  6098   00721A  3629               	rlcf	(___flmul@prod+3)^0,f,c
  6099   00721C  AE23               	btfss	(___flmul@grs+3)^0,7,c
  6100   00721E  EF13  F039         	goto	u2601
  6101   007222  EF15  F039         	goto	u2600
  6102   007226                     u2601:
  6103   007226  EF16  F039         	goto	l801
  6104   00722A                     u2600:
  6105   00722A  8026               	bsf	___flmul@prod^0,0,c
  6106   00722C                     l801:
  6107   00722C  90D8               	bcf	status,0,c
  6108   00722E  3620               	rlcf	___flmul@grs^0,f,c
  6109   007230  3621               	rlcf	(___flmul@grs+1)^0,f,c
  6110   007232  3622               	rlcf	(___flmul@grs+2)^0,f,c
  6111   007234  3623               	rlcf	(___flmul@grs+3)^0,f,c
  6112   007236  062A               	decf	___flmul@temp^0,f,c
  6113   007238  A0D8               	btfss	status,0,c
  6114   00723A  062B               	decf	(___flmul@temp+1)^0,f,c
  6115   00723C                     l2761:
  6116   00723C  AE28               	btfss	(___flmul@prod+2)^0,7,c
  6117   00723E  EF23  F039         	goto	u2611
  6118   007242  EF25  F039         	goto	u2610
  6119   007246                     u2611:
  6120   007246  EF09  F039         	goto	l2755
  6121   00724A                     u2610:
  6122   00724A  6A24               	clrf	___flmul@aexp^0,c
  6123   00724C  AE23               	btfss	(___flmul@grs+3)^0,7,c
  6124   00724E  EF2B  F039         	goto	u2621
  6125   007252  EF2D  F039         	goto	u2620
  6126   007256                     u2621:
  6127   007256  EF51  F039         	goto	l803
  6128   00725A                     u2620:
  6129   00725A  0EFF               	movlw	255
  6130   00725C  1420               	andwf	___flmul@grs^0,w,c
  6131   00725E  6E1B               	movwf	??___flmul^0,c
  6132   007260  0EFF               	movlw	255
  6133   007262  1421               	andwf	(___flmul@grs+1)^0,w,c
  6134   007264  6E1C               	movwf	(??___flmul+1)^0,c
  6135   007266  0EFF               	movlw	255
  6136   007268  1422               	andwf	(___flmul@grs+2)^0,w,c
  6137   00726A  6E1D               	movwf	(??___flmul+2)^0,c
  6138   00726C  0E7F               	movlw	127
  6139   00726E  1423               	andwf	(___flmul@grs+3)^0,w,c
  6140   007270  6E1E               	movwf	(??___flmul+3)^0,c
  6141   007272  501B               	movf	??___flmul^0,w,c
  6142   007274  101C               	iorwf	(??___flmul+1)^0,w,c
  6143   007276  101D               	iorwf	(??___flmul+2)^0,w,c
  6144   007278  101E               	iorwf	(??___flmul+3)^0,w,c
  6145   00727A  B4D8               	btfsc	status,2,c
  6146   00727C  EF42  F039         	goto	u2631
  6147   007280  EF44  F039         	goto	u2630
  6148   007284                     u2631:
  6149   007284  EF48  F039         	goto	l804
  6150   007288                     u2630:
  6151   007288                     l2765:
  6152   007288  0E01               	movlw	1
  6153   00728A  6E24               	movwf	___flmul@aexp^0,c
  6154   00728C  EF51  F039         	goto	l803
  6155   007290                     l804:
  6156   007290  A026               	btfss	___flmul@prod^0,0,c
  6157   007292  EF4D  F039         	goto	u2641
  6158   007296  EF4F  F039         	goto	u2640
  6159   00729A                     u2641:
  6160   00729A  EF51  F039         	goto	l803
  6161   00729E                     u2640:
  6162   00729E  EF44  F039         	goto	l2765
  6163   0072A2                     l803:
  6164   0072A2  5024               	movf	___flmul@aexp^0,w,c
  6165   0072A4  B4D8               	btfsc	status,2,c
  6166   0072A6  EF57  F039         	goto	u2651
  6167   0072AA  EF59  F039         	goto	u2650
  6168   0072AE                     u2651:
  6169   0072AE  EF7D  F039         	goto	l2777
  6170   0072B2                     u2650:
  6171   0072B2  0E01               	movlw	1
  6172   0072B4  2626               	addwf	___flmul@prod^0,f,c
  6173   0072B6  0E00               	movlw	0
  6174   0072B8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6175   0072BA  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6176   0072BC  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6177   0072BE  A029               	btfss	(___flmul@prod+3)^0,0,c
  6178   0072C0  EF64  F039         	goto	u2661
  6179   0072C4  EF66  F039         	goto	u2660
  6180   0072C8                     u2661:
  6181   0072C8  EF7D  F039         	goto	l2777
  6182   0072CC                     u2660:
  6183   0072CC  C026  F01B         	movff	___flmul@prod,??___flmul
  6184   0072D0  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  6185   0072D4  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  6186   0072D8  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  6187   0072DC  341E               	rlcf	(??___flmul+3)^0,w,c
  6188   0072DE  321E               	rrcf	(??___flmul+3)^0,f,c
  6189   0072E0  321D               	rrcf	(??___flmul+2)^0,f,c
  6190   0072E2  321C               	rrcf	(??___flmul+1)^0,f,c
  6191   0072E4  321B               	rrcf	??___flmul^0,f,c
  6192   0072E6  C01B  F026         	movff	??___flmul,___flmul@prod
  6193   0072EA  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  6194   0072EE  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  6195   0072F2  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  6196   0072F6  4A2A               	infsnz	___flmul@temp^0,f,c
  6197   0072F8  2A2B               	incf	(___flmul@temp+1)^0,f,c
  6198   0072FA                     l2777:
  6199   0072FA  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6200   0072FC  EF88  F039         	goto	u2671
  6201   007300  502B               	movf	(___flmul@temp+1)^0,w,c
  6202   007302  E108               	bnz	u2670
  6203   007304  282A               	incf	___flmul@temp^0,w,c
  6204   007306  A0D8               	btfss	status,0,c
  6205   007308  EF88  F039         	goto	u2671
  6206   00730C  EF8A  F039         	goto	u2670
  6207   007310                     u2671:
  6208   007310  EF94  F039         	goto	l2781
  6209   007314                     u2670:
  6210   007314  0E00               	movlw	0
  6211   007316  6E26               	movwf	___flmul@prod^0,c
  6212   007318  0E00               	movlw	0
  6213   00731A  6E27               	movwf	(___flmul@prod+1)^0,c
  6214   00731C  0E80               	movlw	128
  6215   00731E  6E28               	movwf	(___flmul@prod+2)^0,c
  6216   007320  0E7F               	movlw	127
  6217   007322  6E29               	movwf	(___flmul@prod+3)^0,c
  6218   007324  EFC1  F039         	goto	l2795
  6219   007328                     l2781:
  6220   007328  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6221   00732A  EFA1  F039         	goto	u2680
  6222   00732E  502B               	movf	(___flmul@temp+1)^0,w,c
  6223   007330  E106               	bnz	u2681
  6224   007332  042A               	decf	___flmul@temp^0,w,c
  6225   007334  B0D8               	btfsc	status,0,c
  6226   007336  EF9F  F039         	goto	u2681
  6227   00733A  EFA1  F039         	goto	u2680
  6228   00733E                     u2681:
  6229   00733E  EFAC  F039         	goto	l811
  6230   007342                     u2680:
  6231   007342  0E00               	movlw	0
  6232   007344  6E26               	movwf	___flmul@prod^0,c
  6233   007346  0E00               	movlw	0
  6234   007348  6E27               	movwf	(___flmul@prod+1)^0,c
  6235   00734A  0E00               	movlw	0
  6236   00734C  6E28               	movwf	(___flmul@prod+2)^0,c
  6237   00734E  0E00               	movlw	0
  6238   007350  6E29               	movwf	(___flmul@prod+3)^0,c
  6239   007352  6A1F               	clrf	___flmul@sign^0,c
  6240   007354  EFC1  F039         	goto	l2795
  6241   007358                     l811:
  6242   007358  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  6243   00735C  0EFF               	movlw	255
  6244   00735E  1626               	andwf	___flmul@prod^0,f,c
  6245   007360  0EFF               	movlw	255
  6246   007362  1627               	andwf	(___flmul@prod+1)^0,f,c
  6247   007364  0E7F               	movlw	127
  6248   007366  1628               	andwf	(___flmul@prod+2)^0,f,c
  6249   007368  0E00               	movlw	0
  6250   00736A  1629               	andwf	(___flmul@prod+3)^0,f,c
  6251   00736C  A025               	btfss	___flmul@bexp^0,0,c
  6252   00736E  EFBB  F039         	goto	u2691
  6253   007372  EFBD  F039         	goto	u2690
  6254   007376                     u2691:
  6255   007376  EFBE  F039         	goto	l2793
  6256   00737A                     u2690:
  6257   00737A  8E28               	bsf	(___flmul@prod+2)^0,7,c
  6258   00737C                     l2793:
  6259   00737C  90D8               	bcf	status,0,c
  6260   00737E  3025               	rrcf	___flmul@bexp^0,w,c
  6261   007380  6E29               	movwf	(___flmul@prod+3)^0,c
  6262   007382                     l2795:
  6263   007382  501F               	movf	___flmul@sign^0,w,c
  6264   007384  1229               	iorwf	(___flmul@prod+3)^0,f,c
  6265   007386  C026  F013         	movff	___flmul@prod,?___flmul
  6266   00738A  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  6267   00738E  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  6268   007392  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  6269   007396                     l798:
  6270   007396  0012               	return		;funcret
  6271   007398                     __end_of___flmul:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function ___flge *****************
  6275 ;; Defined at:
  6276 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  ff1             4   43[COMRAM] unsigned char 
  6279 ;;  ff2             4   47[COMRAM] unsigned char 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;		None               void
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6291 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6293 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6294 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6295 ;;Total ram usage:       12 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 2
  6298 ;; This function calls:
  6299 ;;		Nothing
  6300 ;; This function is called by:
  6301 ;;		_efgtoa
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text21
  6306   007F32                     __ptext21:
  6307                           	callstack 0
  6308   007F32                     ___flge:
  6309                           	callstack 24
  6310   007F32  0E00               	movlw	0
  6311   007F34  142C               	andwf	___flge@ff1^0,w,c
  6312   007F36  6E34               	movwf	??___flge^0,c
  6313   007F38  0E00               	movlw	0
  6314   007F3A  142D               	andwf	(___flge@ff1+1)^0,w,c
  6315   007F3C  6E35               	movwf	(??___flge+1)^0,c
  6316   007F3E  0E80               	movlw	128
  6317   007F40  142E               	andwf	(___flge@ff1+2)^0,w,c
  6318   007F42  6E36               	movwf	(??___flge+2)^0,c
  6319   007F44  0E7F               	movlw	127
  6320   007F46  142F               	andwf	(___flge@ff1+3)^0,w,c
  6321   007F48  6E37               	movwf	(??___flge+3)^0,c
  6322   007F4A  5034               	movf	??___flge^0,w,c
  6323   007F4C  1035               	iorwf	(??___flge+1)^0,w,c
  6324   007F4E  1036               	iorwf	(??___flge+2)^0,w,c
  6325   007F50  1037               	iorwf	(??___flge+3)^0,w,c
  6326   007F52  A4D8               	btfss	status,2,c
  6327   007F54  EFAE  F03F         	goto	u2731
  6328   007F58  EFB0  F03F         	goto	u2730
  6329   007F5C                     u2731:
  6330   007F5C  EFB8  F03F         	goto	l2827
  6331   007F60                     u2730:
  6332   007F60  0E00               	movlw	0
  6333   007F62  6E2C               	movwf	___flge@ff1^0,c
  6334   007F64  0E00               	movlw	0
  6335   007F66  6E2D               	movwf	(___flge@ff1+1)^0,c
  6336   007F68  0E00               	movlw	0
  6337   007F6A  6E2E               	movwf	(___flge@ff1+2)^0,c
  6338   007F6C  0E00               	movlw	0
  6339   007F6E  6E2F               	movwf	(___flge@ff1+3)^0,c
  6340   007F70                     l2827:
  6341   007F70  0E00               	movlw	0
  6342   007F72  1430               	andwf	___flge@ff2^0,w,c
  6343   007F74  6E34               	movwf	??___flge^0,c
  6344   007F76  0E00               	movlw	0
  6345   007F78  1431               	andwf	(___flge@ff2+1)^0,w,c
  6346   007F7A  6E35               	movwf	(??___flge+1)^0,c
  6347   007F7C  0E80               	movlw	128
  6348   007F7E  1432               	andwf	(___flge@ff2+2)^0,w,c
  6349   007F80  6E36               	movwf	(??___flge+2)^0,c
  6350   007F82  0E7F               	movlw	127
  6351   007F84  1433               	andwf	(___flge@ff2+3)^0,w,c
  6352   007F86  6E37               	movwf	(??___flge+3)^0,c
  6353   007F88  5034               	movf	??___flge^0,w,c
  6354   007F8A  1035               	iorwf	(??___flge+1)^0,w,c
  6355   007F8C  1036               	iorwf	(??___flge+2)^0,w,c
  6356   007F8E  1037               	iorwf	(??___flge+3)^0,w,c
  6357   007F90  A4D8               	btfss	status,2,c
  6358   007F92  EFCD  F03F         	goto	u2741
  6359   007F96  EFCF  F03F         	goto	u2740
  6360   007F9A                     u2741:
  6361   007F9A  EFD7  F03F         	goto	l2831
  6362   007F9E                     u2740:
  6363   007F9E  0E00               	movlw	0
  6364   007FA0  6E30               	movwf	___flge@ff2^0,c
  6365   007FA2  0E00               	movlw	0
  6366   007FA4  6E31               	movwf	(___flge@ff2+1)^0,c
  6367   007FA6  0E00               	movlw	0
  6368   007FA8  6E32               	movwf	(___flge@ff2+2)^0,c
  6369   007FAA  0E00               	movlw	0
  6370   007FAC  6E33               	movwf	(___flge@ff2+3)^0,c
  6371   007FAE                     l2831:
  6372   007FAE  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  6373   007FB0  EFDC  F03F         	goto	u2751
  6374   007FB4  EFDE  F03F         	goto	u2750
  6375   007FB8                     u2751:
  6376   007FB8  EFE7  F03F         	goto	l2835
  6377   007FBC                     u2750:
  6378   007FBC  6C2C               	negf	___flge@ff1^0,c
  6379   007FBE  1E2D               	comf	(___flge@ff1+1)^0,f,c
  6380   007FC0  B0D8               	btfsc	status,0,c
  6381   007FC2  2A2D               	incf	(___flge@ff1+1)^0,f,c
  6382   007FC4  1E2E               	comf	(___flge@ff1+2)^0,f,c
  6383   007FC6  B0D8               	btfsc	status,0,c
  6384   007FC8  2A2E               	incf	(___flge@ff1+2)^0,f,c
  6385   007FCA  0E80               	movlw	128
  6386   007FCC  562F               	subfwb	(___flge@ff1+3)^0,f,c
  6387   007FCE                     l2835:
  6388   007FCE  AE33               	btfss	(___flge@ff2+3)^0,7,c
  6389   007FD0  EFEC  F03F         	goto	u2761
  6390   007FD4  EFEE  F03F         	goto	u2760
  6391   007FD8                     u2761:
  6392   007FD8  EFF7  F03F         	goto	l445
  6393   007FDC                     u2760:
  6394   007FDC  6C30               	negf	___flge@ff2^0,c
  6395   007FDE  1E31               	comf	(___flge@ff2+1)^0,f,c
  6396   007FE0  B0D8               	btfsc	status,0,c
  6397   007FE2  2A31               	incf	(___flge@ff2+1)^0,f,c
  6398   007FE4  1E32               	comf	(___flge@ff2+2)^0,f,c
  6399   007FE6  B0D8               	btfsc	status,0,c
  6400   007FE8  2A32               	incf	(___flge@ff2+2)^0,f,c
  6401   007FEA  0E80               	movlw	128
  6402   007FEC  5633               	subfwb	(___flge@ff2+3)^0,f,c
  6403   007FEE                     l445:
  6404   007FEE  0E00               	movlw	0
  6405   007FF0  1A2C               	xorwf	___flge@ff1^0,f,c
  6406   007FF2  0E00               	movlw	0
  6407   007FF4  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  6408   007FF6  0E00               	movlw	0
  6409   007FF8  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  6410   007FFA  0E80               	movlw	128
  6411   007FFC  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  6412   007FFE  0E00               	movlw	0
  6413   008000  1A30               	xorwf	___flge@ff2^0,f,c
  6414   008002  0E00               	movlw	0
  6415   008004  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  6416   008006  0E00               	movlw	0
  6417   008008  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  6418   00800A  0E80               	movlw	128
  6419   00800C  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  6420   00800E  5030               	movf	___flge@ff2^0,w,c
  6421   008010  5C2C               	subwf	___flge@ff1^0,w,c
  6422   008012  5031               	movf	(___flge@ff2+1)^0,w,c
  6423   008014  582D               	subwfb	(___flge@ff1+1)^0,w,c
  6424   008016  5032               	movf	(___flge@ff2+2)^0,w,c
  6425   008018  582E               	subwfb	(___flge@ff1+2)^0,w,c
  6426   00801A  5033               	movf	(___flge@ff2+3)^0,w,c
  6427   00801C  582F               	subwfb	(___flge@ff1+3)^0,w,c
  6428   00801E  B0D8               	btfsc	status,0,c
  6429   008020  EF14  F040         	goto	u2771
  6430   008024  EF16  F040         	goto	u2770
  6431   008028                     u2771:
  6432   008028  EF19  F040         	goto	l2841
  6433   00802C                     u2770:
  6434   00802C  90D8               	bcf	status,0,c
  6435   00802E  EF1A  F040         	goto	l450
  6436   008032                     l2841:
  6437   008032  80D8               	bsf	status,0,c
  6438   008034                     l450:
  6439   008034  0012               	return		;funcret
  6440   008036                     __end_of___flge:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function ___fleq *****************
  6444 ;; Defined at:
  6445 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;  ff1             4    4[COMRAM] unsigned char 
  6448 ;;  ff2             4    8[COMRAM] unsigned char 
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;		None               void
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6460 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6462 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6463 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6464 ;;Total ram usage:       12 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 2
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_efgtoa
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text22
  6475   008298                     __ptext22:
  6476                           	callstack 0
  6477   008298                     ___fleq:
  6478                           	callstack 24
  6479   008298  0E00               	movlw	0
  6480   00829A  1405               	andwf	___fleq@ff1^0,w,c
  6481   00829C  6E0D               	movwf	??___fleq^0,c
  6482   00829E  0E00               	movlw	0
  6483   0082A0  1406               	andwf	(___fleq@ff1+1)^0,w,c
  6484   0082A2  6E0E               	movwf	(??___fleq+1)^0,c
  6485   0082A4  0E80               	movlw	128
  6486   0082A6  1407               	andwf	(___fleq@ff1+2)^0,w,c
  6487   0082A8  6E0F               	movwf	(??___fleq+2)^0,c
  6488   0082AA  0E7F               	movlw	127
  6489   0082AC  1408               	andwf	(___fleq@ff1+3)^0,w,c
  6490   0082AE  6E10               	movwf	(??___fleq+3)^0,c
  6491   0082B0  500D               	movf	??___fleq^0,w,c
  6492   0082B2  100E               	iorwf	(??___fleq+1)^0,w,c
  6493   0082B4  100F               	iorwf	(??___fleq+2)^0,w,c
  6494   0082B6  1010               	iorwf	(??___fleq+3)^0,w,c
  6495   0082B8  A4D8               	btfss	status,2,c
  6496   0082BA  EF61  F041         	goto	u2701
  6497   0082BE  EF63  F041         	goto	u2700
  6498   0082C2                     u2701:
  6499   0082C2  EF6B  F041         	goto	l2811
  6500   0082C6                     u2700:
  6501   0082C6  0E00               	movlw	0
  6502   0082C8  6E05               	movwf	___fleq@ff1^0,c
  6503   0082CA  0E00               	movlw	0
  6504   0082CC  6E06               	movwf	(___fleq@ff1+1)^0,c
  6505   0082CE  0E00               	movlw	0
  6506   0082D0  6E07               	movwf	(___fleq@ff1+2)^0,c
  6507   0082D2  0E00               	movlw	0
  6508   0082D4  6E08               	movwf	(___fleq@ff1+3)^0,c
  6509   0082D6                     l2811:
  6510   0082D6  0E00               	movlw	0
  6511   0082D8  1409               	andwf	___fleq@ff2^0,w,c
  6512   0082DA  6E0D               	movwf	??___fleq^0,c
  6513   0082DC  0E00               	movlw	0
  6514   0082DE  140A               	andwf	(___fleq@ff2+1)^0,w,c
  6515   0082E0  6E0E               	movwf	(??___fleq+1)^0,c
  6516   0082E2  0E80               	movlw	128
  6517   0082E4  140B               	andwf	(___fleq@ff2+2)^0,w,c
  6518   0082E6  6E0F               	movwf	(??___fleq+2)^0,c
  6519   0082E8  0E7F               	movlw	127
  6520   0082EA  140C               	andwf	(___fleq@ff2+3)^0,w,c
  6521   0082EC  6E10               	movwf	(??___fleq+3)^0,c
  6522   0082EE  500D               	movf	??___fleq^0,w,c
  6523   0082F0  100E               	iorwf	(??___fleq+1)^0,w,c
  6524   0082F2  100F               	iorwf	(??___fleq+2)^0,w,c
  6525   0082F4  1010               	iorwf	(??___fleq+3)^0,w,c
  6526   0082F6  A4D8               	btfss	status,2,c
  6527   0082F8  EF80  F041         	goto	u2711
  6528   0082FC  EF82  F041         	goto	u2710
  6529   008300                     u2711:
  6530   008300  EF8A  F041         	goto	l2815
  6531   008304                     u2710:
  6532   008304  0E00               	movlw	0
  6533   008306  6E09               	movwf	___fleq@ff2^0,c
  6534   008308  0E00               	movlw	0
  6535   00830A  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6536   00830C  0E00               	movlw	0
  6537   00830E  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6538   008310  0E00               	movlw	0
  6539   008312  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6540   008314                     l2815:
  6541   008314  5009               	movf	___fleq@ff2^0,w,c
  6542   008316  1805               	xorwf	___fleq@ff1^0,w,c
  6543   008318  E10F               	bnz	u2720
  6544   00831A  500A               	movf	(___fleq@ff2+1)^0,w,c
  6545   00831C  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6546   00831E  E10C               	bnz	u2720
  6547   008320  500B               	movf	(___fleq@ff2+2)^0,w,c
  6548   008322  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6549   008324  E109               	bnz	u2720
  6550   008326  500C               	movf	(___fleq@ff2+3)^0,w,c
  6551   008328  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6552   00832A  B4D8               	btfsc	status,2,c
  6553   00832C  EF9A  F041         	goto	u2721
  6554   008330  EF9C  F041         	goto	u2720
  6555   008334                     u2721:
  6556   008334  EF9F  F041         	goto	l2819
  6557   008338                     u2720:
  6558   008338  90D8               	bcf	status,0,c
  6559   00833A  EFA0  F041         	goto	l439
  6560   00833E                     l2819:
  6561   00833E  80D8               	bsf	status,0,c
  6562   008340                     l439:
  6563   008340  0012               	return		;funcret
  6564   008342                     __end_of___fleq:
  6565                           	callstack 0
  6566                           
  6567 ;; *************** function ___fldiv *****************
  6568 ;; Defined at:
  6569 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  b               4    4[COMRAM] unsigned char 
  6572 ;;  a               4    8[COMRAM] unsigned char 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  grs             4   23[COMRAM] unsigned long 
  6575 ;;  rem             4   16[COMRAM] unsigned long 
  6576 ;;  new_exp         2   21[COMRAM] short 
  6577 ;;  aexp            1   28[COMRAM] unsigned char 
  6578 ;;  bexp            1   27[COMRAM] unsigned char 
  6579 ;;  sign            1   20[COMRAM] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  4    4[COMRAM] unsigned char 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6589 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6590 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6591 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6592 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6593 ;;Total ram usage:       25 bytes
  6594 ;; Hardware stack levels used: 1
  6595 ;; Hardware stack levels required when called: 2
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_efgtoa
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text23
  6604   007398                     __ptext23:
  6605                           	callstack 0
  6606   007398                     ___fldiv:
  6607                           	callstack 24
  6608   007398  5008               	movf	(___fldiv@b+3)^0,w,c
  6609   00739A  0B80               	andlw	128
  6610   00739C  6E15               	movwf	___fldiv@sign^0,c
  6611   00739E  5008               	movf	(___fldiv@b+3)^0,w,c
  6612   0073A0  2408               	addwf	(___fldiv@b+3)^0,w,c
  6613   0073A2  6E1C               	movwf	___fldiv@bexp^0,c
  6614   0073A4  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6615   0073A6  EFD7  F039         	goto	u2281
  6616   0073AA  EFD9  F039         	goto	u2280
  6617   0073AE                     u2281:
  6618   0073AE  EFDA  F039         	goto	l2543
  6619   0073B2                     u2280:
  6620   0073B2  801C               	bsf	___fldiv@bexp^0,0,c
  6621   0073B4                     l2543:
  6622   0073B4  501C               	movf	___fldiv@bexp^0,w,c
  6623   0073B6  B4D8               	btfsc	status,2,c
  6624   0073B8  EFE0  F039         	goto	u2291
  6625   0073BC  EFE2  F039         	goto	u2290
  6626   0073C0                     u2291:
  6627   0073C0  EFF6  F039         	goto	l2553
  6628   0073C4                     u2290:
  6629   0073C4  281C               	incf	___fldiv@bexp^0,w,c
  6630   0073C6  A4D8               	btfss	status,2,c
  6631   0073C8  EFE8  F039         	goto	u2301
  6632   0073CC  EFEA  F039         	goto	u2300
  6633   0073D0                     u2301:
  6634   0073D0  EFF2  F039         	goto	l2549
  6635   0073D4                     u2300:
  6636   0073D4  0E00               	movlw	0
  6637   0073D6  6E05               	movwf	___fldiv@b^0,c
  6638   0073D8  0E00               	movlw	0
  6639   0073DA  6E06               	movwf	(___fldiv@b+1)^0,c
  6640   0073DC  0E00               	movlw	0
  6641   0073DE  6E07               	movwf	(___fldiv@b+2)^0,c
  6642   0073E0  0E00               	movlw	0
  6643   0073E2  6E08               	movwf	(___fldiv@b+3)^0,c
  6644   0073E4                     l2549:
  6645   0073E4  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6646   0073E6  6A08               	clrf	(___fldiv@b+3)^0,c
  6647   0073E8  EFFE  F039         	goto	l2555
  6648   0073EC                     l2553:
  6649   0073EC  0E00               	movlw	0
  6650   0073EE  6E05               	movwf	___fldiv@b^0,c
  6651   0073F0  0E00               	movlw	0
  6652   0073F2  6E06               	movwf	(___fldiv@b+1)^0,c
  6653   0073F4  0E00               	movlw	0
  6654   0073F6  6E07               	movwf	(___fldiv@b+2)^0,c
  6655   0073F8  0E00               	movlw	0
  6656   0073FA  6E08               	movwf	(___fldiv@b+3)^0,c
  6657   0073FC                     l2555:
  6658   0073FC  500C               	movf	(___fldiv@a+3)^0,w,c
  6659   0073FE  0B80               	andlw	128
  6660   007400  1A15               	xorwf	___fldiv@sign^0,f,c
  6661   007402  500C               	movf	(___fldiv@a+3)^0,w,c
  6662   007404  240C               	addwf	(___fldiv@a+3)^0,w,c
  6663   007406  6E1D               	movwf	___fldiv@aexp^0,c
  6664   007408  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6665   00740A  EF09  F03A         	goto	u2311
  6666   00740E  EF0B  F03A         	goto	u2310
  6667   007412                     u2311:
  6668   007412  EF0C  F03A         	goto	l2563
  6669   007416                     u2310:
  6670   007416  801D               	bsf	___fldiv@aexp^0,0,c
  6671   007418                     l2563:
  6672   007418  501D               	movf	___fldiv@aexp^0,w,c
  6673   00741A  B4D8               	btfsc	status,2,c
  6674   00741C  EF12  F03A         	goto	u2321
  6675   007420  EF14  F03A         	goto	u2320
  6676   007424                     u2321:
  6677   007424  EF28  F03A         	goto	l2573
  6678   007428                     u2320:
  6679   007428  281D               	incf	___fldiv@aexp^0,w,c
  6680   00742A  A4D8               	btfss	status,2,c
  6681   00742C  EF1A  F03A         	goto	u2331
  6682   007430  EF1C  F03A         	goto	u2330
  6683   007434                     u2331:
  6684   007434  EF24  F03A         	goto	l2569
  6685   007438                     u2330:
  6686   007438  0E00               	movlw	0
  6687   00743A  6E09               	movwf	___fldiv@a^0,c
  6688   00743C  0E00               	movlw	0
  6689   00743E  6E0A               	movwf	(___fldiv@a+1)^0,c
  6690   007440  0E00               	movlw	0
  6691   007442  6E0B               	movwf	(___fldiv@a+2)^0,c
  6692   007444  0E00               	movlw	0
  6693   007446  6E0C               	movwf	(___fldiv@a+3)^0,c
  6694   007448                     l2569:
  6695   007448  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6696   00744A  6A0C               	clrf	(___fldiv@a+3)^0,c
  6697   00744C  EF30  F03A         	goto	l2575
  6698   007450                     l2573:
  6699   007450  0E00               	movlw	0
  6700   007452  6E09               	movwf	___fldiv@a^0,c
  6701   007454  0E00               	movlw	0
  6702   007456  6E0A               	movwf	(___fldiv@a+1)^0,c
  6703   007458  0E00               	movlw	0
  6704   00745A  6E0B               	movwf	(___fldiv@a+2)^0,c
  6705   00745C  0E00               	movlw	0
  6706   00745E  6E0C               	movwf	(___fldiv@a+3)^0,c
  6707   007460                     l2575:
  6708   007460  5009               	movf	___fldiv@a^0,w,c
  6709   007462  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6710   007464  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6711   007466  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6712   007468  A4D8               	btfss	status,2,c
  6713   00746A  EF39  F03A         	goto	u2341
  6714   00746E  EF3B  F03A         	goto	u2340
  6715   007472                     u2341:
  6716   007472  EF53  F03A         	goto	l2587
  6717   007476                     u2340:
  6718   007476  0E00               	movlw	0
  6719   007478  6E05               	movwf	___fldiv@b^0,c
  6720   00747A  0E00               	movlw	0
  6721   00747C  6E06               	movwf	(___fldiv@b+1)^0,c
  6722   00747E  0E00               	movlw	0
  6723   007480  6E07               	movwf	(___fldiv@b+2)^0,c
  6724   007482  0E00               	movlw	0
  6725   007484  6E08               	movwf	(___fldiv@b+3)^0,c
  6726   007486  0E80               	movlw	128
  6727   007488  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6728   00748A  0E7F               	movlw	127
  6729   00748C  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6730   00748E                     l2581:
  6731   00748E  5015               	movf	___fldiv@sign^0,w,c
  6732   007490  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6733   007492  C005  F005         	movff	___fldiv@b,?___fldiv
  6734   007496  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6735   00749A  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6736   00749E  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6737   0074A2  EF93  F03B         	goto	l762
  6738   0074A6                     l2587:
  6739   0074A6  501C               	movf	___fldiv@bexp^0,w,c
  6740   0074A8  A4D8               	btfss	status,2,c
  6741   0074AA  EF59  F03A         	goto	u2351
  6742   0074AE  EF5B  F03A         	goto	u2350
  6743   0074B2                     u2351:
  6744   0074B2  EF65  F03A         	goto	l2595
  6745   0074B6                     u2350:
  6746   0074B6  0E00               	movlw	0
  6747   0074B8  6E05               	movwf	?___fldiv^0,c
  6748   0074BA  0E00               	movlw	0
  6749   0074BC  6E06               	movwf	(?___fldiv+1)^0,c
  6750   0074BE  0E00               	movlw	0
  6751   0074C0  6E07               	movwf	(?___fldiv+2)^0,c
  6752   0074C2  0E00               	movlw	0
  6753   0074C4  6E08               	movwf	(?___fldiv+3)^0,c
  6754   0074C6  EF93  F03B         	goto	l762
  6755   0074CA                     l2595:
  6756   0074CA  501D               	movf	___fldiv@aexp^0,w,c
  6757   0074CC  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6758   0074D0  6A0E               	clrf	(??___fldiv+1)^0,c
  6759   0074D2  5E0D               	subwf	??___fldiv^0,f,c
  6760   0074D4  0E00               	movlw	0
  6761   0074D6  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6762   0074D8  0E7F               	movlw	127
  6763   0074DA  240D               	addwf	??___fldiv^0,w,c
  6764   0074DC  6E16               	movwf	___fldiv@new_exp^0,c
  6765   0074DE  0E00               	movlw	0
  6766   0074E0  200E               	addwfc	(??___fldiv+1)^0,w,c
  6767   0074E2  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6768   0074E4  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6769   0074E8  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6770   0074EC  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6771   0074F0  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6772   0074F4  0E00               	movlw	0
  6773   0074F6  6E05               	movwf	___fldiv@b^0,c
  6774   0074F8  0E00               	movlw	0
  6775   0074FA  6E06               	movwf	(___fldiv@b+1)^0,c
  6776   0074FC  0E00               	movlw	0
  6777   0074FE  6E07               	movwf	(___fldiv@b+2)^0,c
  6778   007500  0E00               	movlw	0
  6779   007502  6E08               	movwf	(___fldiv@b+3)^0,c
  6780   007504  0E00               	movlw	0
  6781   007506  6E18               	movwf	___fldiv@grs^0,c
  6782   007508  0E00               	movlw	0
  6783   00750A  6E19               	movwf	(___fldiv@grs+1)^0,c
  6784   00750C  0E00               	movlw	0
  6785   00750E  6E1A               	movwf	(___fldiv@grs+2)^0,c
  6786   007510  0E00               	movlw	0
  6787   007512  6E1B               	movwf	(___fldiv@grs+3)^0,c
  6788   007514  6A1D               	clrf	___fldiv@aexp^0,c
  6789   007516  EFC5  F03A         	goto	l764
  6790   00751A                     l2605:
  6791   00751A  501D               	movf	___fldiv@aexp^0,w,c
  6792   00751C  B4D8               	btfsc	status,2,c
  6793   00751E  EF93  F03A         	goto	u2361
  6794   007522  EF95  F03A         	goto	u2360
  6795   007526                     u2361:
  6796   007526  EFAC  F03A         	goto	l2613
  6797   00752A                     u2360:
  6798   00752A  90D8               	bcf	status,0,c
  6799   00752C  3611               	rlcf	___fldiv@rem^0,f,c
  6800   00752E  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  6801   007530  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  6802   007532  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  6803   007534  90D8               	bcf	status,0,c
  6804   007536  3605               	rlcf	___fldiv@b^0,f,c
  6805   007538  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6806   00753A  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6807   00753C  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6808   00753E  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6809   007540  EFA4  F03A         	goto	u2371
  6810   007544  EFA6  F03A         	goto	u2370
  6811   007548                     u2371:
  6812   007548  EFA7  F03A         	goto	l767
  6813   00754C                     u2370:
  6814   00754C  8005               	bsf	___fldiv@b^0,0,c
  6815   00754E                     l767:
  6816   00754E  90D8               	bcf	status,0,c
  6817   007550  3618               	rlcf	___fldiv@grs^0,f,c
  6818   007552  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6819   007554  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6820   007556  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6821   007558                     l2613:
  6822   007558  5009               	movf	___fldiv@a^0,w,c
  6823   00755A  5C11               	subwf	___fldiv@rem^0,w,c
  6824   00755C  500A               	movf	(___fldiv@a+1)^0,w,c
  6825   00755E  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  6826   007560  500B               	movf	(___fldiv@a+2)^0,w,c
  6827   007562  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  6828   007564  500C               	movf	(___fldiv@a+3)^0,w,c
  6829   007566  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  6830   007568  A0D8               	btfss	status,0,c
  6831   00756A  EFB9  F03A         	goto	u2381
  6832   00756E  EFBB  F03A         	goto	u2380
  6833   007572                     u2381:
  6834   007572  EFC4  F03A         	goto	l2619
  6835   007576                     u2380:
  6836   007576  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  6837   007578  5009               	movf	___fldiv@a^0,w,c
  6838   00757A  5E11               	subwf	___fldiv@rem^0,f,c
  6839   00757C  500A               	movf	(___fldiv@a+1)^0,w,c
  6840   00757E  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  6841   007580  500B               	movf	(___fldiv@a+2)^0,w,c
  6842   007582  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  6843   007584  500C               	movf	(___fldiv@a+3)^0,w,c
  6844   007586  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  6845   007588                     l2619:
  6846   007588  2A1D               	incf	___fldiv@aexp^0,f,c
  6847   00758A                     l764:
  6848   00758A  0E19               	movlw	25
  6849   00758C  641D               	cpfsgt	___fldiv@aexp^0,c
  6850   00758E  EFCB  F03A         	goto	u2391
  6851   007592  EFCD  F03A         	goto	u2390
  6852   007596                     u2391:
  6853   007596  EF8D  F03A         	goto	l2605
  6854   00759A                     u2390:
  6855   00759A  5011               	movf	___fldiv@rem^0,w,c
  6856   00759C  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  6857   00759E  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  6858   0075A0  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  6859   0075A2  B4D8               	btfsc	status,2,c
  6860   0075A4  EFD6  F03A         	goto	u2401
  6861   0075A8  EFD8  F03A         	goto	u2400
  6862   0075AC                     u2401:
  6863   0075AC  EFF0  F03A         	goto	l2631
  6864   0075B0                     u2400:
  6865   0075B0  8018               	bsf	___fldiv@grs^0,0,c
  6866   0075B2  EFF0  F03A         	goto	l2631
  6867   0075B6                     l2625:
  6868   0075B6  90D8               	bcf	status,0,c
  6869   0075B8  3605               	rlcf	___fldiv@b^0,f,c
  6870   0075BA  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6871   0075BC  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6872   0075BE  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6873   0075C0  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6874   0075C2  EFE5  F03A         	goto	u2411
  6875   0075C6  EFE7  F03A         	goto	u2410
  6876   0075CA                     u2411:
  6877   0075CA  EFE8  F03A         	goto	l773
  6878   0075CE                     u2410:
  6879   0075CE  8005               	bsf	___fldiv@b^0,0,c
  6880   0075D0                     l773:
  6881   0075D0  90D8               	bcf	status,0,c
  6882   0075D2  3618               	rlcf	___fldiv@grs^0,f,c
  6883   0075D4  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6884   0075D6  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6885   0075D8  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6886   0075DA  0616               	decf	___fldiv@new_exp^0,f,c
  6887   0075DC  A0D8               	btfss	status,0,c
  6888   0075DE  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  6889   0075E0                     l2631:
  6890   0075E0  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6891   0075E2  EFF5  F03A         	goto	u2421
  6892   0075E6  EFF7  F03A         	goto	u2420
  6893   0075EA                     u2421:
  6894   0075EA  EFDB  F03A         	goto	l2625
  6895   0075EE                     u2420:
  6896   0075EE  6A1D               	clrf	___fldiv@aexp^0,c
  6897   0075F0  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6898   0075F2  EFFD  F03A         	goto	u2431
  6899   0075F6  EFFF  F03A         	goto	u2430
  6900   0075FA                     u2431:
  6901   0075FA  EF23  F03B         	goto	l775
  6902   0075FE                     u2430:
  6903   0075FE  0EFF               	movlw	255
  6904   007600  1418               	andwf	___fldiv@grs^0,w,c
  6905   007602  6E0D               	movwf	??___fldiv^0,c
  6906   007604  0EFF               	movlw	255
  6907   007606  1419               	andwf	(___fldiv@grs+1)^0,w,c
  6908   007608  6E0E               	movwf	(??___fldiv+1)^0,c
  6909   00760A  0EFF               	movlw	255
  6910   00760C  141A               	andwf	(___fldiv@grs+2)^0,w,c
  6911   00760E  6E0F               	movwf	(??___fldiv+2)^0,c
  6912   007610  0E7F               	movlw	127
  6913   007612  141B               	andwf	(___fldiv@grs+3)^0,w,c
  6914   007614  6E10               	movwf	(??___fldiv+3)^0,c
  6915   007616  500D               	movf	??___fldiv^0,w,c
  6916   007618  100E               	iorwf	(??___fldiv+1)^0,w,c
  6917   00761A  100F               	iorwf	(??___fldiv+2)^0,w,c
  6918   00761C  1010               	iorwf	(??___fldiv+3)^0,w,c
  6919   00761E  B4D8               	btfsc	status,2,c
  6920   007620  EF14  F03B         	goto	u2441
  6921   007624  EF16  F03B         	goto	u2440
  6922   007628                     u2441:
  6923   007628  EF1A  F03B         	goto	l776
  6924   00762C                     u2440:
  6925   00762C                     l2635:
  6926   00762C  0E01               	movlw	1
  6927   00762E  6E1D               	movwf	___fldiv@aexp^0,c
  6928   007630  EF23  F03B         	goto	l775
  6929   007634                     l776:
  6930   007634  A005               	btfss	___fldiv@b^0,0,c
  6931   007636  EF1F  F03B         	goto	u2451
  6932   00763A  EF21  F03B         	goto	u2450
  6933   00763E                     u2451:
  6934   00763E  EF23  F03B         	goto	l775
  6935   007642                     u2450:
  6936   007642  EF16  F03B         	goto	l2635
  6937   007646                     l775:
  6938   007646  501D               	movf	___fldiv@aexp^0,w,c
  6939   007648  B4D8               	btfsc	status,2,c
  6940   00764A  EF29  F03B         	goto	u2461
  6941   00764E  EF2B  F03B         	goto	u2460
  6942   007652                     u2461:
  6943   007652  EF4F  F03B         	goto	l2647
  6944   007656                     u2460:
  6945   007656  0E01               	movlw	1
  6946   007658  2605               	addwf	___fldiv@b^0,f,c
  6947   00765A  0E00               	movlw	0
  6948   00765C  2206               	addwfc	(___fldiv@b+1)^0,f,c
  6949   00765E  2207               	addwfc	(___fldiv@b+2)^0,f,c
  6950   007660  2208               	addwfc	(___fldiv@b+3)^0,f,c
  6951   007662  A008               	btfss	(___fldiv@b+3)^0,0,c
  6952   007664  EF36  F03B         	goto	u2471
  6953   007668  EF38  F03B         	goto	u2470
  6954   00766C                     u2471:
  6955   00766C  EF4F  F03B         	goto	l2647
  6956   007670                     u2470:
  6957   007670  C005  F00D         	movff	___fldiv@b,??___fldiv
  6958   007674  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  6959   007678  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  6960   00767C  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  6961   007680  3410               	rlcf	(??___fldiv+3)^0,w,c
  6962   007682  3210               	rrcf	(??___fldiv+3)^0,f,c
  6963   007684  320F               	rrcf	(??___fldiv+2)^0,f,c
  6964   007686  320E               	rrcf	(??___fldiv+1)^0,f,c
  6965   007688  320D               	rrcf	??___fldiv^0,f,c
  6966   00768A  C00D  F005         	movff	??___fldiv,___fldiv@b
  6967   00768E  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  6968   007692  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  6969   007696  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  6970   00769A  4A16               	infsnz	___fldiv@new_exp^0,f,c
  6971   00769C  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  6972   00769E                     l2647:
  6973   00769E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6974   0076A0  EF5A  F03B         	goto	u2481
  6975   0076A4  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6976   0076A6  E108               	bnz	u2480
  6977   0076A8  2816               	incf	___fldiv@new_exp^0,w,c
  6978   0076AA  A0D8               	btfss	status,0,c
  6979   0076AC  EF5A  F03B         	goto	u2481
  6980   0076B0  EF5C  F03B         	goto	u2480
  6981   0076B4                     u2481:
  6982   0076B4  EF67  F03B         	goto	l2651
  6983   0076B8                     u2480:
  6984   0076B8  0E00               	movlw	0
  6985   0076BA  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6986   0076BC  6816               	setf	___fldiv@new_exp^0,c
  6987   0076BE  0E00               	movlw	0
  6988   0076C0  6E05               	movwf	___fldiv@b^0,c
  6989   0076C2  0E00               	movlw	0
  6990   0076C4  6E06               	movwf	(___fldiv@b+1)^0,c
  6991   0076C6  0E00               	movlw	0
  6992   0076C8  6E07               	movwf	(___fldiv@b+2)^0,c
  6993   0076CA  0E00               	movlw	0
  6994   0076CC  6E08               	movwf	(___fldiv@b+3)^0,c
  6995   0076CE                     l2651:
  6996   0076CE  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6997   0076D0  EF74  F03B         	goto	u2490
  6998   0076D4  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6999   0076D6  E106               	bnz	u2491
  7000   0076D8  0416               	decf	___fldiv@new_exp^0,w,c
  7001   0076DA  B0D8               	btfsc	status,0,c
  7002   0076DC  EF72  F03B         	goto	u2491
  7003   0076E0  EF74  F03B         	goto	u2490
  7004   0076E4                     u2491:
  7005   0076E4  EF81  F03B         	goto	l2657
  7006   0076E8                     u2490:
  7007   0076E8  0E00               	movlw	0
  7008   0076EA  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  7009   0076EC  0E00               	movlw	0
  7010   0076EE  6E16               	movwf	___fldiv@new_exp^0,c
  7011   0076F0  0E00               	movlw	0
  7012   0076F2  6E05               	movwf	___fldiv@b^0,c
  7013   0076F4  0E00               	movlw	0
  7014   0076F6  6E06               	movwf	(___fldiv@b+1)^0,c
  7015   0076F8  0E00               	movlw	0
  7016   0076FA  6E07               	movwf	(___fldiv@b+2)^0,c
  7017   0076FC  0E00               	movlw	0
  7018   0076FE  6E08               	movwf	(___fldiv@b+3)^0,c
  7019   007700  6A15               	clrf	___fldiv@sign^0,c
  7020   007702                     l2657:
  7021   007702  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  7022   007706  A01C               	btfss	___fldiv@bexp^0,0,c
  7023   007708  EF88  F03B         	goto	u2501
  7024   00770C  EF8A  F03B         	goto	u2500
  7025   007710                     u2501:
  7026   007710  EF8D  F03B         	goto	l2663
  7027   007714                     u2500:
  7028   007714  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7029   007716  EF8E  F03B         	goto	l2665
  7030   00771A                     l2663:
  7031   00771A  9E07               	bcf	(___fldiv@b+2)^0,7,c
  7032   00771C                     l2665:
  7033   00771C  90D8               	bcf	status,0,c
  7034   00771E  301C               	rrcf	___fldiv@bexp^0,w,c
  7035   007720  6E08               	movwf	(___fldiv@b+3)^0,c
  7036   007722  EF47  F03A         	goto	l2581
  7037   007726                     l762:
  7038   007726  0012               	return		;funcret
  7039   007728                     __end_of___fldiv:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function ___xxtofl *****************
  7043 ;; Defined at:
  7044 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  sign            1    wreg     unsigned char 
  7047 ;;  val             4    4[COMRAM] long 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  sign            1   12[COMRAM] unsigned char 
  7050 ;;  arg             4   14[COMRAM] unsigned long 
  7051 ;;  exp             1   13[COMRAM] unsigned char 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  4    4[COMRAM] unsigned char 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7062 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7063 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7064 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7065 ;;Total ram usage:       14 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 2
  7068 ;; This function calls:
  7069 ;;		Nothing
  7070 ;; This function is called by:
  7071 ;;		_main
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text24
  7076   007B4E                     __ptext24:
  7077                           	callstack 0
  7078   007B4E                     ___xxtofl:
  7079                           	callstack 28
  7080                           
  7081                           ;incstack = 0
  7082                           ;___xxtofl@sign stored from wreg
  7083   007B4E  6E0D               	movwf	___xxtofl@sign^0,c
  7084   007B50  500D               	movf	___xxtofl@sign^0,w,c
  7085   007B52  B4D8               	btfsc	status,2,c
  7086   007B54  EFAE  F03D         	goto	u3541
  7087   007B58  EFB0  F03D         	goto	u3540
  7088   007B5C                     u3541:
  7089   007B5C  EFD2  F03D         	goto	l835
  7090   007B60                     u3540:
  7091   007B60  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7092   007B62  EFB7  F03D         	goto	u3550
  7093   007B66  EFB5  F03D         	goto	u3551
  7094   007B6A                     u3551:
  7095   007B6A  EFD2  F03D         	goto	l835
  7096   007B6E                     u3550:
  7097   007B6E  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7098   007B72  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7099   007B76  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7100   007B7A  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7101   007B7E  1E09               	comf	??___xxtofl^0,f,c
  7102   007B80  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7103   007B82  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7104   007B84  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7105   007B86  2A09               	incf	??___xxtofl^0,f,c
  7106   007B88  0E00               	movlw	0
  7107   007B8A  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7108   007B8C  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7109   007B8E  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7110   007B90  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7111   007B94  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7112   007B98  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7113   007B9C  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7114   007BA0  EFDA  F03D         	goto	l3459
  7115   007BA4                     l835:
  7116   007BA4  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7117   007BA8  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7118   007BAC  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7119   007BB0  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7120   007BB4                     l3459:
  7121   007BB4  5005               	movf	___xxtofl@val^0,w,c
  7122   007BB6  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7123   007BB8  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7124   007BBA  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7125   007BBC  A4D8               	btfss	status,2,c
  7126   007BBE  EFE3  F03D         	goto	u3561
  7127   007BC2  EFE5  F03D         	goto	u3560
  7128   007BC6                     u3561:
  7129   007BC6  EFEF  F03D         	goto	l3465
  7130   007BCA                     u3560:
  7131   007BCA  0E00               	movlw	0
  7132   007BCC  6E05               	movwf	?___xxtofl^0,c
  7133   007BCE  0E00               	movlw	0
  7134   007BD0  6E06               	movwf	(?___xxtofl+1)^0,c
  7135   007BD2  0E00               	movlw	0
  7136   007BD4  6E07               	movwf	(?___xxtofl+2)^0,c
  7137   007BD6  0E00               	movlw	0
  7138   007BD8  6E08               	movwf	(?___xxtofl+3)^0,c
  7139   007BDA  EF80  F03E         	goto	l838
  7140   007BDE                     l3465:
  7141   007BDE  0E96               	movlw	150
  7142   007BE0  6E0E               	movwf	___xxtofl@exp^0,c
  7143   007BE2  EFF9  F03D         	goto	l3469
  7144   007BE6                     l3467:
  7145   007BE6  2A0E               	incf	___xxtofl@exp^0,f,c
  7146   007BE8  90D8               	bcf	status,0,c
  7147   007BEA  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7148   007BEC  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7149   007BEE  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7150   007BF0  320F               	rrcf	___xxtofl@arg^0,f,c
  7151   007BF2                     l3469:
  7152   007BF2  0E00               	movlw	0
  7153   007BF4  140F               	andwf	___xxtofl@arg^0,w,c
  7154   007BF6  6E09               	movwf	??___xxtofl^0,c
  7155   007BF8  0E00               	movlw	0
  7156   007BFA  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7157   007BFC  6E0A               	movwf	(??___xxtofl+1)^0,c
  7158   007BFE  0E00               	movlw	0
  7159   007C00  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7160   007C02  6E0B               	movwf	(??___xxtofl+2)^0,c
  7161   007C04  0EFE               	movlw	254
  7162   007C06  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7163   007C08  6E0C               	movwf	(??___xxtofl+3)^0,c
  7164   007C0A  5009               	movf	??___xxtofl^0,w,c
  7165   007C0C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7166   007C0E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7167   007C10  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7168   007C12  A4D8               	btfss	status,2,c
  7169   007C14  EF0E  F03E         	goto	u3571
  7170   007C18  EF10  F03E         	goto	u3570
  7171   007C1C                     u3571:
  7172   007C1C  EFF3  F03D         	goto	l3467
  7173   007C20                     u3570:
  7174   007C20  EF1E  F03E         	goto	l842
  7175   007C24                     l3471:
  7176   007C24  2A0E               	incf	___xxtofl@exp^0,f,c
  7177   007C26  0E01               	movlw	1
  7178   007C28  260F               	addwf	___xxtofl@arg^0,f,c
  7179   007C2A  0E00               	movlw	0
  7180   007C2C  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7181   007C2E  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7182   007C30  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7183   007C32  90D8               	bcf	status,0,c
  7184   007C34  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7185   007C36  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7186   007C38  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7187   007C3A  320F               	rrcf	___xxtofl@arg^0,f,c
  7188   007C3C                     l842:
  7189   007C3C  0E00               	movlw	0
  7190   007C3E  140F               	andwf	___xxtofl@arg^0,w,c
  7191   007C40  6E09               	movwf	??___xxtofl^0,c
  7192   007C42  0E00               	movlw	0
  7193   007C44  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7194   007C46  6E0A               	movwf	(??___xxtofl+1)^0,c
  7195   007C48  0E00               	movlw	0
  7196   007C4A  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7197   007C4C  6E0B               	movwf	(??___xxtofl+2)^0,c
  7198   007C4E  0EFF               	movlw	255
  7199   007C50  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7200   007C52  6E0C               	movwf	(??___xxtofl+3)^0,c
  7201   007C54  5009               	movf	??___xxtofl^0,w,c
  7202   007C56  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7203   007C58  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7204   007C5A  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7205   007C5C  A4D8               	btfss	status,2,c
  7206   007C5E  EF33  F03E         	goto	u3581
  7207   007C62  EF35  F03E         	goto	u3580
  7208   007C66                     u3581:
  7209   007C66  EF12  F03E         	goto	l3471
  7210   007C6A                     u3580:
  7211   007C6A  EF3D  F03E         	goto	l3479
  7212   007C6E                     l3477:
  7213   007C6E  060E               	decf	___xxtofl@exp^0,f,c
  7214   007C70  90D8               	bcf	status,0,c
  7215   007C72  360F               	rlcf	___xxtofl@arg^0,f,c
  7216   007C74  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7217   007C76  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7218   007C78  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7219   007C7A                     l3479:
  7220   007C7A  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7221   007C7C  EF42  F03E         	goto	u3591
  7222   007C80  EF44  F03E         	goto	u3590
  7223   007C84                     u3591:
  7224   007C84  EF4C  F03E         	goto	l849
  7225   007C88                     u3590:
  7226   007C88  0E02               	movlw	2
  7227   007C8A  600E               	cpfslt	___xxtofl@exp^0,c
  7228   007C8C  EF4A  F03E         	goto	u3601
  7229   007C90  EF4C  F03E         	goto	u3600
  7230   007C94                     u3601:
  7231   007C94  EF37  F03E         	goto	l3477
  7232   007C98                     u3600:
  7233   007C98                     l849:
  7234   007C98  B00E               	btfsc	___xxtofl@exp^0,0,c
  7235   007C9A  EF51  F03E         	goto	u3611
  7236   007C9E  EF53  F03E         	goto	u3610
  7237   007CA2                     u3611:
  7238   007CA2  EF54  F03E         	goto	l3485
  7239   007CA6                     u3610:
  7240   007CA6  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7241   007CA8                     l3485:
  7242   007CA8  90D8               	bcf	status,0,c
  7243   007CAA  320E               	rrcf	___xxtofl@exp^0,f,c
  7244   007CAC  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7245   007CB0  6A0A               	clrf	(??___xxtofl+1)^0,c
  7246   007CB2  6A0B               	clrf	(??___xxtofl+2)^0,c
  7247   007CB4  6A0C               	clrf	(??___xxtofl+3)^0,c
  7248   007CB6  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7249   007CBA  6A0B               	clrf	(??___xxtofl+2)^0,c
  7250   007CBC  6A0A               	clrf	(??___xxtofl+1)^0,c
  7251   007CBE  6A09               	clrf	??___xxtofl^0,c
  7252   007CC0  5009               	movf	??___xxtofl^0,w,c
  7253   007CC2  120F               	iorwf	___xxtofl@arg^0,f,c
  7254   007CC4  500A               	movf	(??___xxtofl+1)^0,w,c
  7255   007CC6  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7256   007CC8  500B               	movf	(??___xxtofl+2)^0,w,c
  7257   007CCA  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7258   007CCC  500C               	movf	(??___xxtofl+3)^0,w,c
  7259   007CCE  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7260   007CD0  500D               	movf	___xxtofl@sign^0,w,c
  7261   007CD2  B4D8               	btfsc	status,2,c
  7262   007CD4  EF6E  F03E         	goto	u3621
  7263   007CD8  EF70  F03E         	goto	u3620
  7264   007CDC                     u3621:
  7265   007CDC  EF78  F03E         	goto	l3495
  7266   007CE0                     u3620:
  7267   007CE0  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7268   007CE2  EF77  F03E         	goto	u3630
  7269   007CE6  EF75  F03E         	goto	u3631
  7270   007CEA                     u3631:
  7271   007CEA  EF78  F03E         	goto	l3495
  7272   007CEE                     u3630:
  7273   007CEE  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7274   007CF0                     l3495:
  7275   007CF0  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7276   007CF4  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7277   007CF8  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7278   007CFC  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7279   007D00                     l838:
  7280   007D00  0012               	return		;funcret
  7281   007D02                     __end_of___xxtofl:
  7282                           	callstack 0
  7283                           
  7284 ;; *************** function _LCD_String_xy *****************
  7285 ;; Defined at:
  7286 ;;		line 183 in file "LCD.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  row             1    wreg     unsigned char 
  7289 ;;  pos             1   13[COMRAM] unsigned char 
  7290 ;;  msg             2   14[COMRAM] PTR const unsigned char 
  7291 ;;		 -> STR_3(17), data(10), 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  row             1   16[COMRAM] unsigned char 
  7294 ;;  location        1   17[COMRAM] unsigned char 
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  1    wreg      void 
  7297 ;; Registers used:
  7298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7305 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7307 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7308 ;;Total ram usage:        5 bytes
  7309 ;; Hardware stack levels used: 1
  7310 ;; Hardware stack levels required when called: 5
  7311 ;; This function calls:
  7312 ;;		_LCD_Command
  7313 ;;		_LCD_String
  7314 ;; This function is called by:
  7315 ;;		_main
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           	psect	text25
  7320   0087A2                     __ptext25:
  7321                           	callstack 0
  7322   0087A2                     _LCD_String_xy:
  7323                           	callstack 25
  7324                           
  7325                           ;incstack = 0
  7326                           ;LCD_String_xy@row stored from wreg
  7327   0087A2  6E11               	movwf	LCD_String_xy@row^0,c
  7328   0087A4                     
  7329                           ;LCD.c: 186:     if(row<=1)
  7330   0087A4  0E02               	movlw	2
  7331   0087A6  6011               	cpfslt	LCD_String_xy@row^0,c
  7332   0087A8  EFD8  F043         	goto	u3531
  7333   0087AC  EFDA  F043         	goto	u3530
  7334   0087B0                     u3531:
  7335   0087B0  EFE3  F043         	goto	l3447
  7336   0087B4                     u3530:
  7337   0087B4                     
  7338                           ;LCD.c: 187:     {;LCD.c: 188:         location=(0x80) | ((pos) & 0x0f);
  7339   0087B4  500E               	movf	LCD_String_xy@pos^0,w,c
  7340   0087B6  0B0F               	andlw	15
  7341   0087B8  0980               	iorlw	128
  7342   0087BA  6E12               	movwf	LCD_String_xy@location^0,c
  7343   0087BC                     
  7344                           ;LCD.c: 189:         LCD_Command(location);
  7345   0087BC  5012               	movf	LCD_String_xy@location^0,w,c
  7346   0087BE  EC7B  F044         	call	_LCD_Command
  7347                           
  7348                           ;LCD.c: 190:     }
  7349   0087C2  EFEA  F043         	goto	l3451
  7350   0087C6                     l3447:
  7351                           
  7352                           ;LCD.c: 192:     {;LCD.c: 193:         location=(0xC0) | ((pos) & 0x0f);
  7353   0087C6  500E               	movf	LCD_String_xy@pos^0,w,c
  7354   0087C8  0B0F               	andlw	15
  7355   0087CA  09C0               	iorlw	192
  7356   0087CC  6E12               	movwf	LCD_String_xy@location^0,c
  7357   0087CE                     
  7358                           ;LCD.c: 194:         LCD_Command(location);
  7359   0087CE  5012               	movf	LCD_String_xy@location^0,w,c
  7360   0087D0  EC7B  F044         	call	_LCD_Command
  7361   0087D4                     l3451:
  7362                           
  7363                           ;LCD.c: 196:     LCD_String(msg);
  7364   0087D4  C00F  F00C         	movff	LCD_String_xy@msg,LCD_String@msg
  7365   0087D8  C010  F00D         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7366   0087DC  ECDD  F041         	call	_LCD_String	;wreg free
  7367   0087E0  0012               	return		;funcret
  7368   0087E2                     __end_of_LCD_String_xy:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function _LCD_String *****************
  7372 ;; Defined at:
  7373 ;;		line 174 in file "LCD.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  7376 ;;		 -> STR_3(17), data(10), 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;		None
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  1    wreg      void 
  7381 ;; Registers used:
  7382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7392 ;;Total ram usage:        2 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; Hardware stack levels required when called: 4
  7395 ;; This function calls:
  7396 ;;		_LCD_Char
  7397 ;; This function is called by:
  7398 ;;		_LCD_String_xy
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text26
  7403   0083BA                     __ptext26:
  7404                           	callstack 0
  7405   0083BA                     _LCD_String:
  7406                           	callstack 25
  7407   0083BA                     
  7408                           ;LCD.c: 174: void LCD_String(const char *msg);LCD.c: 175: {;LCD.c: 176:     while((*msg)
      +                          !=0)
  7409   0083BA  EFF8  F041         	goto	l3319
  7410   0083BE                     l3315:
  7411                           
  7412                           ;LCD.c: 177:     {;LCD.c: 178:       LCD_Char(*msg);
  7413   0083BE  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  7414   0083C4  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  7415   0083CA  0E00               	movlw	low (__smallconst shr (0+16))
  7416   0083CC  6EF8               	movwf	tblptru,c
  7417   0083CE  0E1F               	movlw	(high __ramtop+-1)
  7418   0083D0  64F7               	cpfsgt	tblptrh,c
  7419   0083D2  D003               	bra	u3477
  7420   0083D4  0008               	tblrd		*
  7421   0083D6  50F5               	movf	tablat,w,c
  7422   0083D8  D007               	bra	u3470
  7423   0083DA                     u3477:
  7424   0083DA  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7425   0083E0  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7426   0083E6  50E7               	movf	indf1,w,c
  7427   0083E8                     u3470:
  7428   0083E8  EC6C  F044         	call	_LCD_Char
  7429   0083EC                     
  7430                           ;LCD.c: 179:       msg++;
  7431   0083EC  4A0C               	infsnz	LCD_String@msg^0,f,c
  7432   0083EE  2A0D               	incf	(LCD_String@msg+1)^0,f,c
  7433   0083F0                     l3319:
  7434                           
  7435                           ;LCD.c: 176:     while((*msg)!=0)
  7436   0083F0  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  7437   0083F6  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  7438   0083FC  0E00               	movlw	low (__smallconst shr (0+16))
  7439   0083FE  6EF8               	movwf	tblptru,c
  7440   008400  0E1F               	movlw	(high __ramtop+-1)
  7441   008402  64F7               	cpfsgt	tblptrh,c
  7442   008404  D003               	bra	u3487
  7443   008406  0008               	tblrd		*
  7444   008408  50F5               	movf	tablat,w,c
  7445   00840A  D007               	bra	u3480
  7446   00840C                     u3487:
  7447   00840C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7448   008412  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7449   008418  50E7               	movf	indf1,w,c
  7450   00841A                     u3480:
  7451   00841A  0900               	iorlw	0
  7452   00841C  A4D8               	btfss	status,2,c
  7453   00841E  EF13  F042         	goto	u3491
  7454   008422  EF15  F042         	goto	u3490
  7455   008426                     u3491:
  7456   008426  EFDF  F041         	goto	l3315
  7457   00842A                     u3490:
  7458   00842A  0012               	return		;funcret
  7459   00842C                     __end_of_LCD_String:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _LCD_Char *****************
  7463 ;; Defined at:
  7464 ;;		line 163 in file "LCD.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  dat             1    wreg     unsigned char 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  dat             1   10[COMRAM] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2, status,0, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7481 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7482 ;;Total ram usage:        1 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 3
  7485 ;; This function calls:
  7486 ;;		_MSdelay
  7487 ;; This function is called by:
  7488 ;;		_LCD_String
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           	psect	text27
  7493   0088D8                     __ptext27:
  7494                           	callstack 0
  7495   0088D8                     _LCD_Char:
  7496                           	callstack 25
  7497                           
  7498                           ;incstack = 0
  7499                           ;LCD_Char@dat stored from wreg
  7500   0088D8  6E0B               	movwf	LCD_Char@dat^0,c
  7501   0088DA                     
  7502                           ;LCD.c: 163: void LCD_Char(char dat);LCD.c: 164: {;LCD.c: 165:     LATB= dat;
  7503   0088DA  0060  F02F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  7504   0088E0                     
  7505                           ;LCD.c: 166:     LATD0 = 1;
  7506   0088E0  80BD               	bsf	16317,0,c	;volatile
  7507   0088E2                     
  7508                           ;LCD.c: 167:     LATD1=1;
  7509   0088E2  82BD               	bsf	16317,1,c	;volatile
  7510   0088E4                     
  7511                           ;LCD.c: 168:     __nop();
  7512   0088E4  0000               	nop	
  7513   0088E6                     
  7514                           ;LCD.c: 169:     LATD1=0;
  7515   0088E6  92BD               	bcf	16317,1,c	;volatile
  7516   0088E8                     
  7517                           ;LCD.c: 170:     MSdelay(1);
  7518   0088E8  0E00               	movlw	0
  7519   0088EA  6E06               	movwf	(MSdelay@val+1)^0,c
  7520   0088EC  0E01               	movlw	1
  7521   0088EE  6E05               	movwf	MSdelay@val^0,c
  7522   0088F0  EC22  F043         	call	_MSdelay	;wreg free
  7523   0088F4  0012               	return		;funcret
  7524   0088F6                     __end_of_LCD_Char:
  7525                           	callstack 0
  7526                           
  7527 ;; *************** function _LCD_Init *****************
  7528 ;; Defined at:
  7529 ;;		line 137 in file "LCD.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;		None
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;		None
  7534 ;; Return value:  Size  Location     Type
  7535 ;;                  1    wreg      void 
  7536 ;; Registers used:
  7537 ;;		wreg, status,2, status,0, cstack
  7538 ;; Tracked objects:
  7539 ;;		On entry : 0/0
  7540 ;;		On exit  : 0/0
  7541 ;;		Unchanged: 0/0
  7542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7547 ;;Total ram usage:        0 bytes
  7548 ;; Hardware stack levels used: 1
  7549 ;; Hardware stack levels required when called: 4
  7550 ;; This function calls:
  7551 ;;		_LCD_Command
  7552 ;;		_MSdelay
  7553 ;; This function is called by:
  7554 ;;		_main
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text28
  7559   008888                     __ptext28:
  7560                           	callstack 0
  7561   008888                     _LCD_Init:
  7562                           	callstack 26
  7563   008888                     
  7564                           ;LCD.c: 139:     MSdelay(15);
  7565   008888  0E00               	movlw	0
  7566   00888A  6E06               	movwf	(MSdelay@val+1)^0,c
  7567   00888C  0E0F               	movlw	15
  7568   00888E  6E05               	movwf	MSdelay@val^0,c
  7569   008890  EC22  F043         	call	_MSdelay	;wreg free
  7570   008894                     
  7571                           ;LCD.c: 140:     TRISB = 0x00;
  7572   008894  6AC3               	clrf	195,c	;volatile
  7573   008896                     
  7574                           ;LCD.c: 141:     TRISD = 0x00;
  7575   008896  6AC5               	clrf	197,c	;volatile
  7576                           
  7577                           ;LCD.c: 142:     LCD_Command(0x01);
  7578   008898  0E01               	movlw	1
  7579   00889A  EC7B  F044         	call	_LCD_Command
  7580                           
  7581                           ;LCD.c: 143:     LCD_Command(0x38);
  7582   00889E  0E38               	movlw	56
  7583   0088A0  EC7B  F044         	call	_LCD_Command
  7584                           
  7585                           ;LCD.c: 144:     LCD_Command(0x0c);
  7586   0088A4  0E0C               	movlw	12
  7587   0088A6  EC7B  F044         	call	_LCD_Command
  7588                           
  7589                           ;LCD.c: 145:     LCD_Command(0x06);
  7590   0088AA  0E06               	movlw	6
  7591   0088AC  EC7B  F044         	call	_LCD_Command
  7592   0088B0  0012               	return		;funcret
  7593   0088B2                     __end_of_LCD_Init:
  7594                           	callstack 0
  7595                           
  7596 ;; *************** function _LCD_Command *****************
  7597 ;; Defined at:
  7598 ;;		line 153 in file "LCD.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  cmd             1    wreg     unsigned char 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  cmd             1   10[COMRAM] unsigned char 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  1    wreg      void 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0, cstack
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7616 ;;Total ram usage:        1 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; Hardware stack levels required when called: 3
  7619 ;; This function calls:
  7620 ;;		_MSdelay
  7621 ;; This function is called by:
  7622 ;;		_LCD_Init
  7623 ;;		_LCD_String_xy
  7624 ;;		_LCD_Clear
  7625 ;; This function uses a non-reentrant model
  7626 ;;
  7627                           
  7628                           	psect	text29
  7629   0088F6                     __ptext29:
  7630                           	callstack 0
  7631   0088F6                     _LCD_Command:
  7632                           	callstack 26
  7633                           
  7634                           ;incstack = 0
  7635                           ;LCD_Command@cmd stored from wreg
  7636   0088F6  6E0B               	movwf	LCD_Command@cmd^0,c
  7637   0088F8                     
  7638                           ;LCD.c: 153: void LCD_Command(char cmd );LCD.c: 154: {;LCD.c: 155:     LATB= cmd;
  7639   0088F8  0060  F02F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  7640   0088FE                     
  7641                           ;LCD.c: 156:     LATD0 = 0;
  7642   0088FE  90BD               	bcf	16317,0,c	;volatile
  7643   008900                     
  7644                           ;LCD.c: 157:     LATD1 = 1;
  7645   008900  82BD               	bsf	16317,1,c	;volatile
  7646   008902                     
  7647                           ;LCD.c: 158:     __nop();
  7648   008902  0000               	nop	
  7649   008904                     
  7650                           ;LCD.c: 159:     LATD1 = 0;
  7651   008904  92BD               	bcf	16317,1,c	;volatile
  7652   008906                     
  7653                           ;LCD.c: 160:     MSdelay(3);
  7654   008906  0E00               	movlw	0
  7655   008908  6E06               	movwf	(MSdelay@val+1)^0,c
  7656   00890A  0E03               	movlw	3
  7657   00890C  6E05               	movwf	MSdelay@val^0,c
  7658   00890E  EC22  F043         	call	_MSdelay	;wreg free
  7659   008912  0012               	return		;funcret
  7660   008914                     __end_of_LCD_Command:
  7661                           	callstack 0
  7662                           
  7663 ;; *************** function _MSdelay *****************
  7664 ;; Defined at:
  7665 ;;		line 200 in file "LCD.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  val             2    4[COMRAM] unsigned int 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;  j               2    8[COMRAM] unsigned int 
  7670 ;;  i               2    6[COMRAM] unsigned int 
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  1    wreg      void 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0
  7675 ;; Tracked objects:
  7676 ;;		On entry : 0/0
  7677 ;;		On exit  : 0/0
  7678 ;;		Unchanged: 0/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7681 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7683 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7684 ;;Total ram usage:        6 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; Hardware stack levels required when called: 2
  7687 ;; This function calls:
  7688 ;;		Nothing
  7689 ;; This function is called by:
  7690 ;;		_LCD_Init
  7691 ;;		_LCD_Command
  7692 ;;		_LCD_Char
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text30
  7697   008644                     __ptext30:
  7698                           	callstack 0
  7699   008644                     _MSdelay:
  7700                           	callstack 25
  7701   008644                     
  7702                           ;LCD.c: 200: void MSdelay(unsigned int val);LCD.c: 201: {;LCD.c: 202:      unsigned int 
      +                          i,j;;LCD.c: 203:         for(i=0;i<val;i++)
  7703   008644  0E00               	movlw	0
  7704   008646  6E08               	movwf	(MSdelay@i+1)^0,c
  7705   008648  0E00               	movlw	0
  7706   00864A  6E07               	movwf	MSdelay@i^0,c
  7707   00864C  EF3B  F043         	goto	l2997
  7708   008650                     l2985:
  7709                           
  7710                           ;LCD.c: 204:             for(j=0;j<165;j++);
  7711   008650  0E00               	movlw	0
  7712   008652  6E0A               	movwf	(MSdelay@j+1)^0,c
  7713   008654  0E00               	movlw	0
  7714   008656  6E09               	movwf	MSdelay@j^0,c
  7715   008658                     l2991:
  7716   008658  4A09               	infsnz	MSdelay@j^0,f,c
  7717   00865A  2A0A               	incf	(MSdelay@j+1)^0,f,c
  7718   00865C  500A               	movf	(MSdelay@j+1)^0,w,c
  7719   00865E  E109               	bnz	u3080
  7720   008660  0EA5               	movlw	165
  7721   008662  5C09               	subwf	MSdelay@j^0,w,c
  7722   008664  A0D8               	btfss	status,0,c
  7723   008666  EF37  F043         	goto	u3081
  7724   00866A  EF39  F043         	goto	u3080
  7725   00866E                     u3081:
  7726   00866E  EF2C  F043         	goto	l2991
  7727   008672                     u3080:
  7728   008672  4A07               	infsnz	MSdelay@i^0,f,c
  7729   008674  2A08               	incf	(MSdelay@i+1)^0,f,c
  7730   008676                     l2997:
  7731   008676  5005               	movf	MSdelay@val^0,w,c
  7732   008678  5C07               	subwf	MSdelay@i^0,w,c
  7733   00867A  5006               	movf	(MSdelay@val+1)^0,w,c
  7734   00867C  5808               	subwfb	(MSdelay@i+1)^0,w,c
  7735   00867E  A0D8               	btfss	status,0,c
  7736   008680  EF44  F043         	goto	u3091
  7737   008684  EF46  F043         	goto	u3090
  7738   008688                     u3091:
  7739   008688  EF28  F043         	goto	l2985
  7740   00868C                     u3090:
  7741   00868C  0012               	return		;funcret
  7742   00868E                     __end_of_MSdelay:
  7743                           	callstack 0
  7744                           
  7745 ;; *************** function _Initialization *****************
  7746 ;; Defined at:
  7747 ;;		line 242 in file "LCD.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      void 
  7754 ;; Registers used:
  7755 ;;		wreg, status,2
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used: 1
  7767 ;; Hardware stack levels required when called: 2
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_main
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text31
  7776   0085A4                     __ptext31:
  7777                           	callstack 0
  7778   0085A4                     _Initialization:
  7779                           	callstack 28
  7780   0085A4                     
  7781                           ;LCD.c: 244:     PORTA = 0;
  7782   0085A4  6ACA               	clrf	202,c	;volatile
  7783                           
  7784                           ;LCD.c: 245:     LATA = 0;
  7785   0085A6  6ABA               	clrf	186,c	;volatile
  7786                           
  7787                           ;LCD.c: 246:     ANSELA = 0;
  7788   0085A8  013A               	movlb	58	; () banked
  7789   0085AA  6B40               	clrf	64,b	;volatile
  7790   0085AC                     
  7791                           ; BSR set to: 58
  7792                           ;LCD.c: 247:     TRISA = 0b00000111;
  7793   0085AC  0E07               	movlw	7
  7794   0085AE  6EC2               	movwf	194,c	;volatile
  7795   0085B0                     
  7796                           ; BSR set to: 58
  7797                           ;LCD.c: 248:     WPUA = 0b00000000;
  7798   0085B0  6B41               	clrf	65,b	;volatile
  7799   0085B2                     
  7800                           ; BSR set to: 58
  7801                           ;LCD.c: 249:     PORTB = 0;
  7802   0085B2  6ACB               	clrf	203,c	;volatile
  7803   0085B4                     
  7804                           ; BSR set to: 58
  7805                           ;LCD.c: 250:     LATB = 0;
  7806   0085B4  6ABB               	clrf	187,c	;volatile
  7807   0085B6                     
  7808                           ; BSR set to: 58
  7809                           ;LCD.c: 251:     ANSELB = 0b00000000;
  7810   0085B6  6B50               	clrf	80,b	;volatile
  7811   0085B8                     
  7812                           ; BSR set to: 58
  7813                           ;LCD.c: 252:     TRISB = 0b00000000;
  7814   0085B8  6AC3               	clrf	195,c	;volatile
  7815   0085BA                     
  7816                           ; BSR set to: 58
  7817                           ;LCD.c: 253:     WPUB = 0b00000000;
  7818   0085BA  6B51               	clrf	81,b	;volatile
  7819   0085BC                     
  7820                           ; BSR set to: 58
  7821                           ;LCD.c: 254:     PORTC = 0;
  7822   0085BC  6ACC               	clrf	204,c	;volatile
  7823   0085BE                     
  7824                           ; BSR set to: 58
  7825                           ;LCD.c: 255:     LATC = 0;
  7826   0085BE  6ABC               	clrf	188,c	;volatile
  7827   0085C0                     
  7828                           ; BSR set to: 58
  7829                           ;LCD.c: 256:     ANSELC = 0;
  7830   0085C0  6B60               	clrf	96,b	;volatile
  7831   0085C2                     
  7832                           ; BSR set to: 58
  7833                           ;LCD.c: 257:     TRISC = 0b00000000;
  7834   0085C2  6AC4               	clrf	196,c	;volatile
  7835   0085C4                     
  7836                           ; BSR set to: 58
  7837                           ;LCD.c: 258:     PORTD = 0;
  7838   0085C4  6ACD               	clrf	205,c	;volatile
  7839   0085C6                     
  7840                           ; BSR set to: 58
  7841                           ;LCD.c: 259:     LATD = 0;
  7842   0085C6  6ABD               	clrf	189,c	;volatile
  7843   0085C8                     
  7844                           ; BSR set to: 58
  7845                           ;LCD.c: 260:     ANSELD = 0;
  7846   0085C8  6B70               	clrf	112,b	;volatile
  7847   0085CA                     
  7848                           ; BSR set to: 58
  7849                           ;LCD.c: 261:     TRISD = 0b00000000;
  7850   0085CA  6AC5               	clrf	197,c	;volatile
  7851   0085CC                     
  7852                           ; BSR set to: 58
  7853                           ;LCD.c: 279:     IVTBASEU = 0x00;
  7854   0085CC  6AD7               	clrf	215,c	;volatile
  7855                           
  7856                           ;LCD.c: 280:     IVTBASEH = 0x60;
  7857   0085CE  0E60               	movlw	96
  7858   0085D0  6ED6               	movwf	214,c	;volatile
  7859                           
  7860                           ;LCD.c: 281:     IVTBASEL = 0x08;
  7861   0085D2  0E08               	movlw	8
  7862   0085D4  6ED5               	movwf	213,c	;volatile
  7863   0085D6                     
  7864                           ; BSR set to: 58
  7865                           ;LCD.c: 282:     IOCCFbits.IOCCF2 = 0;
  7866   0085D6  9567               	bcf	103,2,b	;volatile
  7867   0085D8                     
  7868                           ; BSR set to: 58
  7869                           ;LCD.c: 283:     PIE0bits.IOCIE = 0;
  7870   0085D8  0139               	movlb	57	; () banked
  7871   0085DA  9F90               	bcf	144,7,b	;volatile
  7872   0085DC                     
  7873                           ; BSR set to: 57
  7874                           ;LCD.c: 284:     IOCCPbits.IOCCP2 = 1;
  7875   0085DC  013A               	movlb	58	; () banked
  7876   0085DE  8565               	bsf	101,2,b	;volatile
  7877   0085E0                     
  7878                           ; BSR set to: 58
  7879                           ;LCD.c: 285:     IOCCNbits.IOCCN2 = 1;
  7880   0085E0  8566               	bsf	102,2,b	;volatile
  7881   0085E2                     
  7882                           ; BSR set to: 58
  7883                           ;LCD.c: 286:     IPR0bits.IOCIP = 1;
  7884   0085E2  0139               	movlb	57	; () banked
  7885   0085E4  8F80               	bsf	128,7,b	;volatile
  7886   0085E6                     
  7887                           ; BSR set to: 57
  7888                           ;LCD.c: 287:     PIR0bits.IOCIF = 0;
  7889   0085E6  9FA0               	bcf	160,7,b	;volatile
  7890   0085E8                     
  7891                           ; BSR set to: 57
  7892                           ;LCD.c: 288:     PIE0bits.IOCIE = 1;
  7893   0085E8  8F90               	bsf	144,7,b	;volatile
  7894   0085EA                     
  7895                           ; BSR set to: 57
  7896                           ;LCD.c: 289:     INTCON0bits.IPEN = 1;
  7897   0085EA  8AD2               	bsf	210,5,c	;volatile
  7898   0085EC                     
  7899                           ; BSR set to: 57
  7900                           ;LCD.c: 290:     INTCON0bits.GIEH = 1;
  7901   0085EC  8ED2               	bsf	210,7,c	;volatile
  7902   0085EE                     
  7903                           ; BSR set to: 57
  7904                           ;LCD.c: 291:     INTCON0bits.GIEL = 1;
  7905   0085EE  8CD2               	bsf	210,6,c	;volatile
  7906   0085F0                     
  7907                           ; BSR set to: 57
  7908                           ;LCD.c: 292:     INTCON0bits.GIE = 1;
  7909   0085F0  8ED2               	bsf	210,7,c	;volatile
  7910   0085F2                     
  7911                           ; BSR set to: 57
  7912   0085F2  0012               	return		;funcret
  7913   0085F4                     __end_of_Initialization:
  7914                           	callstack 0
  7915                           
  7916 ;; *************** function _ADC_Init *****************
  7917 ;; Defined at:
  7918 ;;		line 207 in file "LCD.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, status,2
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7936 ;;Total ram usage:        0 bytes
  7937 ;; Hardware stack levels used: 1
  7938 ;; Hardware stack levels required when called: 2
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_main
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text32
  7947   0088B2                     __ptext32:
  7948                           	callstack 0
  7949   0088B2                     _ADC_Init:
  7950                           	callstack 28
  7951   0088B2                     
  7952                           ;LCD.c: 226:     TRISAbits.TRISA0 = 1;
  7953   0088B2  80C2               	bsf	194,0,c	;volatile
  7954                           
  7955                           ;LCD.c: 227:     ANSELAbits.ANSELA0 = 1;
  7956   0088B4  013A               	movlb	58	; () banked
  7957   0088B6  8140               	bsf	64,0,b	;volatile
  7958   0088B8                     
  7959                           ; BSR set to: 58
  7960                           ;LCD.c: 228:     ADCON0bits.FM = 1;
  7961   0088B8  013E               	movlb	62	; () banked
  7962   0088BA  51F8               	movf	248,w,b	;volatile
  7963   0088BC  0BF3               	andlw	-13
  7964   0088BE  0904               	iorlw	4
  7965   0088C0  6FF8               	movwf	248,b	;volatile
  7966   0088C2                     
  7967                           ; BSR set to: 62
  7968                           ;LCD.c: 229:     ADCON0bits.CS = 1;
  7969   0088C2  89F8               	bsf	248,4,b	;volatile
  7970   0088C4                     
  7971                           ; BSR set to: 62
  7972                           ;LCD.c: 230:     ADCLK = 0x00;
  7973   0088C4  6BFF               	clrf	255,b	;volatile
  7974   0088C6                     
  7975                           ; BSR set to: 62
  7976                           ;LCD.c: 231:     ADPCH = 0x00;
  7977   0088C6  6BF1               	clrf	241,b	;volatile
  7978   0088C8                     
  7979                           ; BSR set to: 62
  7980                           ;LCD.c: 232:     ADCAP = 0x0;
  7981   0088C8  6BF5               	clrf	245,b	;volatile
  7982   0088CA                     
  7983                           ; BSR set to: 62
  7984                           ;LCD.c: 233:     ADREF = 0x0;
  7985   0088CA  6BFD               	clrf	253,b	;volatile
  7986   0088CC                     
  7987                           ; BSR set to: 62
  7988                           ;LCD.c: 234:     ADPREL = 0x0;
  7989   0088CC  6BF6               	clrf	246,b	;volatile
  7990   0088CE                     
  7991                           ; BSR set to: 62
  7992                           ;LCD.c: 235:     ADPREH = 0x0;
  7993   0088CE  6BF7               	clrf	247,b	;volatile
  7994   0088D0                     
  7995                           ; BSR set to: 62
  7996                           ;LCD.c: 236:     ADACQL = 0x00;
  7997   0088D0  6BF3               	clrf	243,b	;volatile
  7998   0088D2                     
  7999                           ; BSR set to: 62
  8000                           ;LCD.c: 237:     ADACQH = 0x00;
  8001   0088D2  6BF4               	clrf	244,b	;volatile
  8002   0088D4                     
  8003                           ; BSR set to: 62
  8004                           ;LCD.c: 238:     ADCON0bits.ON = 1;
  8005   0088D4  8FF8               	bsf	248,7,b	;volatile
  8006   0088D6                     
  8007                           ; BSR set to: 62
  8008   0088D6  0012               	return		;funcret
  8009   0088D8                     __end_of_ADC_Init:
  8010                           	callstack 0
  8011                           
  8012 ;; *************** function _my_ISR *****************
  8013 ;; Defined at:
  8014 ;;		line 298 in file "LCD.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;  i               2    2[COMRAM] int 
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8029 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8032 ;;Total ram usage:        4 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 1
  8035 ;; This function calls:
  8036 ;;		i2_Initialization
  8037 ;; This function is called by:
  8038 ;;		Interrupt level 2
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text33
  8043   008344                     __ptext33:
  8044                           	callstack 0
  8045   008344                     _my_ISR:
  8046                           	callstack 21
  8047   008344                     
  8048                           ;LCD.c: 301:     if (PIR1bits.ADIF)
  8049   008344  0139               	movlb	57	; () banked
  8050   008346  A5A1               	btfss	161,2,b	;volatile
  8051   008348  EFA8  F041         	goto	i2u182_41
  8052   00834C  EFAA  F041         	goto	i2u182_40
  8053   008350                     i2u182_41:
  8054   008350  EFDC  F041         	goto	i2l177
  8055   008354                     i2u182_40:
  8056   008354                     
  8057                           ; BSR set to: 57
  8058                           ;LCD.c: 302:     {;LCD.c: 303:     int i=10;
  8059   008354  0E00               	movlw	0
  8060   008356  6E04               	movwf	(my_ISR@i+1)^0,c
  8061   008358  0E0A               	movlw	10
  8062   00835A  6E03               	movwf	my_ISR@i^0,c
  8063                           
  8064                           ;LCD.c: 304:     while (i>0)
  8065   00835C  EFCB  F041         	goto	i2l174
  8066   008360                     i2l175:
  8067                           
  8068                           ;LCD.c: 305:     {;LCD.c: 306:         PORTCbits.RC3 = 1;
  8069   008360  86CC               	bsf	204,3,c	;volatile
  8070   008362                     
  8071                           ;LCD.c: 307:         _delay((unsigned long)((500)*(4000000/4000.0)));
  8072   008362  0E03               	movlw	3
  8073   008364  6E02               	movwf	(??_my_ISR+1)^0,c
  8074   008366  0E8A               	movlw	138
  8075   008368  6E01               	movwf	??_my_ISR^0,c
  8076   00836A  0E56               	movlw	86
  8077   00836C                     i2u367_47:
  8078   00836C  2EE8               	decfsz	wreg,f,c
  8079   00836E  D7FE               	bra	i2u367_47
  8080   008370  2E01               	decfsz	??_my_ISR^0,f,c
  8081   008372  D7FC               	bra	i2u367_47
  8082   008374  2E02               	decfsz	(??_my_ISR+1)^0,f,c
  8083   008376  D7FA               	bra	i2u367_47
  8084   008378                     
  8085                           ;LCD.c: 308:         PORTCbits.RC3 = 0;
  8086   008378  96CC               	bcf	204,3,c	;volatile
  8087                           
  8088                           ;LCD.c: 309:         _delay((unsigned long)((500)*(4000000/4000.0)));
  8089   00837A  0E03               	movlw	3
  8090   00837C  6E02               	movwf	(??_my_ISR+1)^0,c
  8091   00837E  0E8A               	movlw	138
  8092   008380  6E01               	movwf	??_my_ISR^0,c
  8093   008382  0E56               	movlw	86
  8094   008384                     i2u368_47:
  8095   008384  2EE8               	decfsz	wreg,f,c
  8096   008386  D7FE               	bra	i2u368_47
  8097   008388  2E01               	decfsz	??_my_ISR^0,f,c
  8098   00838A  D7FC               	bra	i2u368_47
  8099   00838C  2E02               	decfsz	(??_my_ISR+1)^0,f,c
  8100   00838E  D7FA               	bra	i2u368_47
  8101   008390                     
  8102                           ;LCD.c: 310:         i--;
  8103   008390  0603               	decf	my_ISR@i^0,f,c
  8104   008392  A0D8               	btfss	status,0,c
  8105   008394  0604               	decf	(my_ISR@i+1)^0,f,c
  8106   008396                     i2l174:
  8107                           
  8108                           ;LCD.c: 304:     while (i>0)
  8109   008396  BE04               	btfsc	(my_ISR@i+1)^0,7,c
  8110   008398  EFD8  F041         	goto	i2u183_40
  8111   00839C  5004               	movf	(my_ISR@i+1)^0,w,c
  8112   00839E  E106               	bnz	i2u183_41
  8113   0083A0  0403               	decf	my_ISR@i^0,w,c
  8114   0083A2  B0D8               	btfsc	status,0,c
  8115   0083A4  EFD6  F041         	goto	i2u183_41
  8116   0083A8  EFD8  F041         	goto	i2u183_40
  8117   0083AC                     i2u183_41:
  8118   0083AC  EFB0  F041         	goto	i2l175
  8119   0083B0                     i2u183_40:
  8120   0083B0                     
  8121                           ;LCD.c: 313:     PIR1bits.ADIF = 0;
  8122   0083B0  0139               	movlb	57	; () banked
  8123   0083B2  95A1               	bcf	161,2,b	;volatile
  8124   0083B4                     
  8125                           ; BSR set to: 57
  8126                           ;LCD.c: 317:     Initialization();
  8127   0083B4  ECFA  F042         	call	i2_Initialization	;wreg free
  8128   0083B8                     i2l177:
  8129   0083B8  0011               	retfie		f
  8130   0083BA                     __end_of_my_ISR:
  8131                           	callstack 0
  8132                           
  8133 ;; *************** function i2_Initialization *****************
  8134 ;; Defined at:
  8135 ;;		line 242 in file "LCD.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_my_ISR
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text34
  8163   0085F4                     __ptext34:
  8164                           	callstack 0
  8165   0085F4                     i2_Initialization:
  8166                           	callstack 21
  8167   0085F4                     
  8168                           ;LCD.c: 244:     PORTA = 0;
  8169   0085F4  6ACA               	clrf	202,c	;volatile
  8170                           
  8171                           ;LCD.c: 245:     LATA = 0;
  8172   0085F6  6ABA               	clrf	186,c	;volatile
  8173                           
  8174                           ;LCD.c: 246:     ANSELA = 0;
  8175   0085F8  013A               	movlb	58	; () banked
  8176   0085FA  6B40               	clrf	64,b	;volatile
  8177   0085FC                     
  8178                           ; BSR set to: 58
  8179                           ;LCD.c: 247:     TRISA = 0b00000111;
  8180   0085FC  0E07               	movlw	7
  8181   0085FE  6EC2               	movwf	194,c	;volatile
  8182   008600                     
  8183                           ; BSR set to: 58
  8184                           ;LCD.c: 248:     WPUA = 0b00000000;
  8185   008600  6B41               	clrf	65,b	;volatile
  8186   008602                     
  8187                           ; BSR set to: 58
  8188                           ;LCD.c: 249:     PORTB = 0;
  8189   008602  6ACB               	clrf	203,c	;volatile
  8190   008604                     
  8191                           ; BSR set to: 58
  8192                           ;LCD.c: 250:     LATB = 0;
  8193   008604  6ABB               	clrf	187,c	;volatile
  8194   008606                     
  8195                           ; BSR set to: 58
  8196                           ;LCD.c: 251:     ANSELB = 0b00000000;
  8197   008606  6B50               	clrf	80,b	;volatile
  8198   008608                     
  8199                           ; BSR set to: 58
  8200                           ;LCD.c: 252:     TRISB = 0b00000000;
  8201   008608  6AC3               	clrf	195,c	;volatile
  8202   00860A                     
  8203                           ; BSR set to: 58
  8204                           ;LCD.c: 253:     WPUB = 0b00000000;
  8205   00860A  6B51               	clrf	81,b	;volatile
  8206   00860C                     
  8207                           ; BSR set to: 58
  8208                           ;LCD.c: 254:     PORTC = 0;
  8209   00860C  6ACC               	clrf	204,c	;volatile
  8210   00860E                     
  8211                           ; BSR set to: 58
  8212                           ;LCD.c: 255:     LATC = 0;
  8213   00860E  6ABC               	clrf	188,c	;volatile
  8214   008610                     
  8215                           ; BSR set to: 58
  8216                           ;LCD.c: 256:     ANSELC = 0;
  8217   008610  6B60               	clrf	96,b	;volatile
  8218   008612                     
  8219                           ; BSR set to: 58
  8220                           ;LCD.c: 257:     TRISC = 0b00000000;
  8221   008612  6AC4               	clrf	196,c	;volatile
  8222   008614                     
  8223                           ; BSR set to: 58
  8224                           ;LCD.c: 258:     PORTD = 0;
  8225   008614  6ACD               	clrf	205,c	;volatile
  8226   008616                     
  8227                           ; BSR set to: 58
  8228                           ;LCD.c: 259:     LATD = 0;
  8229   008616  6ABD               	clrf	189,c	;volatile
  8230   008618                     
  8231                           ; BSR set to: 58
  8232                           ;LCD.c: 260:     ANSELD = 0;
  8233   008618  6B70               	clrf	112,b	;volatile
  8234   00861A                     
  8235                           ; BSR set to: 58
  8236                           ;LCD.c: 261:     TRISD = 0b00000000;
  8237   00861A  6AC5               	clrf	197,c	;volatile
  8238   00861C                     
  8239                           ; BSR set to: 58
  8240                           ;LCD.c: 279:     IVTBASEU = 0x00;
  8241   00861C  6AD7               	clrf	215,c	;volatile
  8242                           
  8243                           ;LCD.c: 280:     IVTBASEH = 0x60;
  8244   00861E  0E60               	movlw	96
  8245   008620  6ED6               	movwf	214,c	;volatile
  8246                           
  8247                           ;LCD.c: 281:     IVTBASEL = 0x08;
  8248   008622  0E08               	movlw	8
  8249   008624  6ED5               	movwf	213,c	;volatile
  8250   008626                     
  8251                           ; BSR set to: 58
  8252                           ;LCD.c: 282:     IOCCFbits.IOCCF2 = 0;
  8253   008626  9567               	bcf	103,2,b	;volatile
  8254   008628                     
  8255                           ; BSR set to: 58
  8256                           ;LCD.c: 283:     PIE0bits.IOCIE = 0;
  8257   008628  0139               	movlb	57	; () banked
  8258   00862A  9F90               	bcf	144,7,b	;volatile
  8259   00862C                     
  8260                           ; BSR set to: 57
  8261                           ;LCD.c: 284:     IOCCPbits.IOCCP2 = 1;
  8262   00862C  013A               	movlb	58	; () banked
  8263   00862E  8565               	bsf	101,2,b	;volatile
  8264   008630                     
  8265                           ; BSR set to: 58
  8266                           ;LCD.c: 285:     IOCCNbits.IOCCN2 = 1;
  8267   008630  8566               	bsf	102,2,b	;volatile
  8268   008632                     
  8269                           ; BSR set to: 58
  8270                           ;LCD.c: 286:     IPR0bits.IOCIP = 1;
  8271   008632  0139               	movlb	57	; () banked
  8272   008634  8F80               	bsf	128,7,b	;volatile
  8273   008636                     
  8274                           ; BSR set to: 57
  8275                           ;LCD.c: 287:     PIR0bits.IOCIF = 0;
  8276   008636  9FA0               	bcf	160,7,b	;volatile
  8277   008638                     
  8278                           ; BSR set to: 57
  8279                           ;LCD.c: 288:     PIE0bits.IOCIE = 1;
  8280   008638  8F90               	bsf	144,7,b	;volatile
  8281   00863A                     
  8282                           ; BSR set to: 57
  8283                           ;LCD.c: 289:     INTCON0bits.IPEN = 1;
  8284   00863A  8AD2               	bsf	210,5,c	;volatile
  8285   00863C                     
  8286                           ; BSR set to: 57
  8287                           ;LCD.c: 290:     INTCON0bits.GIEH = 1;
  8288   00863C  8ED2               	bsf	210,7,c	;volatile
  8289   00863E                     
  8290                           ; BSR set to: 57
  8291                           ;LCD.c: 291:     INTCON0bits.GIEL = 1;
  8292   00863E  8CD2               	bsf	210,6,c	;volatile
  8293   008640                     
  8294                           ; BSR set to: 57
  8295                           ;LCD.c: 292:     INTCON0bits.GIE = 1;
  8296   008640  8ED2               	bsf	210,7,c	;volatile
  8297   008642                     
  8298                           ; BSR set to: 57
  8299   008642  0012               	return		;funcret
  8300   008644                     __end_ofi2_Initialization:
  8301                           	callstack 0
  8302                           
  8303                           ;
  8304                           ; H/W Interrupt Vector Table @ 0x6008
  8305                           ;
  8306                           
  8307                           	psect	ivt0x6008
  8308   006008                     __pivt0x6008:
  8309                           	callstack 0
  8310   006008                     ivt0x6008_base:
  8311                           	callstack 0
  8312                           
  8313                           ; Vector 0 : SWINT
  8314   006008  20D1               	dw	_my_ISR shr (0+2)
  8315                           
  8316                           ; Vector 1 : HLVD
  8317   00600A  20D1               	dw	_my_ISR shr (0+2)
  8318                           
  8319                           ; Vector 2 : OSF
  8320   00600C  20D1               	dw	_my_ISR shr (0+2)
  8321                           
  8322                           ; Vector 3 : CSW
  8323   00600E  20D1               	dw	_my_ISR shr (0+2)
  8324                           
  8325                           ; Vector 4 : NVM
  8326   006010  20D1               	dw	_my_ISR shr (0+2)
  8327                           
  8328                           ; Vector 5 : SCAN
  8329   006012  20D1               	dw	_my_ISR shr (0+2)
  8330                           
  8331                           ; Vector 6 : CRC
  8332   006014  20D1               	dw	_my_ISR shr (0+2)
  8333                           
  8334                           ; Vector 7 : IOC
  8335   006016  20D1               	dw	_my_ISR shr (0+2)
  8336                           
  8337                           ; Vector 8 : INT0
  8338   006018  20D1               	dw	_my_ISR shr (0+2)
  8339                           
  8340                           ; Vector 9 : ZCD
  8341   00601A  20D1               	dw	_my_ISR shr (0+2)
  8342                           
  8343                           ; Vector 10 : AD
  8344   00601C  20D1               	dw	_my_ISR shr (0+2)
  8345                           
  8346                           ; Vector 11 : ADT
  8347   00601E  20D1               	dw	_my_ISR shr (0+2)
  8348                           
  8349                           ; Vector 12 : CMP1
  8350   006020  20D1               	dw	_my_ISR shr (0+2)
  8351                           
  8352                           ; Vector 13 : SMT1
  8353   006022  20D1               	dw	_my_ISR shr (0+2)
  8354                           
  8355                           ; Vector 14 : SMT1PRA
  8356   006024  20D1               	dw	_my_ISR shr (0+2)
  8357                           
  8358                           ; Vector 15 : SMT1PRW
  8359   006026  20D1               	dw	_my_ISR shr (0+2)
  8360                           
  8361                           ; Vector 16 : DMA1SCNT
  8362   006028  20D1               	dw	_my_ISR shr (0+2)
  8363                           
  8364                           ; Vector 17 : DMA1DCNT
  8365   00602A  20D1               	dw	_my_ISR shr (0+2)
  8366                           
  8367                           ; Vector 18 : DMA1OR
  8368   00602C  20D1               	dw	_my_ISR shr (0+2)
  8369                           
  8370                           ; Vector 19 : DMA1A
  8371   00602E  20D1               	dw	_my_ISR shr (0+2)
  8372                           
  8373                           ; Vector 20 : SPI1RX
  8374   006030  20D1               	dw	_my_ISR shr (0+2)
  8375                           
  8376                           ; Vector 21 : SPI1TX
  8377   006032  20D1               	dw	_my_ISR shr (0+2)
  8378                           
  8379                           ; Vector 22 : SPI1
  8380   006034  20D1               	dw	_my_ISR shr (0+2)
  8381                           
  8382                           ; Vector 23 : I2C1RX
  8383   006036  20D1               	dw	_my_ISR shr (0+2)
  8384                           
  8385                           ; Vector 24 : I2C1TX
  8386   006038  20D1               	dw	_my_ISR shr (0+2)
  8387                           
  8388                           ; Vector 25 : I2C1
  8389   00603A  20D1               	dw	_my_ISR shr (0+2)
  8390                           
  8391                           ; Vector 26 : I2C1E
  8392   00603C  20D1               	dw	_my_ISR shr (0+2)
  8393                           
  8394                           ; Vector 27 : U1RX
  8395   00603E  20D1               	dw	_my_ISR shr (0+2)
  8396                           
  8397                           ; Vector 28 : U1TX
  8398   006040  20D1               	dw	_my_ISR shr (0+2)
  8399                           
  8400                           ; Vector 29 : U1E
  8401   006042  20D1               	dw	_my_ISR shr (0+2)
  8402                           
  8403                           ; Vector 30 : U1
  8404   006044  20D1               	dw	_my_ISR shr (0+2)
  8405                           
  8406                           ; Vector 31 : TMR0
  8407   006046  20D1               	dw	_my_ISR shr (0+2)
  8408                           
  8409                           ; Vector 32 : TMR1
  8410   006048  20D1               	dw	_my_ISR shr (0+2)
  8411                           
  8412                           ; Vector 33 : TMR1G
  8413   00604A  20D1               	dw	_my_ISR shr (0+2)
  8414                           
  8415                           ; Vector 34 : TMR2
  8416   00604C  20D1               	dw	_my_ISR shr (0+2)
  8417                           
  8418                           ; Vector 35 : CCP1
  8419   00604E  20D1               	dw	_my_ISR shr (0+2)
  8420                           
  8421                           ; Vector 36 : Undefined
  8422   006050  182B               	dw	ivt0x6008_undefint shr (0+2)
  8423                           
  8424                           ; Vector 37 : NCO1
  8425   006052  20D1               	dw	_my_ISR shr (0+2)
  8426                           
  8427                           ; Vector 38 : CWG1
  8428   006054  20D1               	dw	_my_ISR shr (0+2)
  8429                           
  8430                           ; Vector 39 : CLC1
  8431   006056  20D1               	dw	_my_ISR shr (0+2)
  8432                           
  8433                           ; Vector 40 : INT1
  8434   006058  20D1               	dw	_my_ISR shr (0+2)
  8435                           
  8436                           ; Vector 41 : CMP2
  8437   00605A  20D1               	dw	_my_ISR shr (0+2)
  8438                           
  8439                           ; Vector 42 : DMA2SCNT
  8440   00605C  20D1               	dw	_my_ISR shr (0+2)
  8441                           
  8442                           ; Vector 43 : DMA2DCNT
  8443   00605E  20D1               	dw	_my_ISR shr (0+2)
  8444                           
  8445                           ; Vector 44 : DMA2OR
  8446   006060  20D1               	dw	_my_ISR shr (0+2)
  8447                           
  8448                           ; Vector 45 : DMA2A
  8449   006062  20D1               	dw	_my_ISR shr (0+2)
  8450                           
  8451                           ; Vector 46 : I2C2RX
  8452   006064  20D1               	dw	_my_ISR shr (0+2)
  8453                           
  8454                           ; Vector 47 : I2C2TX
  8455   006066  20D1               	dw	_my_ISR shr (0+2)
  8456                           
  8457                           ; Vector 48 : I2C2
  8458   006068  20D1               	dw	_my_ISR shr (0+2)
  8459                           
  8460                           ; Vector 49 : I2C2E
  8461   00606A  20D1               	dw	_my_ISR shr (0+2)
  8462                           
  8463                           ; Vector 50 : U2RX
  8464   00606C  20D1               	dw	_my_ISR shr (0+2)
  8465                           
  8466                           ; Vector 51 : U2TX
  8467   00606E  20D1               	dw	_my_ISR shr (0+2)
  8468                           
  8469                           ; Vector 52 : U2E
  8470   006070  20D1               	dw	_my_ISR shr (0+2)
  8471                           
  8472                           ; Vector 53 : U2
  8473   006072  20D1               	dw	_my_ISR shr (0+2)
  8474                           
  8475                           ; Vector 54 : TMR3
  8476   006074  20D1               	dw	_my_ISR shr (0+2)
  8477                           
  8478                           ; Vector 55 : TMR3G
  8479   006076  20D1               	dw	_my_ISR shr (0+2)
  8480                           
  8481                           ; Vector 56 : TMR4
  8482   006078  20D1               	dw	_my_ISR shr (0+2)
  8483                           
  8484                           ; Vector 57 : CCP2
  8485   00607A  20D1               	dw	_my_ISR shr (0+2)
  8486                           
  8487                           ; Vector 58 : Undefined
  8488   00607C  182B               	dw	ivt0x6008_undefint shr (0+2)
  8489                           
  8490                           ; Vector 59 : CWG2
  8491   00607E  20D1               	dw	_my_ISR shr (0+2)
  8492                           
  8493                           ; Vector 60 : CLC2
  8494   006080  20D1               	dw	_my_ISR shr (0+2)
  8495                           
  8496                           ; Vector 61 : INT2
  8497   006082  20D1               	dw	_my_ISR shr (0+2)
  8498                           
  8499                           ; Vector 62 : Undefined
  8500   006084  182B               	dw	ivt0x6008_undefint shr (0+2)
  8501                           
  8502                           ; Vector 63 : Undefined
  8503   006086  182B               	dw	ivt0x6008_undefint shr (0+2)
  8504                           
  8505                           ; Vector 64 : Undefined
  8506   006088  182B               	dw	ivt0x6008_undefint shr (0+2)
  8507                           
  8508                           ; Vector 65 : Undefined
  8509   00608A  182B               	dw	ivt0x6008_undefint shr (0+2)
  8510                           
  8511                           ; Vector 66 : Undefined
  8512   00608C  182B               	dw	ivt0x6008_undefint shr (0+2)
  8513                           
  8514                           ; Vector 67 : Undefined
  8515   00608E  182B               	dw	ivt0x6008_undefint shr (0+2)
  8516                           
  8517                           ; Vector 68 : Undefined
  8518   006090  182B               	dw	ivt0x6008_undefint shr (0+2)
  8519                           
  8520                           ; Vector 69 : Undefined
  8521   006092  182B               	dw	ivt0x6008_undefint shr (0+2)
  8522                           
  8523                           ; Vector 70 : TMR5
  8524   006094  20D1               	dw	_my_ISR shr (0+2)
  8525                           
  8526                           ; Vector 71 : TMR5G
  8527   006096  20D1               	dw	_my_ISR shr (0+2)
  8528                           
  8529                           ; Vector 72 : TMR6
  8530   006098  20D1               	dw	_my_ISR shr (0+2)
  8531                           
  8532                           ; Vector 73 : CCP3
  8533   00609A  20D1               	dw	_my_ISR shr (0+2)
  8534                           
  8535                           ; Vector 74 : CWG3
  8536   00609C  20D1               	dw	_my_ISR shr (0+2)
  8537                           
  8538                           ; Vector 75 : CLC3
  8539   00609E  20D1               	dw	_my_ISR shr (0+2)
  8540                           
  8541                           ; Vector 76 : Undefined
  8542   0060A0  182B               	dw	ivt0x6008_undefint shr (0+2)
  8543                           
  8544                           ; Vector 77 : Undefined
  8545   0060A2  182B               	dw	ivt0x6008_undefint shr (0+2)
  8546                           
  8547                           ; Vector 78 : Undefined
  8548   0060A4  182B               	dw	ivt0x6008_undefint shr (0+2)
  8549                           
  8550                           ; Vector 79 : Undefined
  8551   0060A6  182B               	dw	ivt0x6008_undefint shr (0+2)
  8552                           
  8553                           ; Vector 80 : CCP4
  8554   0060A8  20D1               	dw	_my_ISR shr (0+2)
  8555                           
  8556                           ; Vector 81 : CLC4
  8557   0060AA  20D1               	dw	_my_ISR shr (0+2)
  8558   0060AC                     ivt0x6008_undefint:
  8559                           	callstack 0
  8560   0060AC  00FF               	reset	
  8561                           
  8562                           	psect	rparam
  8563   000001                     ___rparam_used  equ	1
  8564   000000                     ___param_bank   equ	0
  8565   000000                     __Lparam        equ	__Lrparam
  8566   000000                     __Hparam        equ	__Hrparam
  8567                           
  8568                           	psect	config
  8569                           
  8570                           ;Config register CONFIG1L @ 0x300000
  8571                           ;	External Oscillator Selection
  8572                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  8573                           ;	Reset Oscillator Selection
  8574                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  8575   300000                     	org	3145728
  8576   300000  F8                 	db	248
  8577                           
  8578                           ;Config register CONFIG1H @ 0x300001
  8579                           ;	Clock out Enable bit
  8580                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  8581                           ;	PRLOCKED One-Way Set Enable bit
  8582                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  8583                           ;	Clock Switch Enable bit
  8584                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8585                           ;	Fail-Safe Clock Monitor Enable bit
  8586                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  8587   300001                     	org	3145729
  8588   300001  FF                 	db	255
  8589                           
  8590                           ;Config register CONFIG2L @ 0x300002
  8591                           ;	MCLR Enable bit
  8592                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  8593                           ;	Power-up timer selection bits
  8594                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  8595                           ;	Multi-vector enable bit
  8596                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  8597                           ;	IVTLOCK bit One-way set enable bit
  8598                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  8599                           ;	Low Power BOR Enable bit
  8600                           ;	LPBOREN = OFF, ULPBOR disabled
  8601                           ;	Brown-out Reset Enable bits
  8602                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  8603   300002                     	org	3145730
  8604   300002  FF                 	db	255
  8605                           
  8606                           ;Config register CONFIG2H @ 0x300003
  8607                           ;	Brown-out Reset Voltage Selection bits
  8608                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  8609                           ;	ZCD Disable bit
  8610                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  8611                           ;	PPSLOCK bit One-Way Set Enable bit
  8612                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  8613                           ;	Stack Full/Underflow Reset Enable bit
  8614                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8615                           ;	Debugger Enable bit
  8616                           ;	DEBUG = OFF, Background debugger disabled
  8617                           ;	Extended Instruction Set Enable bit
  8618                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  8619   300003                     	org	3145731
  8620   300003  FF                 	db	255
  8621                           
  8622                           ;Config register CONFIG3L @ 0x300004
  8623                           ;	WDT Period selection bits
  8624                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8625                           ;	WDT operating mode
  8626                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  8627   300004                     	org	3145732
  8628   300004  9F                 	db	159
  8629                           
  8630                           ;Config register CONFIG3H @ 0x300005
  8631                           ;	WDT Window Select bits
  8632                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8633                           ;	WDT input clock selector
  8634                           ;	WDTCCS = SC, Software Control
  8635   300005                     	org	3145733
  8636   300005  FF                 	db	255
  8637                           
  8638                           ;Config register CONFIG4L @ 0x300006
  8639                           ;	Boot Block Size selection bits
  8640                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  8641                           ;	Boot Block enable bit
  8642                           ;	BBEN = OFF, Boot block disabled
  8643                           ;	Storage Area Flash enable bit
  8644                           ;	SAFEN = OFF, SAF disabled
  8645                           ;	Application Block write protection bit
  8646                           ;	WRTAPP = OFF, Application Block not write protected
  8647   300006                     	org	3145734
  8648   300006  FF                 	db	255
  8649                           
  8650                           ;Config register CONFIG4H @ 0x300007
  8651                           ;	Boot Block Write Protection bit
  8652                           ;	WRTB = OFF, Boot Block not write-protected
  8653                           ;	Configuration Register Write Protection bit
  8654                           ;	WRTC = OFF, Configuration registers not write-protected
  8655                           ;	Data EEPROM Write Protection bit
  8656                           ;	WRTD = OFF, Data EEPROM not write-protected
  8657                           ;	SAF Write protection bit
  8658                           ;	WRTSAF = OFF, SAF not Write Protected
  8659                           ;	Low Voltage Programming Enable bit
  8660                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  8661   300007                     	org	3145735
  8662   300007  FF                 	db	255
  8663                           
  8664                           ;Config register CONFIG5L @ 0x300008
  8665                           ;	PFM and Data EEPROM Code Protection bit
  8666                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  8667   300008                     	org	3145736
  8668   300008  FF                 	db	255
  8669                           
  8670                           ;Config register CONFIG5H @ 0x300009
  8671                           ;	unspecified, using default values
  8672   300009                     	org	3145737
  8673   300009  FF                 	db	255
  8674                           tosu	equ	0x3FFF
  8675                           tosh	equ	0x3FFE
  8676                           tosl	equ	0x3FFD
  8677                           stkptr	equ	0x3FFC
  8678                           pclatu	equ	0x3FFB
  8679                           pclath	equ	0x3FFA
  8680                           pcl	equ	0x3FF9
  8681                           tblptru	equ	0x3FF8
  8682                           tblptrh	equ	0x3FF7
  8683                           tblptrl	equ	0x3FF6
  8684                           tablat	equ	0x3FF5
  8685                           prodh	equ	0x3FF4
  8686                           prodl	equ	0x3FF3
  8687                           indf0	equ	0x3FEF
  8688                           postinc0	equ	0x3FEE
  8689                           postdec0	equ	0x3FED
  8690                           preinc0	equ	0x3FEC
  8691                           plusw0	equ	0x3FEB
  8692                           fsr0h	equ	0x3FEA
  8693                           fsr0l	equ	0x3FE9
  8694                           wreg	equ	0x3FE8
  8695                           indf1	equ	0x3FE7
  8696                           postinc1	equ	0x3FE6
  8697                           postdec1	equ	0x3FE5
  8698                           preinc1	equ	0x3FE4
  8699                           plusw1	equ	0x3FE3
  8700                           fsr1h	equ	0x3FE2
  8701                           fsr1l	equ	0x3FE1
  8702                           bsr	equ	0x3FE0
  8703                           indf2	equ	0x3FDF
  8704                           postinc2	equ	0x3FDE
  8705                           postdec2	equ	0x3FDD
  8706                           preinc2	equ	0x3FDC
  8707                           plusw2	equ	0x3FDB
  8708                           fsr2h	equ	0x3FDA
  8709                           fsr2l	equ	0x3FD9
  8710                           status	equ	0x3FD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      91
    BANK0           160     58      84
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> data(BANK0[10]), STR_3(CODE[17]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> data(BANK0[10]), STR_3(CODE[17]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S976$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    S976$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _my_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _my_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _my_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _my_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _my_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _my_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _my_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _my_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _my_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _my_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _my_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _my_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _my_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _my_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _my_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _my_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _my_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _my_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _my_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _my_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _my_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _my_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _my_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _my_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _my_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _my_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14776
                                             56 BANK0      2     2      0
                           _ADC_Init
                     _Initialization
                           _LCD_Init
                      _LCD_String_xy
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     2      2     122
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   12176
                                             71 COMRAM    12    12      0
                                             50 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   11971
                                             70 COMRAM     1     1      0
                                             47 BANK0      3     0      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   11837
                                             63 COMRAM     7     7      0
                                             44 BANK0      3     0      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   10907
                                             55 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3      77
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5     707
                                             18 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     331
                                             12 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     146
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2037
                                             43 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1988
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1482
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     190
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1131
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     440
                                             13 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     170
                                             11 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     124
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     124
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2      95
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Initialization                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _my_ISR                                               4     4      0      15
                                              0 COMRAM     4     4      0
                   i2_Initialization
 ---------------------------------------------------------------------------------
 (10) i2_Initialization                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Initialization
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
   _strcat

 _my_ISR (ROOT)
   i2_Initialization

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1169      0       0      0.0%
BITBIGSFRllll      384      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBIGSFRllh       213      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     58      84     52.5%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     83      91     95.8%
BITBIGSFRlllh       15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     254      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 22:39:53 2025

              ___fldiv@aexp 001D                ___fldiv@bexp 001C                           _x 005B  
              ___fldiv@sign 0015                ?_LCD_Command 0001                 ?_LCD_String 000C  
                       l140 8912                         l134 88B0                         l126 7D0E  
                       l143 88F4                         l162 868C                         l154 87E0  
                       l165 88D6                         l149 842A                         l168 85F2  
                       l450 8034                         l445 7FEE                         l454 8850  
                       l710 6C34                         l439 8340                         l801 722C  
                       l802 724A                         l722 6E28                         l811 7358  
                       l803 72A2                         l804 7290                         l708 6C80  
                       l900 6A96                         l741 6F10                         l725 6D9A  
                       l717 6F4C                         l709 6C6E                         l477 7F30  
                       l734 6E68                         l750 8760                         l735 6E56  
                       l903 6436                         l905 627C                         l842 7C3C  
                       l762 7726                         l835 7BA4                         l764 758A  
                       l773 75D0                         l933 687C                         l838 7D00  
                       l774 75EE                         l775 7646                         l767 754E  
                       l776 7634                         l849 7C98                         l945 81E2  
                       l794 7012                         l858 8818                         l885 8442  
                       l949 81EA                         l798 7396                         l959 77E2  
                       l976 86D4                         l993 7B4C                         l889 8490  
                       l969 793A                         l986 8132                         l996 7A90  
                       _LUX 00A2                         _pad 842C                         wreg 3FE8  
              ___flmul@aexp 0024                ___flmul@bexp 0025                ___flmul@sign 001F  
              ___flmul@temp 002A                ___flmul@prod 0026                 LCD_Char@dat 000B  
              ___fltol@exp1 000E                        l1013 854C                        l1007 85A2  
                      l1025 8296                        l1033 87A0                        l1051 871A  
                      l1036 8914                        l1045 84F2                        l3001 60C6  
                      l3011 610E                        l3003 60D4                        l3101 64A6  
                      l3013 611E                        l3021 6146                        l3005 60D8  
                      l3111 64EC                        l3103 64B8                        l3031 6190  
                      l3023 616C                        l3015 612E                        l3007 60FC  
                      l2401 6BBC                        l2321 81EC                        l3201 69E6  
                      l3121 6600                        l3113 6550                        l3105 64C0  
                      l3041 61F0                        l3033 61A4                        l3025 617E  
                      l3017 613A                        l3009 6106                        l2411 6BD0  
                      l2403 6BC0                        l2331 8264                        l2323 81FC  
                      l3211 6A5A                        l3203 69F4                        l3131 66BE  
                      l3123 6634                        l3115 65A8                        l3107 64C8  
                      l3043 6202                        l3035 61AE                        l3027 6182  
                      l3019 6142                        l3301 88F8                        l2501 6E84  
                      l2421 6C42                        l2405 6BC4                        l2413 6BD4  
                      l2341 6AB4                        l2325 820C                        l3213 6A72  
                      l3205 6A24                        l3141 6792                        l3133 66CE  
                      l3125 6666                        l3117 65DC                        l3109 64D8  
                      l3045 6206                        l3029 6188                        l3221 813C  
                      l3311 8906                        l3303 88FE                        l2511 6EEE  
                      l2503 6E92                        l2431 6C6C                        l2423 6C4E  
                      l2415 6C00                        l2407 6BC8                        l2343 6AC4  
                      l2351 6AEC                        l2335 6A98                        l2327 8216  
                      l3215 6A7A                        l3207 6A32                        l3151 67C6  
                      l3143 67A6                        l3135 6702                        l3127 667C  
                      l3119 65E2                        l3071 6336                        l3063 628C  
                      l3047 620C                        l3039 61CA                        l3223 8164  
                      l3231 81B6                        l3401 88CC                        l3305 8900  
                      l3241 88E6                        l3233 88DA                        l3313 83BA  
                      l2601 7504                        l2521 6F2C                        l2513 6F0E  
                      l2505 6ECC                        l2441 6CC2                        l2433 6C8E  
                      l2425 6C52                        l2417 6C1C                        l2409 6BCC  
                      l2361 6B1C                        l2353 6AFC                        l2345 6AD4  
                      l2337 6AA4                        l2329 8232                        l3209 6A4A  
                      l3161 688E                        l3153 67CE                        l3137 6758  
                      l3145 67AA                        l3129 66AE                        l3073 6374  
                      l3065 6292                        l3049 6214                        l3057 622C  
                      l3225 816C                        l3321 868E                        l3403 88CE  
                      l3331 85A4                        l3307 8902                        l3243 88E8  
                      l3235 88E0                        l3315 83BE                        l2611 754C  
                      l2603 7514                        l2523 6F3A                        l2515 6F1E  
                      l2507 6ECE                        l2451 6CFC                        l2443 6CD0  
                      l2435 6C9E                        l2427 6C60                        l2419 6C2C  
                      l2371 6B5C                        l2363 6B2A                        l2355 6B02  
                      l2347 6AE4                        l2339 6AB2                        l2531 876E  
                      l3171 68BE                        l3163 689C                        l3155 67DA  
                      l3147 67BA                        l3139 675E                        l3091 6462  
                      l3075 6388                        l3083 6404                        l3067 62C6  
                      l3059 6246                        l3227 818C                        l3219 8134  
                      l3251 7766                        l3323 8696                        l3411 87E2  
                      l3405 88D0                        l3341 85B6                        l3333 85AC  
                      l3309 8904                        l3237 88E2                        l3317 83EC  
                      l2621 759A                        l2613 7558                        l2605 751A  
                      l2541 73B2                        l2701 6FEC                        l2525 6F3C  
                      l2517 6F24                        l2509 6EDE                        l2461 6D68  
                      l2453 6CFE                        l2445 6CDE                        l2429 6C62  
                      l2381 6B94                        l2373 6B5E                        l2365 6B2C  
                      l2357 6B14                        l2349 6AE6                        l2533 877C  
                      l3181 68F0                        l3173 68CE                        l3165 68AC  
                      l3157 6852                        l3149 67C2                        l3093 646A  
                      l3085 643E                        l3077 63BC                        l3069 6304  
                      l3229 81AE                        l3261 77BA                        l3253 776A  
                      l3245 7728                        l3325 86A8                        l3413 87EA  
                      l3407 88D2                        l3351 85C0                        l3343 85B8  
                      l3335 85B0                        l3239 88E4                        l3319 83F0  
                      l2623 75B0                        l2631 75E0                        l2615 7576  
                      l2607 752A                        l2551 73E6                        l2543 73B4  
                      l2703 6FFC                        l2519 6F26                        l2471 6DC0  
                      l2463 6D6A                        l2455 6D08                        l2447 6CEA  
                      l2439 6CB2                        l2391 6BA8                        l2383 6B98  
                      l2367 6B3C                        l2375 6B64                        l2359 6B16  
                      l2535 8780                        l3191 6998                        l3183 6902  
                      l3175 68D2                        l3167 68B0                        l3159 6872  
                      l3095 646E                        l3087 644E                        l3079 63C4  
                      l3271 7806                        l3263 77D4                        l3255 7792  
                      l3247 7752                        l3327 86CA                        l3415 87F2  
                      l3431 84C4                        l3423 8492                        l3409 88D4  
                      l3361 85CA                        l3353 85C2                        l3345 85BA  
                      l3337 85B2                        l3433 8888                        l3441 87A4  
                      l2641 7662                        l2633 75FE                        l2625 75B6  
                      l2617 7578                        l2609 753E                        l2561 7416  
                      l2545 73C4                        l2553 73EC                        l2537 7398  
                      l2721 7086                        l2713 7046                        l2705 7002  
                      l2481 6DEE                        l2465 6D7A                        l2449 6CEE  
                      l2457 6D0E                        l2393 6BAC                        l2385 6B9C  
                      l2377 6B74                        l2369 6B4C                        l2801 871C  
                      l2529 8762                        l3193 69A0                        l3185 6906  
                      l3177 68D8                        l3169 68B6                        l3097 6480  
                      l3089 645A                        l3281 78A6                        l3273 782C  
                      l3265 77DA                        l3257 779A                        l3249 775A  
                      l3417 87FA                        l3425 849E                        l3371 85E0  
                      l3363 85CC                        l3355 85C4                        l3347 85BC  
                      l3339 85B4                        l3435 8894                        l3451 87D4  
                      l3443 87B4                        l2651 76CE                        l2643 7670  
                      l2635 762C                        l2627 75C0                        l2619 7588  
                      l2571 744A                        l2563 7418                        l2555 73FC  
                      l2547 73D4                        l2539 73A4                        l2811 82D6  
                      l2731 70D8                        l2723 70A2                        l2715 7056  
                      l2707 7022                        l2483 6DFC                        l2475 6DD4  
                      l2491 6E1A                        l2459 6D34                        l2467 6D8A  
                      l2395 6BB0                        l2387 6BA0                        l2379 6B86  
                      l2803 872C                        l3187 690C                        l3179 68DE  
                      l3195 69A4                        l3099 648E                        l3283 78B4  
                      l3275 785E                        l3291 7904                        l3259 77AE  
                      l3419 880C                        l3427 84A2                        l3531 7D82  
                      l3523 7D02                        l3381 85EC                        l3373 85E2  
                      l3365 85D6                        l3357 85C6                        l3349 85BE  
                      l3437 8896                        l3445 87BC                        l3461 7BCA  
                      l3453 7B50                        l2661 7714                        l2653 76E8  
                      l2645 769A                        l2629 75CE                        l2581 748E  
                      l2565 7428                        l2573 7450                        l2557 7402  
                      l2549 73E4                        l2813 8304                        l2741 7136  
                      l2733 70E8                        l2725 70AE                        l2717 7060  
                      l2709 7032                        l2493 6E38                        l2485 6E04  
                      l2477 6DDE                        l2469 6DB0                        l2397 6BB4  
                      l2389 6BA4                        l2901 844E                        l3197 69C2  
                      l3189 6964                        l3269 77E8                        l3429 84BE  
                      l3541 7DFA                        l3533 7DB6                        l3525 7D0A  
                      l3391 88C2                        l3383 85EE                        l3375 85E6  
                      l3367 85D8                        l3359 85C8                        l3447 87C6  
                      l3439 87A4                        l3471 7C24                        l3455 7B60  
                      l2663 771A                        l2655 7700                        l2639 7656  
                      l2647 769E                        l2591 74B6                        l2583 7492  
                      l2575 7460                        l2567 7438                        l2559 7408  
                      l2815 8314                        l2807 8298                        l2831 7FAE  
                      l2823 7F32                        l2751 71E6                        l2743 7156  
                      l2735 70F8                        l2727 70BA                        l2719 707A  
                      l2495 6E4E                        l2487 6E08                        l2479 6DEC  
                      l2399 6BB8                        l2911 8056                        l2903 845E  
                      l3199 69DE                        l3279 7890                        l3295 7912  
                      l3543 7E0A                        l3535 7DD4                        l3527 7D1C  
                      l3393 88C4                        l3385 85F0                        l3377 85E8  
                      l3369 85DC                        l3449 87CE                        l3481 7C88  
                      l3473 7C26                        l3465 7BDE                        l3457 7B6E  
                      l2665 771C                        l2657 7702                        l2649 76B8  
                      l2577 7476                        l2569 7448                        l2817 8338  
                      l2809 82C6                        l2841 8032                        l2833 7FBC  
                      l2825 7F60                        l2761 723C                        l2753 71F4  
                      l2745 7166                        l2737 7108                        l2729 70C8  
                      l2681 6F7A                        l2673 6F4E                        l2489 6E18  
                      l2913 8094                        l2921 80D4                        l2905 8462  
                      l3289 78E6                        l3537 7DE0                        l3529 7D36  
                      l3395 88C6                        l3387 88B2                        l3379 85EA  
                      l3491 7CE0                        l3483 7CA6                        l3475 7C32  
                      l3467 7BE6                        l3459 7BB4                        l2659 7706  
                      l2595 74CA                        l2579 7486                        l2587 74A6  
                      l2819 833E                        l2835 7FCE                        l2827 7F70  
                      l2771 72BE                        l2763 725A                        l2755 7212  
                      l2747 7186                        l2739 7126                        l2691 6FB6  
                      l2683 6F8A                        l2675 6F5A                        l2499 6E78  
                      l2923 80E6                        l2915 80BC                        l2907 8480  
                      l2931 86D6                        l3539 7DE4                        l3397 88C8  
                      l3389 88B8                        l3493 7CEE                        l3485 7CA8  
                      l3477 7C6E                        l3469 7BF2                        l2597 74E4  
                      l2589 74B6                        l2837 7FDC                        l2829 7F9E  
                      l2781 7328                        l2773 72CC                        l2765 7288  
                      l2757 721C                        l2749 71B0                        l2693 6FBC  
                      l2685 6F9A                        l2677 6F68                        l2845 881A  
                      l2861 7E80                        l2853 7E2C                        l2917 80C8  
                      l2909 8036                        l2933 86DE                        ?_pad 0013  
                      l3399 88CA                        l3495 7CF0                        l3487 7CAC  
                      l3479 7C7A                        l2599 74F4                        l2839 802C  
                      l2791 737A                        l2783 7342                        l2775 72F6  
                      l2759 722A                        l2695 6FCA                        l2687 6FA0  
                      l2679 6F6A                        l2847 8830                        l2863 7E82  
                      l2855 7E42                        l2927 812A                        l2951 79D4  
                      l2943 793C                        l2935 854E                        l3489 7CD0  
                      l2793 737C                        l2785 7352                        l2769 72B2  
                      l2777 72FA                        l2697 6FCC                        l2689 6FB0  
                      l2849 8840                        l2865 7E92                        l2961 7AF0  
                      l2945 795C                        l2937 855C                        l2787 735C  
                      l2795 7382                        l2779 7314                        l2699 6FDC  
                      l2891 7F10                        l2875 7EBC                        l2867 7E96  
                      l2859 7E56                        l2963 7B04                        l2955 7A44  
                      l2947 79B2                        l2939 8570                        l2971 84F4  
                      l2797 7386                        l2789 736C                        l2893 7F20  
                      l2885 7EE4                        l2877 7EC6                        l2869 7EA4  
                      l2965 7B2C                        l2957 7A80                        l2949 79C6  
                      l2973 8508                        l2981 8532                        l2991 8658  
                      l2983 8644                        l2887 7EF0                        l2879 7ED0  
                      l2967 7B3C                        l2959 7AB4                        l2975 8518  
                      l2993 865C                        l2985 8650                        l2889 7F00  
                      l2977 851C                        l2897 842C                        l2995 8672  
                      l2979 852E                        l2899 843A                        l2997 8676  
                      l2999 60B2                        STR_1 2017                        STR_2 2012  
                      STR_3 2001                        STR_4 201C                        STR_7 2020  
                      u2000 6C42                        u2001 6C3E                        u2010 6C60  
                      u2011 6C5C                        u2100 6DB0                        u2020 6C80  
                      u2101 6DAC                        u2021 6C7C                        u2110 6DC0  
                      u2030 6C8E                        u2111 6DBC                        u2031 6C8A  
                      u2200 6E92                        u2120 6DEC                        u2040 6C9E  
                      u2201 6E8E                        u2121 6DE8                        u2041 6C9A  
                      u2210 6ECC                        u2130 6DFC                        u2050 6CD0  
                      u3010 7A40                        u2211 6EC8                        u2131 6DF8  
                      u2051 6CCC                        u3011 7A3C                        u2300 73D4  
                      u2220 6EDE                        u2140 6E18                        u2060 6CDE  
                      u3020 7A64                        u3100 60D4                        u2301 73D0  
                      u2221 6EDA                        u2141 6E14                        u2061 6CDA  
                      u3005 79E8                        u3101 60D0                        _LATA 3FBA  
                      u2310 7416                        u2230 6EEE                        u2150 6E28  
                      u2070 6CFC                        u3030 7A80                        u3006 79F2  
                      u3110 611E                        _LATB 3FBB                        u2311 7412  
                      u2231 6EEA                        u2151 6E24                        u2071 6CF8  
                      u3031 7A7C                        u3007 7A02                        u3111 611A  
                      _LATC 3FBC                        u2400 75B0                        u2320 7428  
                      u2240 6F0E                        u2160 6E38                        u2080 6D34  
                      u3040 7AD4                        u3200 6374                        u3120 612E  
                      _LATD 3FBD                        u2401 75AC                        u2321 7424  
                      u2241 6F0A                        u2161 6E34                        u2081 6D30  
                      u3025 7A5A                        u3201 6370                        u3121 612A  
                      u2410 75CE                        u2330 7438                        u2250 6F1E  
                      u2170 6E4E                        u2090 6D7A                        u3050 7AF0  
                      u3210 6400                        u3130 616C                        u2411 75CA  
                      u2331 7434                        u2251 6F1A                        u2171 6E4A  
                      u2091 6D76                        u3051 7AEC                        u3211 63FC  
                      u3131 6168                        u2500 7714                        u2420 75EE  
                      u2340 7476                        u2260 6F3A                        u2180 6E64  
                      u3060 7B2C                        u3300 66BE                        u3220 6436  
                      u3140 617E                        u2501 7710                        u2421 75EA  
                      u2341 7472                        u2261 6F36                        u2181 6E60  
                      u3061 7B28                        u3045 7ACA                        u3301 66BA  
                      u3221 6432                        u3141 617A                        u2430 75FE  
                      u2350 74B6                        u2510 6F68                        u2190 6E78  
                      u3070 854C                        u2270 87A0                        u3310 6758  
                      u3230 644E                        u3150 61F0                        u2431 75FA  
                      u2351 74B2                        u2511 6F64                        u2191 6E74  
                      u3071 8548                        u2271 879C                        u3311 6754  
                      u3231 644A                        u3151 61EC                        u3080 8672  
                      u2440 762C                        u2360 752A                        u2280 73B2  
                      u2600 722A                        u2520 6F7A                        u3400 6A46  
                      u3320 67A6                        u3240 6480                        u3160 6202  
                      u3081 866E                        u2441 7628                        u2361 7526  
                      u2281 73AE                        u2601 7226                        u2521 6F76  
                      u3321 67A2                        u3241 647C                        u3161 61FE  
                      u3090 868C                        u2450 7642                        u2370 754C  
                      u2290 73C4                        u2610 724A                        u2530 6F8A  
                      u3410 6A5A                        u3330 6852                        u3250 648E  
                      u3170 6278                        u3091 8688                        u2451 763E  
                      u2371 7548                        u2291 73C0                        u2611 7246  
                      u2531 6F86                        u3411 6A56                        u3331 684E  
                      u3251 648A                        u3171 6274                        u2460 7656  
                      u2380 7576                        u2700 82C6                        u2620 725A  
                      u2540 6FCA                        u1900 6AD4                        u3340 688E  
                      u3260 64B8                        u3180 6304                        u3420 8164  
                      u3500 86CA                        u2461 7652                        u2381 7572  
                      u2701 82C2                        u2621 7256                        u2541 6FC6  
                      u1901 6AD0                        u3341 688A                        u3261 64B4  
                      u3181 6300                        u3421 8160                        u3501 86C6  
                      u2470 7670                        u2390 759A                        u2710 8304  
                      u2630 7288                        u2550 6FDC                        u1910 6B14  
                      u3350 689C                        u3270 6600                        u3190 6336  
                      u3430 81E2                        u3510 84BA                        u2471 766C  
                      u2391 7596                        u2711 8300                        u2631 7284  
                      u2551 6FD8                        u1911 6B10                        u3351 6898  
                      u3271 65FC                        u3191 6332                        u3431 81DE  
                      u3511 84B6                        u3600 7C98                        u2480 76B8  
                      u2720 8338                        u2640 729E                        u2560 6FEC  
                      u1920 6B2A                        u2800 7E76                        u1840 81FC  
                      u3360 68F0                        u3280 6666                        u3440 7752  
                      u3520 84F2                        u3601 7C94                        u2481 76B4  
                      u2721 8334                        u2641 729A                        u2561 6FE8  
                      u1921 6B26                        u1841 81F8                        u3361 68EC  
                      u3281 6662                        u3441 774E                        u3521 84EE  
                      u3530 87B4                        u3610 7CA6                        u2490 76E8  
                      u2730 7F60                        u2650 72B2                        u2570 7022  
                      u1930 6B3C                        u2810 7EA4                        u1850 820C  
                      u3370 69C2                        u3290 66AE                        u3450 7792  
                      u3531 87B0                        u3611 7CA2                        u2491 76E4  
                      u2731 7F5C                        u2651 72AE                        u2571 701E  
                      u1931 6B38                        u2811 7EA0                        u1851 8208  
                      u3371 69BE                        u3291 66AA                        u3451 778E  
                      u3620 7CE0                        u3540 7B60                        u2740 7F9E  
                      u2660 72CC                        u2580 7032                        u1940 6B4C  
                      u2820 7EB8                        u2900 80BC                        u1860 8232  
                      u3380 69DE                        u3460 7828                        u3621 7CDC  
                      u3541 7B5C                        u2741 7F9A                        u2661 72C8  
                      u2581 702E                        u1941 6B48                        u2821 7EB4  
                      u2805 7E6C                        u2901 80B8                        u1861 822E  
                      u3381 69DA                        u3461 7824                        u3470 83E8  
                      u3630 7CEE                        u3550 7B6E                        u2750 7FBC  
                      u2670 7314                        u2590 71D0                        u1950 6B86  
                      u2830 7EE0                        u2910 80E6                        u1870 8264  
                      u3390 6A44                        u3631 7CEA                        u3551 7B6A  
                      u2751 7FB8                        u2671 7310                        u1951 6B82  
                      u2831 7EDC                        u2911 80E2                        u1871 8260  
                      u3391 6A3E                        u3480 841A                        u3560 7BCA  
                      u2760 7FDC                        u2680 7342                        u1960 6B94  
                      u1880 6AB2                        u2840 7F00                        u3561 7BC6  
                      u2761 7FD8                        u2681 733E                        u1961 6B90  
                      u1881 6AAE                        u2841 7EFC                        u3490 842A  
                      u3570 7C20                        u2770 802C                        u2690 737A  
                      u1970 6C00                        u1890 6AC4                        u2850 7F10  
                      u2930 8120                        u3650 7D1C                        u3491 8426  
                      u3571 7C1C                        u2771 8028                        u2691 7376  
                      u2595 71C6                        u1971 6BFC                        u1891 6AC0  
                      u2851 7F0C                        u2931 811A                        u3651 7D18  
                      u3580 7C6A                        u2780 8830                        u1980 6C18  
                      u2940 8122                        u2860 843A                        u3477 83DA  
                      u3581 7C66                        u2781 882C                        u1981 6C12  
                      u2925 80F8                        u2861 8436                        u3590 7C88  
                      u1990 6C1A                        u2790 7E42                        u2870 8480  
                      u2950 871A                        u3487 840C                        u3591 7C84  
                      u2791 7E3E                        u2871 847C                        u2951 8716  
                      u2880 8076                        u2960 855C                        u2961 8558  
                      u2890 8094                        u2970 7984                        u2891 8090  
                      u3667 7E16                        u2980 79B2                        u2885 806C  
                      u2981 79AE                        u2990 79D4                        u2991 79D0  
                      u2975 797A                        _WPUA 3A41                        _WPUB 3A51  
                      _data 00AA                        _dbuf 0100                        _labs 854E  
                      _main 7D02                        _prec 00A8                        pad@i 0019  
                      pad@p 0016                        fsr1h 3FE2                        fsr2h 3FDA  
                      indf1 3FE7                        indf2 3FDF                        fsr1l 3FE1  
                      fsr2l 3FD9            __end_of_ADC_Init 88D8               ___fpclassifyf 8036  
                      prodh 3FF4                        prodl 3FF3                        start 60AE  
           __end_of_MSdelay 868E             ___fldiv@new_exp 0016               _LCD_String_xy 87A2  
              ___param_bank 0000                       ??_pad 0018            __end_of_LCD_Char 88F6  
          __end_of_LCD_Init 88B2               ___fltol@sign1 000D                       ?_labs 0005  
                     _ADCAP 3EF5             __end_of___fladd 6F4E                       ?_main 0001  
                     _ADCLK 3EFF                       _ADPCH 3EF1             __end_of___fldiv 7728  
                     _ADREF 3EFD             __end_of___flneg 8852             __end_of___flmul 7398  
           __end_of___flsub 8762             __end_of___fltol 7F32                       _LATD0 1FDE8  
                     _LATD1 1FDE9                       i2l174 8396                       i2l175 8360  
                     i2l168 8642                       i2l176 83B0                       i2l177 83B8  
              vfpfcnvrt@fmt 008D                       _PORTA 3FCA                       _PORTB 3FCB  
                     _PORTC 3FCC                       _PORTD 3FCD                       _TRISA 3FC2  
                     _TRISB 3FC3                       _TRISC 3FC4                       _TRISD 3FC5  
                     _flags 005A         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 81EC                       _fputs 8762                       labs@a 0005  
                     pad@fp 0013                       _width 00A6                       _putch 8914  
                     tablat 3FF5                       status 3FD8             __end_of_sprintf 881A  
            ?___fpclassifyf 0005              ?_LCD_String_xy 000E             __initialization 8852  
              __end_of_labs 85A4                __end_of_main 7E2C                      ??_labs 0009  
                    ??_main 0098               __activetblptr 0003  __end_of_read_prec_or_width 81EC  
                    _ADACQH 3EF4                      _ADACQL 3EF3                      ?_fputc 0005  
                    ?_fputs 000D                      _ADRESH 3EF0                      _ADRESL 3EEF  
                    _ADPREH 3EF7                      _ADPREL 3EF6                      _ANSELA 3A40  
                    ?_putch 0001                      _ANSELB 3A50                      _ANSELC 3A60  
                    _ANSELD 3A70            i2_Initialization 85F4            LCD_String_xy@msg 000F  
          LCD_String_xy@pos 000E            LCD_String_xy@row 0011                   ??_MSdelay 0007  
                    i2l2231 85FC                      i2l2311 8354                      i2l2241 8608  
                    i2l2233 8600                      i2l2313 8362                      i2l2251 8612  
                    i2l2243 860A                      i2l2235 8602                      i2l2315 8378  
                    i2l2261 861C                      i2l2253 8614                      i2l2245 860C  
                    i2l2237 8604                      i2l2229 85F4                      i2l2317 8390  
                    i2l2309 8344                      i2l2271 8632                      i2l2263 8626  
                    i2l2255 8616                      i2l2247 860E                      i2l2239 8606  
                    i2l2319 83B4                      i2l2281 863E                      i2l2273 8636  
                    i2l2265 8628                      i2l2257 8618                      i2l2249 8610  
                    i2l2283 8640                      i2l2275 8638                      i2l2267 862C  
                    i2l2259 861A                      i2l2277 863A                      i2l2269 8630  
                    i2l2279 863C            __end_of___xxtofl 7D02                vfprintf@cfmt 0047  
                    ___flge 7F32                      ___fleq 8298                   ??___fladd 000D  
                 ??___fldiv 000D                   ??___flneg 0009                   ??___flmul 001B  
                 ??___flsub 0034                   ??___fltol 0009                      _efgtoa 60B2  
                    _floorf 793C                      _memcpy 84F4                      _my_ISR 8344  
      read_prec_or_width@ap 0006                      clear_0 8858                      clear_1 8864  
                    clear_2 8870                      isa$std 0001                      pad@buf 0014  
                    _strcat 8492                      _strcpy 86D6                      fputc@c 0005  
                    fputs@c 0010                      fputs@i 0011                      fputs@s 000D  
           ___fpclassifyf@e 000D                   ?_ADC_Init 0001             ___fpclassifyf@u 000F  
           ___fpclassifyf@x 0005                __mediumconst 2000                      tblptrh 3FF7  
                    tblptrl 3FF6                      tblptru 3FF8                      putch@c 0001  
          __end_of_vfprintf 86D6                   ??_sprintf 0048                  ___flge@ff1 002C  
                ___flge@ff2 0030             ??___fpclassifyf 0009                ___xxtofl@arg 000F  
              ___xxtofl@exp 000E                ___xxtofl@val 0005                  ___fleq@ff1 0005  
                ___fleq@ff2 0009                   ?_LCD_Char 0001                  __accesstop 0060  
   __end_of__initialization 8882                   ?_LCD_Init 0001             ??_LCD_String_xy 0011  
                ___flneg@f1 0005               ___rparam_used 0001                  ___fltol@f1 0005  
            __pcstackCOMRAM 0001               __end_of_fputc 8298               __end_of_fputs 87A2  
             __end_of_putch 8916                ??_LCD_String 000E                  ??_ADC_Init 0005  
                   ??_fputc 0008                     ??_fputs 0010                     ??_putch 0005  
                __pbssBANK0 009A                  __pbssBANK1 0100                  ??_LCD_Char 000B  
                ??_LCD_Init 000C          __end_of_LCD_String 842C                     IVTBASEH 3FD6  
                   IVTBASEL 3FD5                     IVTBASEU 3FD7                     ?___flge 002C  
                   ?___fleq 0005              _Initialization 85A4                     ?_efgtoa 0038  
                   ?_floorf 001E                     ?_memcpy 0005                     ?_my_ISR 0001  
                   ?_strcat 0005                     ?_strcpy 0005                   ?___xxtofl 0005  
                   _MSdelay 8644               LCD_String@msg 000C                     __Hparam 0000  
                   __Lparam 0000      __end_of_Initialization 85F4                     ___fladd 6A98  
                   ___fldiv 7398                     ___flneg 881A                     ___flmul 6F4E  
                   ___flsub 871C                     ___fltol 7E2C                   ?_vfprintf 008F  
              __psmallconst 2000    __end_ofi2_Initialization 8644                     __pcinit 8852  
                   __ramtop 2000                     _digital 0058                     __ptext0 7D02  
                   __ptext1 8492                     __ptext2 87E2                     __ptext3 868E  
                   __ptext4 7728                     __ptext5 8134                     __ptext6 60B2  
                   __ptext7 86D6                     __ptext8 842C                     __ptext9 8762  
             ivt0x6008_base 6008       read_prec_or_width@fmt 0005                  ??___xxtofl 0009  
                 _IOCCFbits 3A67                     efgtoa@c 003D                     efgtoa@d 006B  
                   efgtoa@e 006F                     efgtoa@f 0039                     efgtoa@g 0084  
                   efgtoa@h 0079                     efgtoa@i 0077                     efgtoa@l 007D  
                   efgtoa@m 006D                     efgtoa@n 0082                     efgtoa@p 0062  
                   efgtoa@t 0064                     efgtoa@u 0088                     efgtoa@w 0071  
                 _IOCCNbits 3A66                   _IOCCPbits 3A65                     _sprintf 87E2  
                   _voltage 0054        end_of_initialization 8882                     floorf@e 002C  
                   floorf@m 0028                     floorf@u 002E                     floorf@x 001E  
                   memcpy@d 000B                     memcpy@n 0009                     memcpy@s 000D  
                   my_ISR@i 0003                     fputc@fp 0007              LCD_Command@cmd 000B  
                   fputs@fp 000F          _read_prec_or_width 8134             ?_Initialization 0001  
         __end_of_vfpfcnvrt 793C                  efgtoa@mode 0069                  efgtoa@sign 0081  
                   postdec2 3FDD         ?_read_prec_or_width 0005                     postinc0 3FEE  
                   postinc1 3FE6                     postinc2 3FDE            vfpfcnvrt@convarg 0041  
                ??_vfprintf 0047                     strcat@i 0007                     strcpy@d 0009  
                 _PORTCbits 3FCC                 ___fladd@grs 0014               ___xxtofl@sign 000D  
                 _TRISAbits 3FC2        ??_read_prec_or_width 0007                 ___fldiv@grs 0018  
               ___fldiv@rem 0011                 ___flmul@grs 0020               ??_LCD_Command 000B  
            __end_of___flge 8036              __end_of___fleq 8342                 vfpfcnvrt@ap 008E  
               vfpfcnvrt@cp 0046                 vfpfcnvrt@fp 008C              __end_of_efgtoa 6A98  
            __end_of_floorf 7B4E              __end_of_memcpy 854E              __end_of_my_ISR 83BA  
                floorf@F521 009A              __end_of_strcat 84F4              __end_of_strcpy 871C  
       start_initialization 8852                 __end_of_pad 8492       __end_of___fpclassifyf 8134  
     __end_of_LCD_String_xy 87E2                 vfprintf@fmt 0090                    ??___flge 0034  
                  ??___fleq 000D                    ??_efgtoa 003E                    ??_floorf 0022  
                  ??_memcpy 000B                    ??_my_ISR 0001                    ??_strcat 0007  
                  ??_strcpy 0008                   ___fladd@a 0009                   ___fladd@b 0005  
                 ___fldiv@a 0009                   ___fldiv@b 0005         __end_of_LCD_Command 8914  
                 ___flmul@a 0017                   ___flmul@b 0013                 __pbssCOMRAM 0054  
                 ___flsub@a 0030                   ___flsub@b 002C               __pcstackBANK0 0060  
                  ?_MSdelay 0005                 __pivt0x6008 6008                 _efgtoa$1101 0066  
                  ?___fladd 0005                    ?___fldiv 0005                    ?___flneg 0005  
                  ?___flmul 0013                    ?___flsub 002C                    ?___fltol 0005  
         ?i2_Initialization 0001          ??i2_Initialization 0001                 __smallconst 2000  
                  _ADC_Init 88B2       LCD_String_xy@location 0012                    ?_sprintf 0092  
                  MSdelay@i 0007                    MSdelay@j 0009                    _LCD_Char 88D8  
          ??_Initialization 0005                    _LCD_Init 8888                    _IPR0bits 3980  
                  _PIE0bits 3990                    _IVTBASEH 3FD6                    _IVTBASEL 3FD5  
                  _IVTBASEU 3FD7                    i2u182_40 8354                    i2u182_41 8350  
                  i2u183_40 83B0                    i2u183_41 83AC                    _PIR0bits 39A0  
                  _PIR1bits 39A1                    i2u367_47 836C                    i2u368_47 8384  
               _LCD_Command 88F6                   _vfpfcnvrt 7728                  _ADCON0bits 3EF8  
                vfpfcnvrt@c 0045                 _INTCON0bits 3FD2                    __Hrparam 0000  
                 memcpy@tmp 000F                  vfprintf@ap 0091                    __Lrparam 0000  
                vfprintf@fp 008F                  ?_vfpfcnvrt 008C                  _ANSELAbits 3A40  
        ___fpclassifyf@F465 009E                  sprintf@fmt 0093                    ___xxtofl 7B4E  
                strcat@dest 0005                    __ptext10 81EC                    __ptext11 8914  
                  __ptext20 6F4E                    __ptext12 84F4                    __ptext21 7F32  
                  __ptext13 854E                    __ptext30 8644                    __ptext22 8298  
                  __ptext14 793C                    __ptext31 85A4                    __ptext23 7398  
                  __ptext15 8036                    __ptext32 88B2                    __ptext24 7B4E  
                  __ptext16 7E2C                    __ptext33 8344                    __ptext25 87A2  
                  __ptext17 871C                    __ptext34 85F4                    __ptext26 83BA  
                  __ptext18 6A98                    __ptext27 88D8                    __ptext19 881A  
                  __ptext28 8888                    __ptext29 88F6                  strcpy@dest 0005  
                MSdelay@val 0005                    efgtoa@fp 0038                    efgtoa@ne 0060  
                  efgtoa@pp 0068                    efgtoa@ou 0073                    isa$xinst 0000  
         ivt0x6008_undefint 60AC                    _vfprintf 868E                  _LCD_String 83BA  
                  memcpy@d1 0005                    memcpy@s1 0007                    intlevel2 0000  
                 sprintf@ap 0048                   strcat@src 0006                   strcpy@src 0007  
               efgtoa@nmode 006A                 ??_vfpfcnvrt 0040                    sprintf@f 0049  
                  sprintf@s 0092               ___fladd@signs 0011                ___fladd@aexp 0012  
              ___fladd@bexp 0013  
