

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 16:05:44 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 12/10/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F47K42 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   003FE0                     bsr             equ	16352
    82   003FE9                     fsr0            equ	16361
    83   003FEA                     fsr0h           equ	16362
    84   003FE9                     fsr0l           equ	16361
    85   003FE1                     fsr1            equ	16353
    86   003FE2                     fsr1h           equ	16354
    87   003FE1                     fsr1l           equ	16353
    88   003FD9                     fsr2            equ	16345
    89   003FDA                     fsr2h           equ	16346
    90   003FD9                     fsr2l           equ	16345
    91   003FEF                     indf0           equ	16367
    92   003FE7                     indf1           equ	16359
    93   003FDF                     indf2           equ	16351
    94   003FD2                     intcon          equ	16338
    95   0039E5                     nvmcon          equ	14821
    96   003FF9                     pcl             equ	16377
    97   003FFA                     pclath          equ	16378
    98   003FFB                     pclatu          equ	16379
    99   003FEB                     plusw0          equ	16363
   100   003FE3                     plusw1          equ	16355
   101   003FDB                     plusw2          equ	16347
   102   003FED                     postdec0        equ	16365
   103   003FE5                     postdec1        equ	16357
   104   003FDD                     postdec2        equ	16349
   105   003FEE                     postinc0        equ	16366
   106   003FE6                     postinc1        equ	16358
   107   003FDE                     postinc2        equ	16350
   108   003FEC                     preinc0         equ	16364
   109   003FE4                     preinc1         equ	16356
   110   003FDC                     preinc2         equ	16348
   111   003FF3                     prod            equ	16371
   112   003FF4                     prodh           equ	16372
   113   003FF3                     prodl           equ	16371
   114   003FD8                     status          equ	16344
   115   003FF5                     tablat          equ	16373
   116   003FF6                     tblptr          equ	16374
   117   003FF7                     tblptrh         equ	16375
   118   003FF6                     tblptrl         equ	16374
   119   003FF8                     tblptru         equ	16376
   120   003FFD                     tosl            equ	16381
   121   003FE8                     wreg            equ	16360
   122   003880                     STATUS_CSHAD    equ	14464	;# 
   123   003881                     WREG_CSHAD      equ	14465	;# 
   124   003882                     BSR_CSHAD       equ	14466	;# 
   125   003883                     SHADCON         equ	14467	;# 
   126   003884                     STATUS_SHAD     equ	14468	;# 
   127   003885                     WREG_SHAD       equ	14469	;# 
   128   003886                     BSR_SHAD        equ	14470	;# 
   129   003887                     PCLATH_SHAD     equ	14471	;# 
   130   003888                     PCLATU_SHAD     equ	14472	;# 
   131   003889                     FSR0SH          equ	14473	;# 
   132   003889                     FSR0L_SHAD      equ	14473	;# 
   133   00388A                     FSR0H_SHAD      equ	14474	;# 
   134   00388B                     FSR1SH          equ	14475	;# 
   135   00388B                     FSR1L_SHAD      equ	14475	;# 
   136   00388C                     FSR1H_SHAD      equ	14476	;# 
   137   00388D                     FSR2SH          equ	14477	;# 
   138   00388D                     FSR2L_SHAD      equ	14477	;# 
   139   00388E                     FSR2H_SHAD      equ	14478	;# 
   140   00388F                     PRODSH          equ	14479	;# 
   141   00388F                     PRODL_SHAD      equ	14479	;# 
   142   003890                     PRODH_SHAD      equ	14480	;# 
   143   00389D                     IVTADL          equ	14493	;# 
   144   00389E                     IVTADH          equ	14494	;# 
   145   00389F                     IVTADU          equ	14495	;# 
   146   00395B                     WDTCON0         equ	14683	;# 
   147   00395C                     WDTCON1         equ	14684	;# 
   148   00395D                     WDTPSL          equ	14685	;# 
   149   00395E                     WDTPSH          equ	14686	;# 
   150   00395F                     WDTTMR          equ	14687	;# 
   151   003960                     CRCDATA         equ	14688	;# 
   152   003960                     CRCDATL         equ	14688	;# 
   153   003961                     CRCDATH         equ	14689	;# 
   154   003962                     CRCACC          equ	14690	;# 
   155   003962                     CRCACCL         equ	14690	;# 
   156   003963                     CRCACCH         equ	14691	;# 
   157   003964                     CRCSHFT         equ	14692	;# 
   158   003964                     CRCSHIFTL       equ	14692	;# 
   159   003965                     CRCSHIFTH       equ	14693	;# 
   160   003966                     CRCXOR          equ	14694	;# 
   161   003966                     CRCXORL         equ	14694	;# 
   162   003967                     CRCXORH         equ	14695	;# 
   163   003968                     CRCCON0         equ	14696	;# 
   164   003969                     CRCCON1         equ	14697	;# 
   165   003976                     SCANLADR        equ	14710	;# 
   166   003976                     SCANLADRL       equ	14710	;# 
   167   003977                     SCANLADRH       equ	14711	;# 
   168   003978                     SCANLADRU       equ	14712	;# 
   169   003979                     SCANHADR        equ	14713	;# 
   170   003979                     SCANHADRL       equ	14713	;# 
   171   00397A                     SCANHADRH       equ	14714	;# 
   172   00397B                     SCANHADRU       equ	14715	;# 
   173   00397C                     SCANCON0        equ	14716	;# 
   174   00397D                     SCANTRIG        equ	14717	;# 
   175   003980                     IPR0            equ	14720	;# 
   176   003981                     IPR1            equ	14721	;# 
   177   003982                     IPR2            equ	14722	;# 
   178   003983                     IPR3            equ	14723	;# 
   179   003984                     IPR4            equ	14724	;# 
   180   003985                     IPR5            equ	14725	;# 
   181   003986                     IPR6            equ	14726	;# 
   182   003987                     IPR7            equ	14727	;# 
   183   003988                     IPR8            equ	14728	;# 
   184   003989                     IPR9            equ	14729	;# 
   185   00398A                     IPR10           equ	14730	;# 
   186   003990                     PIE0            equ	14736	;# 
   187   003991                     PIE1            equ	14737	;# 
   188   003992                     PIE2            equ	14738	;# 
   189   003993                     PIE3            equ	14739	;# 
   190   003994                     PIE4            equ	14740	;# 
   191   003995                     PIE5            equ	14741	;# 
   192   003996                     PIE6            equ	14742	;# 
   193   003997                     PIE7            equ	14743	;# 
   194   003998                     PIE8            equ	14744	;# 
   195   003999                     PIE9            equ	14745	;# 
   196   00399A                     PIE10           equ	14746	;# 
   197   0039A0                     PIR0            equ	14752	;# 
   198   0039A1                     PIR1            equ	14753	;# 
   199   0039A2                     PIR2            equ	14754	;# 
   200   0039A3                     PIR3            equ	14755	;# 
   201   0039A4                     PIR4            equ	14756	;# 
   202   0039A5                     PIR5            equ	14757	;# 
   203   0039A6                     PIR6            equ	14758	;# 
   204   0039A7                     PIR7            equ	14759	;# 
   205   0039A8                     PIR8            equ	14760	;# 
   206   0039A9                     PIR9            equ	14761	;# 
   207   0039AA                     PIR10           equ	14762	;# 
   208   0039C0                     PMD0            equ	14784	;# 
   209   0039C1                     PMD1            equ	14785	;# 
   210   0039C2                     PMD2            equ	14786	;# 
   211   0039C3                     PMD3            equ	14787	;# 
   212   0039C4                     PMD4            equ	14788	;# 
   213   0039C5                     PMD5            equ	14789	;# 
   214   0039C6                     PMD6            equ	14790	;# 
   215   0039C7                     PMD7            equ	14791	;# 
   216   0039D0                     BORCON          equ	14800	;# 
   217   0039D1                     VREGCON         equ	14801	;# 
   218   0039D8                     CPUDOZE         equ	14808	;# 
   219   0039D9                     OSCCON1         equ	14809	;# 
   220   0039DA                     OSCCON2         equ	14810	;# 
   221   0039DB                     OSCCON3         equ	14811	;# 
   222   0039DC                     OSCSTAT         equ	14812	;# 
   223   0039DC                     OSCSTAT1        equ	14812	;# 
   224   0039DD                     OSCEN           equ	14813	;# 
   225   0039DE                     OSCTUNE         equ	14814	;# 
   226   0039DF                     OSCFRQ          equ	14815	;# 
   227   0039E0                     NVMADRL         equ	14816	;# 
   228   0039E1                     NVMADRH         equ	14817	;# 
   229   0039E3                     NVMDAT          equ	14819	;# 
   230   0039E5                     NVMCON1         equ	14821	;# 
   231   0039E6                     NVMCON2         equ	14822	;# 
   232   0039EF                     PRLOCK          equ	14831	;# 
   233   0039F1                     ISRPR           equ	14833	;# 
   234   0039F2                     MAINPR          equ	14834	;# 
   235   0039F3                     DMA1PR          equ	14835	;# 
   236   0039F4                     DMA2PR          equ	14836	;# 
   237   0039F7                     SCANPR          equ	14839	;# 
   238   003A00                     RA0PPS          equ	14848	;# 
   239   003A01                     RA1PPS          equ	14849	;# 
   240   003A02                     RA2PPS          equ	14850	;# 
   241   003A03                     RA3PPS          equ	14851	;# 
   242   003A04                     RA4PPS          equ	14852	;# 
   243   003A05                     RA5PPS          equ	14853	;# 
   244   003A06                     RA6PPS          equ	14854	;# 
   245   003A07                     RA7PPS          equ	14855	;# 
   246   003A08                     RB0PPS          equ	14856	;# 
   247   003A09                     RB1PPS          equ	14857	;# 
   248   003A0A                     RB2PPS          equ	14858	;# 
   249   003A0B                     RB3PPS          equ	14859	;# 
   250   003A0C                     RB4PPS          equ	14860	;# 
   251   003A0D                     RB5PPS          equ	14861	;# 
   252   003A0E                     RB6PPS          equ	14862	;# 
   253   003A0F                     RB7PPS          equ	14863	;# 
   254   003A10                     RC0PPS          equ	14864	;# 
   255   003A11                     RC1PPS          equ	14865	;# 
   256   003A12                     RC2PPS          equ	14866	;# 
   257   003A13                     RC3PPS          equ	14867	;# 
   258   003A14                     RC4PPS          equ	14868	;# 
   259   003A15                     RC5PPS          equ	14869	;# 
   260   003A16                     RC6PPS          equ	14870	;# 
   261   003A17                     RC7PPS          equ	14871	;# 
   262   003A18                     RD0PPS          equ	14872	;# 
   263   003A19                     RD1PPS          equ	14873	;# 
   264   003A1A                     RD2PPS          equ	14874	;# 
   265   003A1B                     RD3PPS          equ	14875	;# 
   266   003A1C                     RD4PPS          equ	14876	;# 
   267   003A1D                     RD5PPS          equ	14877	;# 
   268   003A1E                     RD6PPS          equ	14878	;# 
   269   003A1F                     RD7PPS          equ	14879	;# 
   270   003A20                     RE0PPS          equ	14880	;# 
   271   003A21                     RE1PPS          equ	14881	;# 
   272   003A22                     RE2PPS          equ	14882	;# 
   273   003A40                     ANSELA          equ	14912	;# 
   274   003A41                     WPUA            equ	14913	;# 
   275   003A42                     ODCONA          equ	14914	;# 
   276   003A43                     SLRCONA         equ	14915	;# 
   277   003A44                     INLVLA          equ	14916	;# 
   278   003A45                     IOCAP           equ	14917	;# 
   279   003A46                     IOCAN           equ	14918	;# 
   280   003A47                     IOCAF           equ	14919	;# 
   281   003A50                     ANSELB          equ	14928	;# 
   282   003A51                     WPUB            equ	14929	;# 
   283   003A52                     ODCONB          equ	14930	;# 
   284   003A53                     SLRCONB         equ	14931	;# 
   285   003A54                     INLVLB          equ	14932	;# 
   286   003A55                     IOCBP           equ	14933	;# 
   287   003A56                     IOCBN           equ	14934	;# 
   288   003A57                     IOCBF           equ	14935	;# 
   289   003A5A                     RB1I2C          equ	14938	;# 
   290   003A5B                     RB2I2C          equ	14939	;# 
   291   003A60                     ANSELC          equ	14944	;# 
   292   003A61                     WPUC            equ	14945	;# 
   293   003A62                     ODCONC          equ	14946	;# 
   294   003A63                     SLRCONC         equ	14947	;# 
   295   003A64                     INLVLC          equ	14948	;# 
   296   003A65                     IOCCP           equ	14949	;# 
   297   003A66                     IOCCN           equ	14950	;# 
   298   003A67                     IOCCF           equ	14951	;# 
   299   003A6A                     RC3I2C          equ	14954	;# 
   300   003A6B                     RC4I2C          equ	14955	;# 
   301   003A70                     ANSELD          equ	14960	;# 
   302   003A71                     WPUD            equ	14961	;# 
   303   003A72                     ODCOND          equ	14962	;# 
   304   003A73                     SLRCOND         equ	14963	;# 
   305   003A74                     INLVLD          equ	14964	;# 
   306   003A7A                     RD0I2C          equ	14970	;# 
   307   003A7B                     RD1I2C          equ	14971	;# 
   308   003A80                     ANSELE          equ	14976	;# 
   309   003A81                     WPUE            equ	14977	;# 
   310   003A82                     ODCONE          equ	14978	;# 
   311   003A83                     SLRCONE         equ	14979	;# 
   312   003A84                     INLVLE          equ	14980	;# 
   313   003A85                     IOCEP           equ	14981	;# 
   314   003A86                     IOCEN           equ	14982	;# 
   315   003A87                     IOCEF           equ	14983	;# 
   316   003ABF                     PPSLOCK         equ	15039	;# 
   317   003AC0                     INT0PPS         equ	15040	;# 
   318   003AC1                     INT1PPS         equ	15041	;# 
   319   003AC2                     INT2PPS         equ	15042	;# 
   320   003AC3                     T0CKIPPS        equ	15043	;# 
   321   003AC4                     T1CKIPPS        equ	15044	;# 
   322   003AC5                     T1GPPS          equ	15045	;# 
   323   003AC6                     T3CKIPPS        equ	15046	;# 
   324   003AC7                     T3GPPS          equ	15047	;# 
   325   003AC8                     T5CKIPPS        equ	15048	;# 
   326   003AC9                     T5GPPS          equ	15049	;# 
   327   003ACA                     T2INPPS         equ	15050	;# 
   328   003ACB                     T4INPPS         equ	15051	;# 
   329   003ACC                     T6INPPS         equ	15052	;# 
   330   003ACD                     CCP1PPS         equ	15053	;# 
   331   003ACE                     CCP2PPS         equ	15054	;# 
   332   003ACF                     CCP3PPS         equ	15055	;# 
   333   003AD0                     CCP4PPS         equ	15056	;# 
   334   003AD1                     SMT1WINPPS      equ	15057	;# 
   335   003AD2                     SMT1SIGPPS      equ	15058	;# 
   336   003AD3                     CWG1INPPS       equ	15059	;# 
   337   003AD4                     CWG2INPPS       equ	15060	;# 
   338   003AD5                     CWG3INPPS       equ	15061	;# 
   339   003AD6                     MD1CARLPPS      equ	15062	;# 
   340   003AD7                     MD1CARHPPS      equ	15063	;# 
   341   003AD8                     MD1SRCPPS       equ	15064	;# 
   342   003AD9                     CLCIN0PPS       equ	15065	;# 
   343   003ADA                     CLCIN1PPS       equ	15066	;# 
   344   003ADB                     CLCIN2PPS       equ	15067	;# 
   345   003ADC                     CLCIN3PPS       equ	15068	;# 
   346   003ADD                     ADACTPPS        equ	15069	;# 
   347   003ADE                     SPI1SCKPPS      equ	15070	;# 
   348   003ADF                     SPI1SDIPPS      equ	15071	;# 
   349   003AE0                     SPI1SSPPS       equ	15072	;# 
   350   003AE1                     I2C1SCLPPS      equ	15073	;# 
   351   003AE2                     I2C1SDAPPS      equ	15074	;# 
   352   003AE3                     I2C2SCLPPS      equ	15075	;# 
   353   003AE4                     I2C2SDAPPS      equ	15076	;# 
   354   003AE5                     U1RXPPS         equ	15077	;# 
   355   003AE6                     U1CTSPPS        equ	15078	;# 
   356   003AE8                     U2RXPPS         equ	15080	;# 
   357   003AE9                     U2CTSPPS        equ	15081	;# 
   358   003BC9                     DMA2BUF         equ	15305	;# 
   359   003BCA                     DMA2DCNT        equ	15306	;# 
   360   003BCA                     DMA2DCNTL       equ	15306	;# 
   361   003BCB                     DMA2DCNTH       equ	15307	;# 
   362   003BCC                     DMA2DPTR        equ	15308	;# 
   363   003BCC                     DMA2DPTRL       equ	15308	;# 
   364   003BCD                     DMA2DPTRH       equ	15309	;# 
   365   003BCE                     DMA2DSZ         equ	15310	;# 
   366   003BCE                     DMA2DSZL        equ	15310	;# 
   367   003BCF                     DMA2DSZH        equ	15311	;# 
   368   003BD0                     DMA2DSA         equ	15312	;# 
   369   003BD0                     DMA2DSAL        equ	15312	;# 
   370   003BD1                     DMA2DSAH        equ	15313	;# 
   371   003BD2                     DMA2SCNT        equ	15314	;# 
   372   003BD2                     DMA2SCNTL       equ	15314	;# 
   373   003BD3                     DMA2SCNTH       equ	15315	;# 
   374   003BD4                     DMA2SPTR        equ	15316	;# 
   375   003BD4                     DMA2SPTRL       equ	15316	;# 
   376   003BD5                     DMA2SPTRH       equ	15317	;# 
   377   003BD6                     DMA2SPTRU       equ	15318	;# 
   378   003BD7                     DMA2SSZ         equ	15319	;# 
   379   003BD7                     DMA2SSZL        equ	15319	;# 
   380   003BD8                     DMA2SSZH        equ	15320	;# 
   381   003BD9                     DMA2SSA         equ	15321	;# 
   382   003BD9                     DMA2SSAL        equ	15321	;# 
   383   003BDA                     DMA2SSAH        equ	15322	;# 
   384   003BDB                     DMA2SSAU        equ	15323	;# 
   385   003BDC                     DMA2CON0        equ	15324	;# 
   386   003BDD                     DMA2CON1        equ	15325	;# 
   387   003BDE                     DMA2AIRQ        equ	15326	;# 
   388   003BDF                     DMA2SIRQ        equ	15327	;# 
   389   003BE9                     DMA1BUF         equ	15337	;# 
   390   003BEA                     DMA1DCNT        equ	15338	;# 
   391   003BEA                     DMA1DCNTL       equ	15338	;# 
   392   003BEB                     DMA1DCNTH       equ	15339	;# 
   393   003BEC                     DMA1DPTR        equ	15340	;# 
   394   003BEC                     DMA1DPTRL       equ	15340	;# 
   395   003BED                     DMA1DPTRH       equ	15341	;# 
   396   003BEE                     DMA1DSZ         equ	15342	;# 
   397   003BEE                     DMA1DSZL        equ	15342	;# 
   398   003BEF                     DMA1DSZH        equ	15343	;# 
   399   003BF0                     DMA1DSA         equ	15344	;# 
   400   003BF0                     DMA1DSAL        equ	15344	;# 
   401   003BF1                     DMA1DSAH        equ	15345	;# 
   402   003BF2                     DMA1SCNT        equ	15346	;# 
   403   003BF2                     DMA1SCNTL       equ	15346	;# 
   404   003BF3                     DMA1SCNTH       equ	15347	;# 
   405   003BF4                     DMA1SPTR        equ	15348	;# 
   406   003BF4                     DMA1SPTRL       equ	15348	;# 
   407   003BF5                     DMA1SPTRH       equ	15349	;# 
   408   003BF6                     DMA1SPTRU       equ	15350	;# 
   409   003BF7                     DMA1SSZ         equ	15351	;# 
   410   003BF7                     DMA1SSZL        equ	15351	;# 
   411   003BF8                     DMA1SSZH        equ	15352	;# 
   412   003BF9                     DMA1SSA         equ	15353	;# 
   413   003BF9                     DMA1SSAL        equ	15353	;# 
   414   003BFA                     DMA1SSAH        equ	15354	;# 
   415   003BFB                     DMA1SSAU        equ	15355	;# 
   416   003BFC                     DMA1CON0        equ	15356	;# 
   417   003BFD                     DMA1CON1        equ	15357	;# 
   418   003BFE                     DMA1AIRQ        equ	15358	;# 
   419   003BFF                     DMA1SIRQ        equ	15359	;# 
   420   003C56                     CLC4CON         equ	15446	;# 
   421   003C57                     CLC4POL         equ	15447	;# 
   422   003C58                     CLC4SEL0        equ	15448	;# 
   423   003C59                     CLC4SEL1        equ	15449	;# 
   424   003C5A                     CLC4SEL2        equ	15450	;# 
   425   003C5B                     CLC4SEL3        equ	15451	;# 
   426   003C5C                     CLC4GLS0        equ	15452	;# 
   427   003C5D                     CLC4GLS1        equ	15453	;# 
   428   003C5E                     CLC4GLS2        equ	15454	;# 
   429   003C5F                     CLC4GLS3        equ	15455	;# 
   430   003C60                     CLC3CON         equ	15456	;# 
   431   003C61                     CLC3POL         equ	15457	;# 
   432   003C62                     CLC3SEL0        equ	15458	;# 
   433   003C63                     CLC3SEL1        equ	15459	;# 
   434   003C64                     CLC3SEL2        equ	15460	;# 
   435   003C65                     CLC3SEL3        equ	15461	;# 
   436   003C66                     CLC3GLS0        equ	15462	;# 
   437   003C67                     CLC3GLS1        equ	15463	;# 
   438   003C68                     CLC3GLS2        equ	15464	;# 
   439   003C69                     CLC3GLS3        equ	15465	;# 
   440   003C6A                     CLC2CON         equ	15466	;# 
   441   003C6B                     CLC2POL         equ	15467	;# 
   442   003C6C                     CLC2SEL0        equ	15468	;# 
   443   003C6D                     CLC2SEL1        equ	15469	;# 
   444   003C6E                     CLC2SEL2        equ	15470	;# 
   445   003C6F                     CLC2SEL3        equ	15471	;# 
   446   003C70                     CLC2GLS0        equ	15472	;# 
   447   003C71                     CLC2GLS1        equ	15473	;# 
   448   003C72                     CLC2GLS2        equ	15474	;# 
   449   003C73                     CLC2GLS3        equ	15475	;# 
   450   003C74                     CLC1CON         equ	15476	;# 
   451   003C75                     CLC1POL         equ	15477	;# 
   452   003C76                     CLC1SEL0        equ	15478	;# 
   453   003C77                     CLC1SEL1        equ	15479	;# 
   454   003C78                     CLC1SEL2        equ	15480	;# 
   455   003C79                     CLC1SEL3        equ	15481	;# 
   456   003C7A                     CLC1GLS0        equ	15482	;# 
   457   003C7B                     CLC1GLS1        equ	15483	;# 
   458   003C7C                     CLC1GLS2        equ	15484	;# 
   459   003C7D                     CLC1GLS3        equ	15485	;# 
   460   003C7E                     CLCDATA0        equ	15486	;# 
   461   003CE5                     CLKRCON         equ	15589	;# 
   462   003CE6                     CLKRCLK         equ	15590	;# 
   463   003CFA                     MD1CON0         equ	15610	;# 
   464   003CFB                     MD1CON1         equ	15611	;# 
   465   003CFC                     MD1SRC          equ	15612	;# 
   466   003CFD                     MD1CARL         equ	15613	;# 
   467   003CFE                     MD1CARH         equ	15614	;# 
   468   003D10                     SPI1RXB         equ	15632	;# 
   469   003D11                     SPI1TXB         equ	15633	;# 
   470   003D12                     SPI1TCNT        equ	15634	;# 
   471   003D12                     SPI1TCNTL       equ	15634	;# 
   472   003D13                     SPI1TCNTH       equ	15635	;# 
   473   003D14                     SPI1CON0        equ	15636	;# 
   474   003D15                     SPI1CON1        equ	15637	;# 
   475   003D16                     SPI1CON2        equ	15638	;# 
   476   003D17                     SPI1STATUS      equ	15639	;# 
   477   003D18                     SPI1TWIDTH      equ	15640	;# 
   478   003D19                     SPI1BAUD        equ	15641	;# 
   479   003D1A                     SPI1INTF        equ	15642	;# 
   480   003D1B                     SPI1INTE        equ	15643	;# 
   481   003D1C                     SPI1CLK         equ	15644	;# 
   482   003D54                     I2C2RXB         equ	15700	;# 
   483   003D55                     I2C2TXB         equ	15701	;# 
   484   003D56                     I2C2CNT         equ	15702	;# 
   485   003D57                     I2C2ADB0        equ	15703	;# 
   486   003D58                     I2C2ADB1        equ	15704	;# 
   487   003D59                     I2C2ADR0        equ	15705	;# 
   488   003D5A                     I2C2ADR1        equ	15706	;# 
   489   003D5B                     I2C2ADR2        equ	15707	;# 
   490   003D5C                     I2C2ADR3        equ	15708	;# 
   491   003D5D                     I2C2CON0        equ	15709	;# 
   492   003D5E                     I2C2CON1        equ	15710	;# 
   493   003D5F                     I2C2CON2        equ	15711	;# 
   494   003D60                     I2C2ERR         equ	15712	;# 
   495   003D61                     I2C2STAT0       equ	15713	;# 
   496   003D62                     I2C2STAT1       equ	15714	;# 
   497   003D63                     I2C2PIR         equ	15715	;# 
   498   003D64                     I2C2PIE         equ	15716	;# 
   499   003D65                     I2C2CLK         equ	15717	;# 
   500   003D66                     I2C2BTO         equ	15718	;# 
   501   003D6A                     I2C1RXB         equ	15722	;# 
   502   003D6B                     I2C1TXB         equ	15723	;# 
   503   003D6C                     I2C1CNT         equ	15724	;# 
   504   003D6D                     I2C1ADB0        equ	15725	;# 
   505   003D6E                     I2C1ADB1        equ	15726	;# 
   506   003D6F                     I2C1ADR0        equ	15727	;# 
   507   003D70                     I2C1ADR1        equ	15728	;# 
   508   003D71                     I2C1ADR2        equ	15729	;# 
   509   003D72                     I2C1ADR3        equ	15730	;# 
   510   003D73                     I2C1CON0        equ	15731	;# 
   511   003D74                     I2C1CON1        equ	15732	;# 
   512   003D75                     I2C1CON2        equ	15733	;# 
   513   003D76                     I2C1ERR         equ	15734	;# 
   514   003D77                     I2C1STAT0       equ	15735	;# 
   515   003D78                     I2C1STAT1       equ	15736	;# 
   516   003D79                     I2C1PIR         equ	15737	;# 
   517   003D7A                     I2C1PIE         equ	15738	;# 
   518   003D7B                     I2C1CLK         equ	15739	;# 
   519   003D7C                     I2C1BTO         equ	15740	;# 
   520   003DD0                     U2RXB           equ	15824	;# 
   521   003DD0                     U2RXBL          equ	15824	;# 
   522   003DD2                     U2TXB           equ	15826	;# 
   523   003DD2                     U2TXBL          equ	15826	;# 
   524   003DD4                     U2P1            equ	15828	;# 
   525   003DD4                     U2P1L           equ	15828	;# 
   526   003DD6                     U2P2            equ	15830	;# 
   527   003DD6                     U2P2L           equ	15830	;# 
   528   003DD8                     U2P3            equ	15832	;# 
   529   003DD8                     U2P3L           equ	15832	;# 
   530   003DDA                     U2CON0          equ	15834	;# 
   531   003DDB                     U2CON1          equ	15835	;# 
   532   003DDC                     U2CON2          equ	15836	;# 
   533   003DDD                     U2BRG           equ	15837	;# 
   534   003DDD                     U2BRGL          equ	15837	;# 
   535   003DDE                     U2BRGH          equ	15838	;# 
   536   003DDF                     U2FIFO          equ	15839	;# 
   537   003DE0                     U2UIR           equ	15840	;# 
   538   003DE1                     U2ERRIR         equ	15841	;# 
   539   003DE2                     U2ERRIE         equ	15842	;# 
   540   003DE8                     U1RXB           equ	15848	;# 
   541   003DE8                     U1RXBL          equ	15848	;# 
   542   003DE9                     U1RXCHK         equ	15849	;# 
   543   003DEA                     U1TXB           equ	15850	;# 
   544   003DEA                     U1TXBL          equ	15850	;# 
   545   003DEB                     U1TXCHK         equ	15851	;# 
   546   003DEC                     U1P1            equ	15852	;# 
   547   003DEC                     U1P1L           equ	15852	;# 
   548   003DED                     U1P1H           equ	15853	;# 
   549   003DEE                     U1P2            equ	15854	;# 
   550   003DEE                     U1P2L           equ	15854	;# 
   551   003DEF                     U1P2H           equ	15855	;# 
   552   003DF0                     U1P3            equ	15856	;# 
   553   003DF0                     U1P3L           equ	15856	;# 
   554   003DF1                     U1P3H           equ	15857	;# 
   555   003DF2                     U1CON0          equ	15858	;# 
   556   003DF3                     U1CON1          equ	15859	;# 
   557   003DF4                     U1CON2          equ	15860	;# 
   558   003DF5                     U1BRG           equ	15861	;# 
   559   003DF5                     U1BRGL          equ	15861	;# 
   560   003DF6                     U1BRGH          equ	15862	;# 
   561   003DF7                     U1FIFO          equ	15863	;# 
   562   003DF8                     U1UIR           equ	15864	;# 
   563   003DF9                     U1ERRIR         equ	15865	;# 
   564   003DFA                     U1ERRIE         equ	15866	;# 
   565   003E9C                     DAC1CON1        equ	16028	;# 
   566   003E9E                     DAC1CON0        equ	16030	;# 
   567   003EB8                     CM2CON0         equ	16056	;# 
   568   003EB9                     CM2CON1         equ	16057	;# 
   569   003EBA                     CM2NCH          equ	16058	;# 
   570   003EBB                     CM2PCH          equ	16059	;# 
   571   003EBC                     CM1CON0         equ	16060	;# 
   572   003EBD                     CM1CON1         equ	16061	;# 
   573   003EBE                     CM1NCH          equ	16062	;# 
   574   003EBF                     CM1PCH          equ	16063	;# 
   575   003EC0                     CMOUT           equ	16064	;# 
   576   003EC1                     FVRCON          equ	16065	;# 
   577   003EC3                     ZCDCON          equ	16067	;# 
   578   003EC9                     HLVDCON0        equ	16073	;# 
   579   003ECA                     HLVDCON1        equ	16074	;# 
   580   003ED7                     ADCP            equ	16087	;# 
   581   003EDE                     ADLTH           equ	16094	;# 
   582   003EDE                     ADLTHL          equ	16094	;# 
   583   003EDF                     ADLTHH          equ	16095	;# 
   584   003EE0                     ADUTH           equ	16096	;# 
   585   003EE0                     ADUTHL          equ	16096	;# 
   586   003EE1                     ADUTHH          equ	16097	;# 
   587   003EE2                     ADERR           equ	16098	;# 
   588   003EE2                     ADERRL          equ	16098	;# 
   589   003EE3                     ADERRH          equ	16099	;# 
   590   003EE4                     ADSTPT          equ	16100	;# 
   591   003EE4                     ADSTPTL         equ	16100	;# 
   592   003EE5                     ADSTPTH         equ	16101	;# 
   593   003EE6                     ADFLTR          equ	16102	;# 
   594   003EE6                     ADFLTRL         equ	16102	;# 
   595   003EE7                     ADFLTRH         equ	16103	;# 
   596   003EE8                     ADACC           equ	16104	;# 
   597   003EE8                     ADACCL          equ	16104	;# 
   598   003EE9                     ADACCH          equ	16105	;# 
   599   003EEA                     ADACCU          equ	16106	;# 
   600   003EEB                     ADCNT           equ	16107	;# 
   601   003EEC                     ADRPT           equ	16108	;# 
   602   003EED                     ADPREV          equ	16109	;# 
   603   003EED                     ADPREVL         equ	16109	;# 
   604   003EEE                     ADPREVH         equ	16110	;# 
   605   003EEF                     ADRES           equ	16111	;# 
   606   003EEF                     ADRESL          equ	16111	;# 
   607   003EF0                     ADRESH          equ	16112	;# 
   608   003EF1                     ADPCH           equ	16113	;# 
   609   003EF3                     ADACQ           equ	16115	;# 
   610   003EF3                     ADACQL          equ	16115	;# 
   611   003EF4                     ADACQH          equ	16116	;# 
   612   003EF5                     ADCAP           equ	16117	;# 
   613   003EF6                     ADPRE           equ	16118	;# 
   614   003EF6                     ADPREL          equ	16118	;# 
   615   003EF7                     ADPREH          equ	16119	;# 
   616   003EF8                     ADCON0          equ	16120	;# 
   617   003EF9                     ADCON1          equ	16121	;# 
   618   003EFA                     ADCON2          equ	16122	;# 
   619   003EFB                     ADCON3          equ	16123	;# 
   620   003EFC                     ADSTAT          equ	16124	;# 
   621   003EFD                     ADREF           equ	16125	;# 
   622   003EFE                     ADACT           equ	16126	;# 
   623   003EFF                     ADCLK           equ	16127	;# 
   624   003F12                     SMT1TMR         equ	16146	;# 
   625   003F12                     SMT1TMRL        equ	16146	;# 
   626   003F13                     SMT1TMRH        equ	16147	;# 
   627   003F14                     SMT1TMRU        equ	16148	;# 
   628   003F15                     SMT1CPR         equ	16149	;# 
   629   003F15                     SMT1CPRL        equ	16149	;# 
   630   003F16                     SMT1CPRH        equ	16150	;# 
   631   003F17                     SMT1CPRU        equ	16151	;# 
   632   003F18                     SMT1CPW         equ	16152	;# 
   633   003F18                     SMT1CPWL        equ	16152	;# 
   634   003F19                     SMT1CPWH        equ	16153	;# 
   635   003F1A                     SMT1CPWU        equ	16154	;# 
   636   003F1B                     SMT1PR          equ	16155	;# 
   637   003F1B                     SMT1PRL         equ	16155	;# 
   638   003F1C                     SMT1PRH         equ	16156	;# 
   639   003F1D                     SMT1PRU         equ	16157	;# 
   640   003F1E                     SMT1CON0        equ	16158	;# 
   641   003F1F                     SMT1CON1        equ	16159	;# 
   642   003F20                     SMT1STAT        equ	16160	;# 
   643   003F21                     SMT1CLK         equ	16161	;# 
   644   003F22                     SMT1SIG         equ	16162	;# 
   645   003F23                     SMT1WIN         equ	16163	;# 
   646   003F38                     NCO1ACC         equ	16184	;# 
   647   003F38                     NCO1ACCL        equ	16184	;# 
   648   003F39                     NCO1ACCH        equ	16185	;# 
   649   003F3A                     NCO1ACCU        equ	16186	;# 
   650   003F3B                     NCO1INC         equ	16187	;# 
   651   003F3B                     NCO1INCL        equ	16187	;# 
   652   003F3C                     NCO1INCH        equ	16188	;# 
   653   003F3D                     NCO1INCU        equ	16189	;# 
   654   003F3E                     NCO1CON         equ	16190	;# 
   655   003F3F                     NCO1CLK         equ	16191	;# 
   656   003F40                     CWG3CLK         equ	16192	;# 
   657   003F40                     CWG3CLKCON      equ	16192	;# 
   658   003F41                     CWG3ISM         equ	16193	;# 
   659   003F41                     CWG3DAT         equ	16193	;# 
   660   003F42                     CWG3DBR         equ	16194	;# 
   661   003F43                     CWG3DBF         equ	16195	;# 
   662   003F44                     CWG3CON0        equ	16196	;# 
   663   003F45                     CWG3CON1        equ	16197	;# 
   664   003F46                     CWG3AS0         equ	16198	;# 
   665   003F47                     CWG3AS1         equ	16199	;# 
   666   003F48                     CWG3STR         equ	16200	;# 
   667   003F49                     CWG2CLK         equ	16201	;# 
   668   003F49                     CWG2CLKCON      equ	16201	;# 
   669   003F4A                     CWG2ISM         equ	16202	;# 
   670   003F4A                     CWG2DAT         equ	16202	;# 
   671   003F4B                     CWG2DBR         equ	16203	;# 
   672   003F4C                     CWG2DBF         equ	16204	;# 
   673   003F4D                     CWG2CON0        equ	16205	;# 
   674   003F4E                     CWG2CON1        equ	16206	;# 
   675   003F4F                     CWG2AS0         equ	16207	;# 
   676   003F50                     CWG2AS1         equ	16208	;# 
   677   003F51                     CWG2STR         equ	16209	;# 
   678   003F52                     CWG1CLK         equ	16210	;# 
   679   003F52                     CWG1CLKCON      equ	16210	;# 
   680   003F53                     CWG1ISM         equ	16211	;# 
   681   003F53                     CWG1DAT         equ	16211	;# 
   682   003F54                     CWG1DBR         equ	16212	;# 
   683   003F55                     CWG1DBF         equ	16213	;# 
   684   003F56                     CWG1CON0        equ	16214	;# 
   685   003F57                     CWG1CON1        equ	16215	;# 
   686   003F58                     CWG1AS0         equ	16216	;# 
   687   003F59                     CWG1AS1         equ	16217	;# 
   688   003F5A                     CWG1STR         equ	16218	;# 
   689   003F5E                     CCPTMRS0        equ	16222	;# 
   690   003F5F                     CCPTMRS1        equ	16223	;# 
   691   003F60                     PWM8DC          equ	16224	;# 
   692   003F60                     PWM8DCL         equ	16224	;# 
   693   003F61                     PWM8DCH         equ	16225	;# 
   694   003F62                     PWM8CON         equ	16226	;# 
   695   003F64                     PWM7DC          equ	16228	;# 
   696   003F64                     PWM7DCL         equ	16228	;# 
   697   003F65                     PWM7DCH         equ	16229	;# 
   698   003F66                     PWM7CON         equ	16230	;# 
   699   003F68                     PWM6DC          equ	16232	;# 
   700   003F68                     PWM6DCL         equ	16232	;# 
   701   003F69                     PWM6DCH         equ	16233	;# 
   702   003F6A                     PWM6CON         equ	16234	;# 
   703   003F6C                     PWM5DC          equ	16236	;# 
   704   003F6C                     PWM5DCL         equ	16236	;# 
   705   003F6D                     PWM5DCH         equ	16237	;# 
   706   003F6E                     PWM5CON         equ	16238	;# 
   707   003F70                     CCPR4           equ	16240	;# 
   708   003F70                     CCPR4L          equ	16240	;# 
   709   003F71                     CCPR4H          equ	16241	;# 
   710   003F72                     CCP4CON         equ	16242	;# 
   711   003F73                     CCP4CAP         equ	16243	;# 
   712   003F74                     CCPR3           equ	16244	;# 
   713   003F74                     CCPR3L          equ	16244	;# 
   714   003F75                     CCPR3H          equ	16245	;# 
   715   003F76                     CCP3CON         equ	16246	;# 
   716   003F77                     CCP3CAP         equ	16247	;# 
   717   003F78                     CCPR2           equ	16248	;# 
   718   003F78                     CCPR2L          equ	16248	;# 
   719   003F79                     CCPR2H          equ	16249	;# 
   720   003F7A                     CCP2CON         equ	16250	;# 
   721   003F7B                     CCP2CAP         equ	16251	;# 
   722   003F7C                     CCPR1           equ	16252	;# 
   723   003F7C                     CCPR1L          equ	16252	;# 
   724   003F7D                     CCPR1H          equ	16253	;# 
   725   003F7E                     CCP1CON         equ	16254	;# 
   726   003F7F                     CCP1CAP         equ	16255	;# 
   727   003F92                     T6TMR           equ	16274	;# 
   728   003F92                     TMR6            equ	16274	;# 
   729   003F93                     T6PR            equ	16275	;# 
   730   003F93                     PR6             equ	16275	;# 
   731   003F94                     T6CON           equ	16276	;# 
   732   003F95                     T6HLT           equ	16277	;# 
   733   003F96                     T6CLKCON        equ	16278	;# 
   734   003F96                     T6CLK           equ	16278	;# 
   735   003F97                     T6RST           equ	16279	;# 
   736   003F98                     TMR5            equ	16280	;# 
   737   003F98                     TMR5L           equ	16280	;# 
   738   003F99                     TMR5H           equ	16281	;# 
   739   003F9A                     T5CON           equ	16282	;# 
   740   003F9A                     TMR5CON         equ	16282	;# 
   741   003F9B                     T5GCON          equ	16283	;# 
   742   003F9B                     TMR5GCON        equ	16283	;# 
   743   003F9C                     T5GATE          equ	16284	;# 
   744   003F9C                     TMR5GATE        equ	16284	;# 
   745   003F9D                     T5CLK           equ	16285	;# 
   746   003F9D                     TMR5CLK         equ	16285	;# 
   747   003F9D                     PR5             equ	16285	;# 
   748   003F9E                     T4TMR           equ	16286	;# 
   749   003F9E                     TMR4            equ	16286	;# 
   750   003F9F                     T4PR            equ	16287	;# 
   751   003F9F                     PR4             equ	16287	;# 
   752   003FA0                     T4CON           equ	16288	;# 
   753   003FA1                     T4HLT           equ	16289	;# 
   754   003FA2                     T4CLKCON        equ	16290	;# 
   755   003FA2                     T4CLK           equ	16290	;# 
   756   003FA3                     T4RST           equ	16291	;# 
   757   003FA4                     TMR3            equ	16292	;# 
   758   003FA4                     TMR3L           equ	16292	;# 
   759   003FA5                     TMR3H           equ	16293	;# 
   760   003FA6                     T3CON           equ	16294	;# 
   761   003FA6                     TMR3CON         equ	16294	;# 
   762   003FA7                     T3GCON          equ	16295	;# 
   763   003FA7                     TMR3GCON        equ	16295	;# 
   764   003FA8                     T3GATE          equ	16296	;# 
   765   003FA8                     TMR3GATE        equ	16296	;# 
   766   003FA9                     T3CLK           equ	16297	;# 
   767   003FA9                     TMR3CLK         equ	16297	;# 
   768   003FA9                     PR3             equ	16297	;# 
   769   003FAA                     T2TMR           equ	16298	;# 
   770   003FAA                     TMR2            equ	16298	;# 
   771   003FAB                     T2PR            equ	16299	;# 
   772   003FAB                     PR2             equ	16299	;# 
   773   003FAC                     T2CON           equ	16300	;# 
   774   003FAD                     T2HLT           equ	16301	;# 
   775   003FAE                     T2CLKCON        equ	16302	;# 
   776   003FAE                     T2CLK           equ	16302	;# 
   777   003FAF                     T2RST           equ	16303	;# 
   778   003FB0                     TMR1            equ	16304	;# 
   779   003FB0                     TMR1L           equ	16304	;# 
   780   003FB1                     TMR1H           equ	16305	;# 
   781   003FB2                     T1CON           equ	16306	;# 
   782   003FB2                     TMR1CON         equ	16306	;# 
   783   003FB3                     T1GCON          equ	16307	;# 
   784   003FB3                     TMR1GCON        equ	16307	;# 
   785   003FB4                     T1GATE          equ	16308	;# 
   786   003FB4                     TMR1GATE        equ	16308	;# 
   787   003FB5                     T1CLK           equ	16309	;# 
   788   003FB5                     TMR1CLK         equ	16309	;# 
   789   003FB5                     PR1             equ	16309	;# 
   790   003FB6                     TMR0L           equ	16310	;# 
   791   003FB6                     TMR0            equ	16310	;# 
   792   003FB7                     TMR0H           equ	16311	;# 
   793   003FB7                     PR0             equ	16311	;# 
   794   003FB8                     T0CON0          equ	16312	;# 
   795   003FB9                     T0CON1          equ	16313	;# 
   796   003FBA                     LATA            equ	16314	;# 
   797   003FBB                     LATB            equ	16315	;# 
   798   003FBC                     LATC            equ	16316	;# 
   799   003FBD                     LATD            equ	16317	;# 
   800   003FBE                     LATE            equ	16318	;# 
   801   003FC2                     TRISA           equ	16322	;# 
   802   003FC3                     TRISB           equ	16323	;# 
   803   003FC4                     TRISC           equ	16324	;# 
   804   003FC5                     TRISD           equ	16325	;# 
   805   003FC6                     TRISE           equ	16326	;# 
   806   003FCA                     PORTA           equ	16330	;# 
   807   003FCB                     PORTB           equ	16331	;# 
   808   003FCC                     PORTC           equ	16332	;# 
   809   003FCD                     PORTD           equ	16333	;# 
   810   003FCE                     PORTE           equ	16334	;# 
   811   003FD2                     INTCON0         equ	16338	;# 
   812   003FD3                     INTCON1         equ	16339	;# 
   813   003FD4                     IVTLOCK         equ	16340	;# 
   814   003FD5                     IVTBASE         equ	16341	;# 
   815   003FD5                     IVTBASEL        equ	16341	;# 
   816   003FD6                     IVTBASEH        equ	16342	;# 
   817   003FD7                     IVTBASEU        equ	16343	;# 
   818   003FD8                     STATUS          equ	16344	;# 
   819   003FD9                     FSR2            equ	16345	;# 
   820   003FD9                     FSR2L           equ	16345	;# 
   821   003FDA                     FSR2H           equ	16346	;# 
   822   003FDB                     PLUSW2          equ	16347	;# 
   823   003FDC                     PREINC2         equ	16348	;# 
   824   003FDD                     POSTDEC2        equ	16349	;# 
   825   003FDE                     POSTINC2        equ	16350	;# 
   826   003FDF                     INDF2           equ	16351	;# 
   827   003FE0                     BSR             equ	16352	;# 
   828   003FE1                     FSR1            equ	16353	;# 
   829   003FE1                     FSR1L           equ	16353	;# 
   830   003FE2                     FSR1H           equ	16354	;# 
   831   003FE3                     PLUSW1          equ	16355	;# 
   832   003FE4                     PREINC1         equ	16356	;# 
   833   003FE5                     POSTDEC1        equ	16357	;# 
   834   003FE6                     POSTINC1        equ	16358	;# 
   835   003FE7                     INDF1           equ	16359	;# 
   836   003FE8                     WREG            equ	16360	;# 
   837   003FE9                     FSR0            equ	16361	;# 
   838   003FE9                     FSR0L           equ	16361	;# 
   839   003FEA                     FSR0H           equ	16362	;# 
   840   003FEB                     PLUSW0          equ	16363	;# 
   841   003FEC                     PREINC0         equ	16364	;# 
   842   003FED                     POSTDEC0        equ	16365	;# 
   843   003FEE                     POSTINC0        equ	16366	;# 
   844   003FEF                     INDF0           equ	16367	;# 
   845   003FF0                     PCON0           equ	16368	;# 
   846   003FF1                     PCON1           equ	16369	;# 
   847   003FF3                     PROD            equ	16371	;# 
   848   003FF3                     PRODL           equ	16371	;# 
   849   003FF4                     PRODH           equ	16372	;# 
   850   003FF5                     TABLAT          equ	16373	;# 
   851   003FF6                     TBLPTR          equ	16374	;# 
   852   003FF6                     TBLPTRL         equ	16374	;# 
   853   003FF7                     TBLPTRH         equ	16375	;# 
   854   003FF8                     TBLPTRU         equ	16376	;# 
   855   003FF9                     PCLAT           equ	16377	;# 
   856   003FF9                     PCL             equ	16377	;# 
   857   003FFA                     PCLATH          equ	16378	;# 
   858   003FFB                     PCLATU          equ	16379	;# 
   859   003FFC                     STKPTR          equ	16380	;# 
   860   003FFD                     TOS             equ	16381	;# 
   861   003FFD                     TOSL            equ	16381	;# 
   862   003FFE                     TOSH            equ	16382	;# 
   863   003FFF                     TOSU            equ	16383	;# 
   864   003A40                     _ANSELAbits     set	14912
   865   003A70                     _ANSELD         set	14960
   866   003A60                     _ANSELC         set	14944
   867   003A51                     _WPUB           set	14929
   868   003A50                     _ANSELB         set	14928
   869   003A41                     _WPUA           set	14913
   870   003A40                     _ANSELA         set	14912
   871   003EF4                     _ADACQH         set	16116
   872   003EF3                     _ADACQL         set	16115
   873   003EF7                     _ADPREH         set	16119
   874   003EF6                     _ADPREL         set	16118
   875   003EFD                     _ADREF          set	16125
   876   003EF5                     _ADCAP          set	16117
   877   003EF1                     _ADPCH          set	16113
   878   003EFF                     _ADCLK          set	16127
   879   003EEF                     _ADRESL         set	16111
   880   003EF0                     _ADRESH         set	16112
   881   003EF8                     _ADCON0bits     set	16120
   882   003FC2                     _TRISAbits      set	16322
   883   003FC5                     _TRISD          set	16325
   884   003FBD                     _LATD           set	16317
   885   003FCD                     _PORTD          set	16333
   886   003FC4                     _TRISC          set	16324
   887   003FBC                     _LATC           set	16316
   888   003FCC                     _PORTC          set	16332
   889   003FC3                     _TRISB          set	16323
   890   003FBB                     _LATB           set	16315
   891   003FCB                     _PORTB          set	16331
   892   003FC2                     _TRISA          set	16322
   893   003FBA                     _LATA           set	16314
   894   003FCA                     _PORTA          set	16330
   895   01FDE9                     _LATD1          set	130537
   896   01FDE8                     _LATD0          set	130536
   897                           
   898                           	psect	smallconst
   899   002000                     __psmallconst:
   900                           	callstack 0
   901   002000  00                 	db	0
   902   002001                     STR_3:
   903                           
   904                           ; BSR set to: 62
   905   002001  54                 	db	84	;'T'
   906   002002  68                 	db	104	;'h'
   907   002003  65                 	db	101	;'e'
   908   002004  20                 	db	32
   909   002005  49                 	db	73	;'I'
   910   002006  6E                 	db	110	;'n'
   911   002007  70                 	db	112	;'p'
   912   002008  75                 	db	117	;'u'
   913   002009  74                 	db	116	;'t'
   914   00200A  20                 	db	32
   915   00200B  56                 	db	86	;'V'
   916   00200C  6F                 	db	111	;'o'
   917   00200D  6C                 	db	108	;'l'
   918   00200E  74                 	db	116	;'t'
   919   00200F  61                 	db	97	;'a'
   920   002010  67                 	db	103	;'g'
   921   002011  65                 	db	101	;'e'
   922   002012  3A                 	db	58	;':'
   923   002013  00                 	db	0
   924   002014                     STR_1:
   925                           
   926                           ; BSR set to: 62
   927   002014  25                 	db	37
   928   002015  2E                 	db	46
   929   002016  32                 	db	50	;'2'
   930   002017  66                 	db	102	;'f'
   931   002018  00                 	db	0
   932   002019                     STR_4:
   933                           
   934                           ; BSR set to: 62
   935   002019  69                 	db	105	;'i'
   936   00201A  6E                 	db	110	;'n'
   937   00201B  66                 	db	102	;'f'
   938   00201C  00                 	db	0
   939   00201D                     STR_7:
   940                           
   941                           ; BSR set to: 62
   942   00201D  6E                 	db	110	;'n'
   943   00201E  61                 	db	97	;'a'
   944   00201F  6E                 	db	110	;'n'
   945   002020  00                 	db	0
   946   002021                     STR_2:
   947                           
   948                           ; BSR set to: 62
   949   002021  20                 	db	32
   950   002022  56                 	db	86	;'V'
   951   002023  00                 	db	0
   952   00201D                     STR_8           equ	STR_7
   953   00201D                     STR_9           equ	STR_7
   954   002019                     STR_5           equ	STR_4
   955   002019                     STR_6           equ	STR_4
   956   002024  00                 	db	0	; dummy byte at the end
   957   002000                     __smallconst    set	__psmallconst
   958   002000                     __mediumconst   set	__psmallconst
   959   000003                     __activetblptr  equ	3
   960                           
   961                           ; #config settings
   962                           
   963                           	psect	cinit
   964   004666                     __pcinit:
   965                           	callstack 0
   966   004666                     start_initialization:
   967                           	callstack 0
   968   004666                     __initialization:
   969                           	callstack 0
   970                           
   971                           ; Clear objects allocated to BANK0 (102 bytes)
   972   004666  EE00  F060         	lfsr	0,__pbssBANK0
   973   00466A  0E66               	movlw	102
   974   00466C                     clear_0:
   975   00466C  6AEE               	clrf	postinc0,c
   976   00466E  06E8               	decf	wreg,f,c
   977   004670  E1FD               	bnz	clear_0
   978                           
   979                           ; Clear objects allocated to COMRAM (8 bytes)
   980   004672  EE00  F057         	lfsr	0,__pbssCOMRAM
   981   004676  0E08               	movlw	8
   982   004678                     clear_1:
   983   004678  6AEE               	clrf	postinc0,c
   984   00467A  06E8               	decf	wreg,f,c
   985   00467C  E1FD               	bnz	clear_1
   986   00467E                     end_of_initialization:
   987                           	callstack 0
   988   00467E                     __end_of__initialization:
   989                           	callstack 0
   990   00467E  0100               	movlb	0
   991   004680  EF18  F01E         	goto	_main	;jump to C main() function
   992                           
   993                           	psect	bssCOMRAM
   994   000057                     __pbssCOMRAM:
   995                           	callstack 0
   996   000057                     _voltage:
   997                           	callstack 0
   998   000057                     	ds	4
   999   00005B                     _digital:
  1000                           	callstack 0
  1001   00005B                     	ds	2
  1002   00005D                     _flags:
  1003                           	callstack 0
  1004   00005D                     	ds	1
  1005   00005E                     _x:
  1006                           	callstack 0
  1007   00005E                     	ds	1
  1008                           
  1009                           	psect	bssBANK0
  1010   000060                     __pbssBANK0:
  1011                           	callstack 0
  1012   000060                     floorf@F521:
  1013                           	callstack 0
  1014   000060                     	ds	4
  1015   000064                     ___fpclassifyf@F465:
  1016                           	callstack 0
  1017   000064                     	ds	4
  1018   000068                     _width:
  1019                           	callstack 0
  1020   000068                     	ds	2
  1021   00006A                     _prec:
  1022                           	callstack 0
  1023   00006A                     	ds	2
  1024   00006C                     _dbuf:
  1025                           	callstack 0
  1026   00006C                     	ds	80
  1027   0000BC                     _data:
  1028                           	callstack 0
  1029   0000BC                     	ds	10
  1030                           
  1031                           	psect	cstackBANK0
  1032   0000C6                     __pcstackBANK0:
  1033                           	callstack 0
  1034   0000C6                     efgtoa@ne:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x0
  1038   0000C6                     	ds	2
  1039   0000C8                     efgtoa@p:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x2
  1043   0000C8                     	ds	2
  1044   0000CA                     efgtoa@t:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x4
  1048   0000CA                     	ds	2
  1049   0000CC                     _efgtoa$813:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x6
  1053   0000CC                     	ds	2
  1054   0000CE                     efgtoa@pp:
  1055                           	callstack 0
  1056                           
  1057                           ; 1 bytes @ 0x8
  1058   0000CE                     	ds	1
  1059   0000CF                     efgtoa@mode:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x9
  1063   0000CF                     	ds	1
  1064   0000D0                     efgtoa@nmode:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0xA
  1068   0000D0                     	ds	1
  1069   0000D1                     efgtoa@d:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0xB
  1073   0000D1                     	ds	2
  1074   0000D3                     efgtoa@m:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xD
  1078   0000D3                     	ds	2
  1079   0000D5                     efgtoa@e:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0xF
  1083   0000D5                     	ds	2
  1084   0000D7                     efgtoa@w:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x11
  1088   0000D7                     	ds	2
  1089   0000D9                     efgtoa@ou:
  1090                           	callstack 0
  1091                           
  1092                           ; 4 bytes @ 0x13
  1093   0000D9                     	ds	4
  1094   0000DD                     efgtoa@i:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x17
  1098   0000DD                     	ds	2
  1099   0000DF                     efgtoa@h:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x19
  1103   0000DF                     	ds	4
  1104   0000E3                     efgtoa@l:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x1D
  1108   0000E3                     	ds	4
  1109   0000E7                     efgtoa@sign:
  1110                           	callstack 0
  1111                           
  1112                           ; 1 bytes @ 0x21
  1113   0000E7                     	ds	1
  1114   0000E8                     efgtoa@n:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x22
  1118   0000E8                     	ds	2
  1119   0000EA                     efgtoa@g:
  1120                           	callstack 0
  1121                           
  1122                           ; 4 bytes @ 0x24
  1123   0000EA                     	ds	4
  1124   0000EE                     efgtoa@u:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x28
  1128   0000EE                     	ds	4
  1129   0000F2                     ?_sprintf:
  1130                           	callstack 0
  1131   0000F2                     sprintf@s:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x2C
  1135   0000F2                     	ds	1
  1136   0000F3                     sprintf@fmt:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x2D
  1140   0000F3                     	ds	5
  1141                           
  1142                           	psect	cstackCOMRAM
  1143   000001                     __pcstackCOMRAM:
  1144                           	callstack 0
  1145   000001                     ?___fpclassifyf:
  1146                           	callstack 0
  1147   000001                     ?_read_prec_or_width:
  1148                           	callstack 0
  1149   000001                     ?___fladd:
  1150                           	callstack 0
  1151   000001                     ?___fldiv:
  1152                           	callstack 0
  1153   000001                     ?_labs:
  1154                           	callstack 0
  1155   000001                     ?___flneg:
  1156                           	callstack 0
  1157   000001                     ?___fltol:
  1158                           	callstack 0
  1159   000001                     ?___xxtofl:
  1160                           	callstack 0
  1161   000001                     read_prec_or_width@fmt:
  1162                           	callstack 0
  1163   000001                     memcpy@d1:
  1164                           	callstack 0
  1165   000001                     strcat@dest:
  1166                           	callstack 0
  1167   000001                     strcpy@dest:
  1168                           	callstack 0
  1169   000001                     MSdelay@val:
  1170                           	callstack 0
  1171   000001                     fputc@c:
  1172                           	callstack 0
  1173   000001                     ___fleq@ff1:
  1174                           	callstack 0
  1175   000001                     ___flneg@f1:
  1176                           	callstack 0
  1177   000001                     ___fltol@f1:
  1178                           	callstack 0
  1179   000001                     ___fladd@b:
  1180                           	callstack 0
  1181   000001                     ___fldiv@b:
  1182                           	callstack 0
  1183   000001                     ___xxtofl@val:
  1184                           	callstack 0
  1185   000001                     ___fpclassifyf@x:
  1186                           	callstack 0
  1187   000001                     labs@a:
  1188                           	callstack 0
  1189   000001                     
  1190                           ; 1 bytes @ 0x0
  1191   000001                     	ds	1
  1192   000002                     read_prec_or_width@ap:
  1193                           	callstack 0
  1194   000002                     memcpy@s1:
  1195                           	callstack 0
  1196   000002                     strcat@src:
  1197                           	callstack 0
  1198   000002                     strcpy@src:
  1199                           	callstack 0
  1200                           
  1201                           ; 1 bytes @ 0x1
  1202   000002                     	ds	1
  1203   000003                     fputc@fp:
  1204                           	callstack 0
  1205   000003                     MSdelay@i:
  1206                           	callstack 0
  1207   000003                     memcpy@n:
  1208                           	callstack 0
  1209   000003                     strcat@i:
  1210                           	callstack 0
  1211   000003                     ??_strcpy:
  1212   000003                     ??_read_prec_or_width:
  1213                           
  1214                           ; 1 bytes @ 0x2
  1215   000003                     	ds	1
  1216   000004                     strcpy@d:
  1217                           	callstack 0
  1218   000004                     ??_fputc:
  1219                           
  1220                           ; 1 bytes @ 0x3
  1221   000004                     	ds	1
  1222   000005                     read_prec_or_width@c:
  1223                           	callstack 0
  1224   000005                     memcpy@tmp:
  1225                           	callstack 0
  1226   000005                     MSdelay@j:
  1227                           	callstack 0
  1228   000005                     ___fleq@ff2:
  1229                           	callstack 0
  1230   000005                     ___fladd@a:
  1231                           	callstack 0
  1232   000005                     ___fldiv@a:
  1233                           	callstack 0
  1234   000005                     ??___fpclassifyf:
  1235   000005                     ??_labs:
  1236   000005                     ??___fltol:
  1237   000005                     ??___xxtofl:
  1238                           
  1239                           ; 1 bytes @ 0x4
  1240   000005                     	ds	1
  1241   000006                     memcpy@d:
  1242                           	callstack 0
  1243   000006                     read_prec_or_width@n:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x5
  1247   000006                     	ds	1
  1248   000007                     LCD_Command@cmd:
  1249                           	callstack 0
  1250   000007                     LCD_Char@dat:
  1251                           	callstack 0
  1252   000007                     memcpy@s:
  1253                           	callstack 0
  1254   000007                     
  1255                           ; 1 bytes @ 0x6
  1256   000007                     	ds	1
  1257   000008                     LCD_String@msg:
  1258                           	callstack 0
  1259   000008                     
  1260                           ; 1 bytes @ 0x7
  1261   000008                     	ds	1
  1262   000009                     ___fltol@sign1:
  1263                           	callstack 0
  1264   000009                     ___xxtofl@sign:
  1265                           	callstack 0
  1266   000009                     fputs@s:
  1267                           	callstack 0
  1268   000009                     ___fpclassifyf@e:
  1269                           	callstack 0
  1270   000009                     ??___fladd:
  1271   000009                     ??___fldiv:
  1272   000009                     ??___fleq:
  1273                           
  1274                           ; 1 bytes @ 0x8
  1275   000009                     	ds	1
  1276   00000A                     LCD_String_xy@pos:
  1277                           	callstack 0
  1278   00000A                     ___fltol@exp1:
  1279                           	callstack 0
  1280   00000A                     ___xxtofl@exp:
  1281                           	callstack 0
  1282   00000A                     fputs@fp:
  1283                           	callstack 0
  1284   00000A                     
  1285                           ; 1 bytes @ 0x9
  1286   00000A                     	ds	1
  1287   00000B                     fputs@c:
  1288                           	callstack 0
  1289   00000B                     LCD_String_xy@msg:
  1290                           	callstack 0
  1291   00000B                     ___xxtofl@arg:
  1292                           	callstack 0
  1293   00000B                     ___fpclassifyf@u:
  1294                           	callstack 0
  1295   00000B                     
  1296                           ; 1 bytes @ 0xA
  1297   00000B                     	ds	1
  1298   00000C                     fputs@i:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0xB
  1302   00000C                     	ds	1
  1303   00000D                     LCD_String_xy@row:
  1304                           	callstack 0
  1305   00000D                     ___fladd@signs:
  1306                           	callstack 0
  1307   00000D                     ___fldiv@rem:
  1308                           	callstack 0
  1309   00000D                     
  1310                           ; 1 bytes @ 0xC
  1311   00000D                     	ds	1
  1312   00000E                     LCD_String_xy@location:
  1313                           	callstack 0
  1314   00000E                     ___fladd@aexp:
  1315                           	callstack 0
  1316   00000E                     pad@fp:
  1317                           	callstack 0
  1318                           
  1319                           ; 1 bytes @ 0xD
  1320   00000E                     	ds	1
  1321   00000F                     ?___flmul:
  1322                           	callstack 0
  1323   00000F                     ___fladd@bexp:
  1324                           	callstack 0
  1325   00000F                     pad@buf:
  1326                           	callstack 0
  1327   00000F                     ___flmul@b:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0xE
  1331   00000F                     	ds	1
  1332   000010                     ___fladd@grs:
  1333                           	callstack 0
  1334   000010                     pad@p:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0xF
  1338   000010                     	ds	1
  1339   000011                     ___fldiv@sign:
  1340                           	callstack 0
  1341                           
  1342                           ; 1 bytes @ 0x10
  1343   000011                     	ds	1
  1344   000012                     ___fldiv@new_exp:
  1345                           	callstack 0
  1346   000012                     ??_pad:
  1347                           
  1348                           ; 1 bytes @ 0x11
  1349   000012                     	ds	1
  1350   000013                     pad@i:
  1351                           	callstack 0
  1352   000013                     ___flmul@a:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x12
  1356   000013                     	ds	1
  1357   000014                     ___fldiv@grs:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x13
  1361   000014                     	ds	3
  1362   000017                     ??___flmul:
  1363                           
  1364                           ; 1 bytes @ 0x16
  1365   000017                     	ds	1
  1366   000018                     ___fldiv@bexp:
  1367                           	callstack 0
  1368                           
  1369                           ; 1 bytes @ 0x17
  1370   000018                     	ds	1
  1371   000019                     ___fldiv@aexp:
  1372                           	callstack 0
  1373                           
  1374                           ; 1 bytes @ 0x18
  1375   000019                     	ds	1
  1376   00001A                     ?_floorf:
  1377                           	callstack 0
  1378   00001A                     floorf@x:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0x19
  1382   00001A                     	ds	1
  1383   00001B                     ___flmul@sign:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x1A
  1387   00001B                     	ds	1
  1388   00001C                     ___flmul@grs:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x1B
  1392   00001C                     	ds	2
  1393   00001E                     ??_floorf:
  1394                           
  1395                           ; 1 bytes @ 0x1D
  1396   00001E                     	ds	2
  1397   000020                     ___flmul@aexp:
  1398                           	callstack 0
  1399                           
  1400                           ; 1 bytes @ 0x1F
  1401   000020                     	ds	1
  1402   000021                     ___flmul@bexp:
  1403                           	callstack 0
  1404                           
  1405                           ; 1 bytes @ 0x20
  1406   000021                     	ds	1
  1407   000022                     ___flmul@prod:
  1408                           	callstack 0
  1409                           
  1410                           ; 4 bytes @ 0x21
  1411   000022                     	ds	2
  1412   000024                     floorf@m:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x23
  1416   000024                     	ds	2
  1417   000026                     ___flmul@temp:
  1418                           	callstack 0
  1419                           
  1420                           ; 2 bytes @ 0x25
  1421   000026                     	ds	2
  1422   000028                     ?___flsub:
  1423                           	callstack 0
  1424   000028                     floorf@e:
  1425                           	callstack 0
  1426   000028                     ___flge@ff1:
  1427                           	callstack 0
  1428   000028                     ___flsub@b:
  1429                           	callstack 0
  1430                           
  1431                           ; 4 bytes @ 0x27
  1432   000028                     	ds	2
  1433   00002A                     floorf@u:
  1434                           	callstack 0
  1435                           
  1436                           ; 4 bytes @ 0x29
  1437   00002A                     	ds	2
  1438   00002C                     ___flge@ff2:
  1439                           	callstack 0
  1440   00002C                     ___flsub@a:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x2B
  1444   00002C                     	ds	4
  1445   000030                     ??___flge:
  1446                           
  1447                           ; 1 bytes @ 0x2F
  1448   000030                     	ds	4
  1449   000034                     efgtoa@fp:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x33
  1453   000034                     	ds	1
  1454   000035                     efgtoa@f:
  1455                           	callstack 0
  1456                           
  1457                           ; 4 bytes @ 0x34
  1458   000035                     	ds	4
  1459   000039                     efgtoa@c:
  1460                           	callstack 0
  1461                           
  1462                           ; 1 bytes @ 0x38
  1463   000039                     	ds	1
  1464   00003A                     ??_efgtoa:
  1465                           
  1466                           ; 1 bytes @ 0x39
  1467   00003A                     	ds	1
  1468   00003B                     vfpfcnvrt@fp:
  1469                           	callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x3A
  1472   00003B                     	ds	1
  1473   00003C                     vfpfcnvrt@fmt:
  1474                           	callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x3B
  1477   00003C                     	ds	1
  1478   00003D                     vfpfcnvrt@ap:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x3C
  1482   00003D                     	ds	1
  1483   00003E                     ??_vfpfcnvrt:
  1484                           
  1485                           ; 1 bytes @ 0x3D
  1486   00003E                     	ds	1
  1487   00003F                     vfpfcnvrt@convarg:
  1488                           	callstack 0
  1489                           
  1490                           ; 4 bytes @ 0x3E
  1491   00003F                     	ds	4
  1492   000043                     vfpfcnvrt@c:
  1493                           	callstack 0
  1494                           
  1495                           ; 1 bytes @ 0x42
  1496   000043                     	ds	1
  1497   000044                     vfpfcnvrt@cp:
  1498                           	callstack 0
  1499                           
  1500                           ; 1 bytes @ 0x43
  1501   000044                     	ds	1
  1502   000045                     ?_vfprintf:
  1503                           	callstack 0
  1504   000045                     vfprintf@fp:
  1505                           	callstack 0
  1506                           
  1507                           ; 1 bytes @ 0x44
  1508   000045                     	ds	1
  1509   000046                     vfprintf@fmt:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x45
  1513   000046                     	ds	1
  1514   000047                     vfprintf@ap:
  1515                           	callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x46
  1518   000047                     	ds	1
  1519   000048                     vfprintf@cfmt:
  1520                           	callstack 0
  1521   000048                     
  1522                           ; 1 bytes @ 0x47
  1523   000048                     	ds	1
  1524   000049                     sprintf@ap:
  1525                           	callstack 0
  1526   000049                     
  1527                           ; 1 bytes @ 0x48
  1528   000049                     	ds	1
  1529   00004A                     sprintf@f:
  1530                           	callstack 0
  1531                           
  1532                           ; 11 bytes @ 0x49
  1533   00004A                     	ds	11
  1534   000055                     ??_main:
  1535                           
  1536                           ; 1 bytes @ 0x54
  1537   000055                     	ds	2
  1538                           
  1539 ;;
  1540 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1541 ;;
  1542 ;; *************** function _main *****************
  1543 ;; Defined at:
  1544 ;;		line 98 in file "LCD.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1561 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1562 ;;Total ram usage:        2 bytes
  1563 ;; Hardware stack levels required when called: 8
  1564 ;; This function calls:
  1565 ;;		_ADC_Init
  1566 ;;		_LCD_Init
  1567 ;;		_LCD_String_xy
  1568 ;;		___flmul
  1569 ;;		___xxtofl
  1570 ;;		_sprintf
  1571 ;;		_strcat
  1572 ;; This function is called by:
  1573 ;;		Startup code after reset
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text0
  1578   003C30                     __ptext0:
  1579                           	callstack 0
  1580   003C30                     _main:
  1581                           	callstack 23
  1582   003C30                     
  1583                           ;LCD.c: 101:      PORTA = 0;
  1584   003C30  6ACA               	clrf	202,c	;volatile
  1585                           
  1586                           ;LCD.c: 102:     LATA = 0;
  1587   003C32  6ABA               	clrf	186,c	;volatile
  1588                           
  1589                           ;LCD.c: 103:     ANSELA = 0;
  1590   003C34  013A               	movlb	58	; () banked
  1591   003C36  6B40               	clrf	64,b	;volatile
  1592   003C38                     
  1593                           ; BSR set to: 58
  1594                           ;LCD.c: 104:     TRISA = 0b00000111;
  1595   003C38  0E07               	movlw	7
  1596   003C3A  6EC2               	movwf	194,c	;volatile
  1597   003C3C                     
  1598                           ; BSR set to: 58
  1599                           ;LCD.c: 105:     WPUA = 0b00000000;
  1600   003C3C  6B41               	clrf	65,b	;volatile
  1601   003C3E                     
  1602                           ; BSR set to: 58
  1603                           ;LCD.c: 106:     PORTB = 0;
  1604   003C3E  6ACB               	clrf	203,c	;volatile
  1605   003C40                     
  1606                           ; BSR set to: 58
  1607                           ;LCD.c: 107:     LATB = 0;
  1608   003C40  6ABB               	clrf	187,c	;volatile
  1609   003C42                     
  1610                           ; BSR set to: 58
  1611                           ;LCD.c: 108:     ANSELB = 0b00000000;
  1612   003C42  6B50               	clrf	80,b	;volatile
  1613   003C44                     
  1614                           ; BSR set to: 58
  1615                           ;LCD.c: 109:     TRISB = 0b00000000;
  1616   003C44  6AC3               	clrf	195,c	;volatile
  1617   003C46                     
  1618                           ; BSR set to: 58
  1619                           ;LCD.c: 110:     WPUB = 0b00000000;
  1620   003C46  6B51               	clrf	81,b	;volatile
  1621   003C48                     
  1622                           ; BSR set to: 58
  1623                           ;LCD.c: 111:     PORTC = 0;
  1624   003C48  6ACC               	clrf	204,c	;volatile
  1625   003C4A                     
  1626                           ; BSR set to: 58
  1627                           ;LCD.c: 112:     LATC = 0;
  1628   003C4A  6ABC               	clrf	188,c	;volatile
  1629   003C4C                     
  1630                           ; BSR set to: 58
  1631                           ;LCD.c: 113:     ANSELC = 0;
  1632   003C4C  6B60               	clrf	96,b	;volatile
  1633   003C4E                     
  1634                           ; BSR set to: 58
  1635                           ;LCD.c: 114:     TRISC = 0b00000000;
  1636   003C4E  6AC4               	clrf	196,c	;volatile
  1637   003C50                     
  1638                           ; BSR set to: 58
  1639                           ;LCD.c: 115:     PORTD = 0;
  1640   003C50  6ACD               	clrf	205,c	;volatile
  1641   003C52                     
  1642                           ; BSR set to: 58
  1643                           ;LCD.c: 116:     LATD = 0;
  1644   003C52  6ABD               	clrf	189,c	;volatile
  1645   003C54                     
  1646                           ; BSR set to: 58
  1647                           ;LCD.c: 117:     ANSELD = 0;
  1648   003C54  6B70               	clrf	112,b	;volatile
  1649   003C56                     
  1650                           ; BSR set to: 58
  1651                           ;LCD.c: 118:     TRISD = 0b00000000;
  1652   003C56  6AC5               	clrf	197,c	;volatile
  1653   003C58                     
  1654                           ; BSR set to: 58
  1655                           ;LCD.c: 120:     ADC_Init();
  1656   003C58  EC20  F023         	call	_ADC_Init	;wreg free
  1657   003C5C                     l3341:
  1658                           
  1659                           ;LCD.c: 122:     {;LCD.c: 124:         ADCON0bits.GO = 1;
  1660   003C5C  013E               	movlb	62	; () banked
  1661   003C5E  81F8               	bsf	248,0,b	;volatile
  1662   003C60                     l96:
  1663                           
  1664                           ; BSR set to: 62
  1665   003C60  B1F8               	btfsc	248,0,b	;volatile
  1666   003C62  EF35  F01E         	goto	u3621
  1667   003C66  EF37  F01E         	goto	u3620
  1668   003C6A                     u3621:
  1669   003C6A  EF30  F01E         	goto	l96
  1670   003C6E                     u3620:
  1671   003C6E                     
  1672                           ; BSR set to: 62
  1673                           ;LCD.c: 127:         digital = (ADRESH*256) | (ADRESL);
  1674   003C6E  51EF               	movf	239,w,b	;volatile
  1675   003C70  006F FBC0  F055    	movff	16112,??_main	;volatile
  1676   003C76  6A56               	clrf	(??_main+1)^0,c
  1677   003C78  C055  F056         	movff	??_main,??_main+1
  1678   003C7C  6A55               	clrf	??_main^0,c
  1679   003C7E  1055               	iorwf	??_main^0,w,c
  1680   003C80  6E5B               	movwf	_digital^0,c
  1681   003C82  5056               	movf	(??_main+1)^0,w,c
  1682   003C84  6E5C               	movwf	(_digital+1)^0,c
  1683   003C86                     
  1684                           ; BSR set to: 62
  1685                           ;LCD.c: 129:         voltage = digital*((float)3.3/(float)(4096));
  1686   003C86  C05B  F001         	movff	_digital,___xxtofl@val
  1687   003C8A  C05C  F002         	movff	_digital+1,___xxtofl@val+1
  1688   003C8E  0E00               	movlw	0
  1689   003C90  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1690   003C92  0EFF               	movlw	-1
  1691   003C94  6E03               	movwf	(___xxtofl@val+2)^0,c
  1692   003C96  6E04               	movwf	(___xxtofl@val+3)^0,c
  1693   003C98  0E01               	movlw	1
  1694   003C9A  EC3E  F01D         	call	___xxtofl
  1695   003C9E  C001  F00F         	movff	?___xxtofl,___flmul@b
  1696   003CA2  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1697   003CA6  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1698   003CAA  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1699   003CAE  0E33               	movlw	51
  1700   003CB0  6E13               	movwf	___flmul@a^0,c
  1701   003CB2  0E33               	movlw	51
  1702   003CB4  6E14               	movwf	(___flmul@a+1)^0,c
  1703   003CB6  0E53               	movlw	83
  1704   003CB8  6E15               	movwf	(___flmul@a+2)^0,c
  1705   003CBA  0E3A               	movlw	58
  1706   003CBC  6E16               	movwf	(___flmul@a+3)^0,c
  1707   003CBE  EC40  F017         	call	___flmul	;wreg free
  1708   003CC2  C00F  F057         	movff	?___flmul,_voltage
  1709   003CC6  C010  F058         	movff	?___flmul+1,_voltage+1
  1710   003CCA  C011  F059         	movff	?___flmul+2,_voltage+2
  1711   003CCE  C012  F05A         	movff	?___flmul+3,_voltage+3
  1712   003CD2                     
  1713                           ;LCD.c: 132:         PORTD = ADRESL;
  1714   003CD2  006F FBBF FFCD     	movff	16111,16333	;volatile
  1715   003CD8                     
  1716                           ;LCD.c: 133:         PORTB = ADRESH;
  1717   003CD8  006F FBC3 FFCB     	movff	16112,16331	;volatile
  1718   003CDE                     
  1719                           ;LCD.c: 136:         sprintf(data,"%.2f",voltage);
  1720   003CDE  0EBC               	movlw	low _data
  1721   003CE0  0100               	movlb	0	; () banked
  1722   003CE2  6FF2               	movwf	sprintf@s& (0+255),b
  1723   003CE4  0E14               	movlw	low STR_1
  1724   003CE6  6FF3               	movwf	sprintf@fmt& (0+255),b
  1725   003CE8  C057  F0F4         	movff	_voltage,?_sprintf+2
  1726   003CEC  C058  F0F5         	movff	_voltage+1,?_sprintf+3
  1727   003CF0  C059  F0F6         	movff	_voltage+2,?_sprintf+4
  1728   003CF4  C05A  F0F7         	movff	_voltage+3,?_sprintf+5
  1729   003CF8  ECF0  F022         	call	_sprintf	;wreg free
  1730   003CFC                     
  1731                           ;LCD.c: 137:         strcat(data," V");
  1732   003CFC  0EBC               	movlw	low _data
  1733   003CFE  6E01               	movwf	strcat@dest^0,c
  1734   003D00  0E21               	movlw	low STR_2
  1735   003D02  6E02               	movwf	strcat@src^0,c
  1736   003D04  EC61  F021         	call	_strcat	;wreg free
  1737   003D08                     
  1738                           ;LCD.c: 140:     LCD_Init();
  1739   003D08  EC0B  F023         	call	_LCD_Init	;wreg free
  1740   003D0C                     
  1741                           ;LCD.c: 141:     LCD_String_xy(1,0,"The Input Voltage:");
  1742   003D0C  0E00               	movlw	0
  1743   003D0E  6E0A               	movwf	LCD_String_xy@pos^0,c
  1744   003D10  0E01               	movlw	low STR_3
  1745   003D12  6E0B               	movwf	LCD_String_xy@msg^0,c
  1746   003D14  500B               	movf	LCD_String_xy@msg^0,w,c
  1747   003D16  A4D8               	btfss	status,2,c
  1748   003D18  0E20               	movlw	high __smallconst
  1749   003D1A  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
  1750   003D1C  0E01               	movlw	1
  1751   003D1E  EC79  F022         	call	_LCD_String_xy
  1752   003D22                     
  1753                           ;LCD.c: 143:     LCD_String_xy(2,0,data);
  1754   003D22  0E00               	movlw	0
  1755   003D24  6E0A               	movwf	LCD_String_xy@pos^0,c
  1756   003D26  0EBC               	movlw	low _data
  1757   003D28  6E0B               	movwf	LCD_String_xy@msg^0,c
  1758   003D2A  6A0C               	clrf	(LCD_String_xy@msg+1)^0,c
  1759   003D2C  0E02               	movlw	2
  1760   003D2E  EC79  F022         	call	_LCD_String_xy
  1761   003D32  EF2E  F01E         	goto	l3341
  1762   003D36  EFFE  F0FF         	goto	start
  1763   003D3A                     __end_of_main:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _strcat *****************
  1767 ;; Defined at:
  1768 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  dest            1    0[COMRAM] PTR unsigned char 
  1771 ;;		 -> data(10), 
  1772 ;;  src             1    1[COMRAM] PTR const unsigned char 
  1773 ;;		 -> STR_2(3), 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  i               2    2[COMRAM] unsigned int 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    0[COMRAM] PTR unsigned char 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1788 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1789 ;;Total ram usage:        4 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text1
  1799   0042C2                     __ptext1:
  1800                           	callstack 0
  1801   0042C2                     _strcat:
  1802                           	callstack 30
  1803   0042C2  0E00               	movlw	0
  1804   0042C4  6E04               	movwf	(strcat@i+1)^0,c
  1805   0042C6  0E00               	movlw	0
  1806   0042C8  6E03               	movwf	strcat@i^0,c
  1807   0042CA  EF69  F021         	goto	l3235
  1808   0042CE                     l3233:
  1809   0042CE  4A03               	infsnz	strcat@i^0,f,c
  1810   0042D0  2A04               	incf	(strcat@i+1)^0,f,c
  1811   0042D2                     l3235:
  1812   0042D2  5001               	movf	strcat@dest^0,w,c
  1813   0042D4  2403               	addwf	strcat@i^0,w,c
  1814   0042D6  6ED9               	movwf	fsr2l,c
  1815   0042D8  6ADA               	clrf	fsr2h,c
  1816   0042DA  50DF               	movf	indf2,w,c
  1817   0042DC  A4D8               	btfss	status,2,c
  1818   0042DE  EF73  F021         	goto	u3491
  1819   0042E2  EF75  F021         	goto	u3490
  1820   0042E6                     u3491:
  1821   0042E6  EF67  F021         	goto	l3233
  1822   0042EA                     u3490:
  1823   0042EA  EF7A  F021         	goto	l3239
  1824   0042EE                     l3237:
  1825   0042EE  4A03               	infsnz	strcat@i^0,f,c
  1826   0042F0  2A04               	incf	(strcat@i+1)^0,f,c
  1827   0042F2  2A02               	incf	strcat@src^0,f,c
  1828   0042F4                     l3239:
  1829   0042F4  0060  F00B  FFF6   	movff	strcat@src,tblptrl
  1830   0042FA                     	if	1	;There is more than 1 active tblptr byte
  1831   0042FA  0E20               	movlw	high __smallconst
  1832   0042FC  6EF7               	movwf	tblptrh,c
  1833   0042FE                     	endif
  1834   0042FE                     	if	0	;tblptru may be non-zero
  1835   0042FE                     	endif
  1836   0042FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1837   0042FE  0E00               	movlw	low (__smallconst shr (0+16))
  1838   004300  6EF8               	movwf	tblptru,c
  1839   004302                     	endif
  1840   004302  5001               	movf	strcat@dest^0,w,c
  1841   004304  2403               	addwf	strcat@i^0,w,c
  1842   004306  6ED9               	movwf	fsr2l,c
  1843   004308  6ADA               	clrf	fsr2h,c
  1844   00430A  0008               	tblrd		*
  1845   00430C  006F FFD7 FFDF     	movff	tablat,indf2
  1846   004312  50DF               	movf	indf2,w,c
  1847   004314  A4D8               	btfss	status,2,c
  1848   004316  EF8F  F021         	goto	u3501
  1849   00431A  EF91  F021         	goto	u3500
  1850   00431E                     u3501:
  1851   00431E  EF77  F021         	goto	l3237
  1852   004322                     u3500:
  1853   004322  0012               	return		;funcret
  1854   004324                     __end_of_strcat:
  1855                           	callstack 0
  1856                           
  1857 ;; *************** function _sprintf *****************
  1858 ;; Defined at:
  1859 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  s               1   44[BANK0 ] PTR unsigned char 
  1862 ;;		 -> data(10), 
  1863 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  1864 ;;		 -> STR_1(5), 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  f              11   73[COMRAM] struct _IO_FILE
  1867 ;;  ret             2    0        int 
  1868 ;;  ap              1   72[COMRAM] PTR void [1]
  1869 ;;		 -> ?_sprintf(2), 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2   44[BANK0 ] int 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1879 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1880 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1882 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1883 ;;Total ram usage:       18 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 7
  1886 ;; This function calls:
  1887 ;;		_vfprintf
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text2
  1894   0045E0                     __ptext2:
  1895                           	callstack 0
  1896   0045E0                     _sprintf:
  1897                           	callstack 23
  1898   0045E0  0EF4               	movlw	low (?_sprintf+2)
  1899   0045E2  6E49               	movwf	sprintf@ap^0,c
  1900   0045E4  C0F2  F04A         	movff	sprintf@s,sprintf@f
  1901   0045E8  0E00               	movlw	0
  1902   0045EA  6E4D               	movwf	(sprintf@f+3)^0,c
  1903   0045EC  0E00               	movlw	0
  1904   0045EE  6E4C               	movwf	(sprintf@f+2)^0,c
  1905   0045F0  0E00               	movlw	0
  1906   0045F2  6E54               	movwf	(sprintf@f+10)^0,c
  1907   0045F4  0E00               	movlw	0
  1908   0045F6  6E53               	movwf	(sprintf@f+9)^0,c
  1909   0045F8  0E4A               	movlw	low sprintf@f
  1910   0045FA  6E45               	movwf	vfprintf@fp^0,c
  1911   0045FC  C0F3  F046         	movff	sprintf@fmt,vfprintf@fmt
  1912   004600  0E49               	movlw	low sprintf@ap
  1913   004602  6E47               	movwf	vfprintf@ap^0,c
  1914   004604  EC36  F022         	call	_vfprintf	;wreg free
  1915   004608  0100               	movlb	0	; () banked
  1916   00460A  51F2               	movf	sprintf@s& (0+255),w,b
  1917   00460C  244C               	addwf	(sprintf@f+2)^0,w,c
  1918   00460E  6ED9               	movwf	fsr2l,c
  1919   004610  6ADA               	clrf	fsr2h,c
  1920   004612  6ADF               	clrf	indf2,c
  1921   004614                     
  1922                           ; BSR set to: 0
  1923   004614  0012               	return		;funcret
  1924   004616                     __end_of_sprintf:
  1925                           	callstack 0
  1926                           
  1927 ;; *************** function _vfprintf *****************
  1928 ;; Defined at:
  1929 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  fp              1   68[COMRAM] PTR struct _IO_FILE
  1932 ;;		 -> sprintf@f(11), 
  1933 ;;  fmt             1   69[COMRAM] PTR const unsigned char 
  1934 ;;		 -> STR_1(5), 
  1935 ;;  ap              1   70[COMRAM] PTR PTR void 
  1936 ;;		 -> sprintf@ap(1), 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  cfmt            1   71[COMRAM] PTR unsigned char 
  1939 ;;		 -> STR_1(5), 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2   68[COMRAM] int 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1949 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1953 ;;Total ram usage:        4 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; Hardware stack levels required when called: 6
  1956 ;; This function calls:
  1957 ;;		_vfpfcnvrt
  1958 ;; This function is called by:
  1959 ;;		_sprintf
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text3
  1964   00446C                     __ptext3:
  1965                           	callstack 0
  1966   00446C                     _vfprintf:
  1967                           	callstack 23
  1968   00446C                     
  1969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1970   00446C  C046  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1973   004470  EF42  F022         	goto	l3189
  1974   004474                     l3187:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1977   004474  C045  F03B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1978   004478  0E48               	movlw	low vfprintf@cfmt
  1979   00447A  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1980   00447C  C047  F03D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1981   004480  EC36  F01C         	call	_vfpfcnvrt	;wreg free
  1982   004484                     l3189:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1985   004484  0060  F123  FFF6   	movff	vfprintf@cfmt,tblptrl
  1986   00448A                     	if	1	;There is more than 1 active tblptr byte
  1987   00448A  0E20               	movlw	high __smallconst
  1988   00448C  6EF7               	movwf	tblptrh,c
  1989   00448E                     	endif
  1990   00448E                     	if	0	;tblptru may be non-zero
  1991   00448E                     	endif
  1992   00448E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1993   00448E  0E00               	movlw	low (__smallconst shr (0+16))
  1994   004490  6EF8               	movwf	tblptru,c
  1995   004492                     	endif
  1996   004492  0008               	tblrd		*
  1997   004494  50F5               	movf	tablat,w,c
  1998   004496  0900               	iorlw	0
  1999   004498  A4D8               	btfss	status,2,c
  2000   00449A  EF51  F022         	goto	u3481
  2001   00449E  EF53  F022         	goto	u3480
  2002   0044A2                     u3481:
  2003   0044A2  EF3A  F022         	goto	l3187
  2004   0044A6                     u3480:
  2005   0044A6                     
  2006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2007   0044A6  0E00               	movlw	0
  2008   0044A8  6E46               	movwf	(?_vfprintf+1)^0,c
  2009   0044AA  0E00               	movlw	0
  2010   0044AC  6E45               	movwf	?_vfprintf^0,c
  2011   0044AE  0012               	return		;funcret
  2012   0044B0                     __end_of_vfprintf:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _vfpfcnvrt *****************
  2016 ;; Defined at:
  2017 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  fp              1   58[COMRAM] PTR struct _IO_FILE
  2020 ;;		 -> sprintf@f(11), 
  2021 ;;  fmt             1   59[COMRAM] PTR PTR unsigned char 
  2022 ;;		 -> vfprintf@cfmt(1), 
  2023 ;;  ap              1   60[COMRAM] PTR PTR void 
  2024 ;;		 -> sprintf@ap(1), 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  convarg         4   62[COMRAM] struct .
  2027 ;;  cp              1   67[COMRAM] PTR unsigned char 
  2028 ;;		 -> STR_1(5), 
  2029 ;;  c               1   66[COMRAM] unsigned char 
  2030 ;;  done            1    0        _Bool 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2040 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2041 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2043 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2044 ;;Total ram usage:       10 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 5
  2047 ;; This function calls:
  2048 ;;		_efgtoa
  2049 ;;		_fputc
  2050 ;;		_read_prec_or_width
  2051 ;; This function is called by:
  2052 ;;		_vfprintf
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text4
  2057   00386C                     __ptext4:
  2058                           	callstack 0
  2059   00386C                     _vfpfcnvrt:
  2060                           	callstack 23
  2061   00386C                     
  2062                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2063   00386C  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2064   00386E  6ED9               	movwf	fsr2l,c
  2065   003870  6ADA               	clrf	fsr2h,c
  2066   003872  006F FF7F FFF6     	movff	indf2,tblptrl
  2067   003878                     	if	1	;There is more than 1 active tblptr byte
  2068   003878  0E20               	movlw	high __smallconst
  2069   00387A  6EF7               	movwf	tblptrh,c
  2070   00387C                     	endif
  2071   00387C                     	if	0	;tblptru may be non-zero
  2072   00387C                     	endif
  2073   00387C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2074   00387C  0E00               	movlw	low (__smallconst shr (0+16))
  2075   00387E  6EF8               	movwf	tblptru,c
  2076   003880                     	endif
  2077   003880  0008               	tblrd		*
  2078   003882  50F5               	movf	tablat,w,c
  2079   003884  0A25               	xorlw	37
  2080   003886  A4D8               	btfss	status,2,c
  2081   003888  EF48  F01C         	goto	u3421
  2082   00388C  EF4A  F01C         	goto	u3420
  2083   003890                     u3421:
  2084   003890  EF29  F01D         	goto	l3159
  2085   003894                     u3420:
  2086   003894                     
  2087                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2088   003894  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2089   003896  6ED9               	movwf	fsr2l,c
  2090   003898  6ADA               	clrf	fsr2h,c
  2091   00389A  2ADF               	incf	indf2,f,c
  2092   00389C                     
  2093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2094   00389C  0E00               	movlw	0
  2095   00389E  0100               	movlb	0	; () banked
  2096   0038A0  6F69               	movwf	(_width+1)& (0+255),b
  2097   0038A2  0E00               	movlw	0
  2098   0038A4  6F68               	movwf	_width& (0+255),b
  2099   0038A6  C068  F05D         	movff	_width,_flags
  2100   0038AA                     
  2101                           ; BSR set to: 0
  2102                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2103   0038AA  696A               	setf	_prec& (0+255),b
  2104   0038AC  696B               	setf	(_prec+1)& (0+255),b
  2105   0038AE                     
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2108   0038AE  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2109   0038B0  6ED9               	movwf	fsr2l,c
  2110   0038B2  6ADA               	clrf	fsr2h,c
  2111   0038B4  006F FF7F FFF6     	movff	indf2,tblptrl
  2112   0038BA                     	if	1	;There is more than 1 active tblptr byte
  2113   0038BA  0E20               	movlw	high __smallconst
  2114   0038BC  6EF7               	movwf	tblptrh,c
  2115   0038BE                     	endif
  2116   0038BE                     	if	0	;tblptru may be non-zero
  2117   0038BE                     	endif
  2118   0038BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2119   0038BE  0E00               	movlw	low (__smallconst shr (0+16))
  2120   0038C0  6EF8               	movwf	tblptru,c
  2121   0038C2                     	endif
  2122   0038C2  0008               	tblrd		*
  2123   0038C4  50F5               	movf	tablat,w,c
  2124   0038C6  0A2E               	xorlw	46
  2125   0038C8  A4D8               	btfss	status,2,c
  2126   0038CA  EF69  F01C         	goto	u3431
  2127   0038CE  EF6B  F01C         	goto	u3430
  2128   0038D2                     u3431:
  2129   0038D2  EF79  F01C         	goto	l3123
  2130   0038D6                     u3430:
  2131   0038D6                     
  2132                           ; BSR set to: 0
  2133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2134   0038D6  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2135   0038D8  6ED9               	movwf	fsr2l,c
  2136   0038DA  6ADA               	clrf	fsr2h,c
  2137   0038DC  2ADF               	incf	indf2,f,c
  2138   0038DE                     
  2139                           ; BSR set to: 0
  2140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2141   0038DE  C03C  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2142   0038E2  C03D  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2143   0038E6  EC21  F020         	call	_read_prec_or_width	;wreg free
  2144   0038EA  C001  F06A         	movff	?_read_prec_or_width,_prec
  2145   0038EE  C002  F06B         	movff	?_read_prec_or_width+1,_prec+1
  2146   0038F2                     l3123:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2149   0038F2  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2150   0038F4  6ED9               	movwf	fsr2l,c
  2151   0038F6  6ADA               	clrf	fsr2h,c
  2152   0038F8  50DF               	movf	indf2,w,c
  2153   0038FA  6E44               	movwf	vfpfcnvrt@cp^0,c
  2154   0038FC                     
  2155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2156   0038FC  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2157   003902                     	if	1	;There is more than 1 active tblptr byte
  2158   003902  0E20               	movlw	high __smallconst
  2159   003904  6EF7               	movwf	tblptrh,c
  2160   003906                     	endif
  2161   003906                     	if	0	;tblptru may be non-zero
  2162   003906                     	endif
  2163   003906                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2164   003906  0E00               	movlw	low (__smallconst shr (0+16))
  2165   003908  6EF8               	movwf	tblptru,c
  2166   00390A                     	endif
  2167   00390A  0008               	tblrd		*
  2168   00390C  006F FFD4  F043    	movff	tablat,vfpfcnvrt@c
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2171   003912  EF95  F01C         	goto	l3133
  2172   003916                     l3127:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2175   003916  2A44               	incf	vfpfcnvrt@cp^0,f,c
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2178   003918  EFA4  F01C         	goto	l3135
  2179   00391C                     l3129:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2182   00391C  0E6C               	movlw	108
  2183   00391E  6E43               	movwf	vfpfcnvrt@c^0,c
  2184                           
  2185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2186   003920  EFA4  F01C         	goto	l3135
  2187   003924                     l917:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2190   003924  6A43               	clrf	vfpfcnvrt@c^0,c
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2193   003926  EFA4  F01C         	goto	l3135
  2194   00392A                     l3133:
  2195   00392A  5043               	movf	vfpfcnvrt@c^0,w,c
  2196                           
  2197                           ; Switch size 1, requested type "simple"
  2198                           ; Number of cases is 3, Range of values is 76 to 108
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte           10     6 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203   00392C  0A4C               	xorlw	76	; case 76
  2204   00392E  B4D8               	btfsc	status,2,c
  2205   003930  EF8B  F01C         	goto	l3127
  2206   003934  0A2A               	xorlw	42	; case 102
  2207   003936  B4D8               	btfsc	status,2,c
  2208   003938  EF8E  F01C         	goto	l3129
  2209   00393C  0A0A               	xorlw	10	; case 108
  2210   00393E  B4D8               	btfsc	status,2,c
  2211   003940  EF8B  F01C         	goto	l3127
  2212   003944  EF92  F01C         	goto	l917
  2213   003948                     l3135:
  2214   003948  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2215   00394E                     	if	1	;There is more than 1 active tblptr byte
  2216   00394E  0E20               	movlw	high __smallconst
  2217   003950  6EF7               	movwf	tblptrh,c
  2218   003952                     	endif
  2219   003952                     	if	0	;tblptru may be non-zero
  2220   003952                     	endif
  2221   003952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2222   003952  0E00               	movlw	low (__smallconst shr (0+16))
  2223   003954  6EF8               	movwf	tblptru,c
  2224   003956                     	endif
  2225   003956  0008               	tblrd		*
  2226   003958  50F5               	movf	tablat,w,c
  2227   00395A  0A66               	xorlw	102
  2228   00395C  A4D8               	btfss	status,2,c
  2229   00395E  EFB3  F01C         	goto	u3441
  2230   003962  EFB5  F01C         	goto	u3440
  2231   003966                     u3441:
  2232   003966  EF23  F01D         	goto	l3155
  2233   00396A                     u3440:
  2234   00396A  EFE9  F01C         	goto	l3143
  2235   00396E                     l3137:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2238   00396E  503D               	movf	vfpfcnvrt@ap^0,w,c
  2239   003970  6ED9               	movwf	fsr2l,c
  2240   003972  6ADA               	clrf	fsr2h,c
  2241   003974  006F FF7C  F03E    	movff	indf2,??_vfpfcnvrt
  2242   00397A  0E04               	movlw	4
  2243   00397C  26DF               	addwf	indf2,f,c
  2244   00397E  503E               	movf	??_vfpfcnvrt^0,w,c
  2245   003980  6ED9               	movwf	fsr2l,c
  2246   003982  6ADA               	clrf	fsr2h,c
  2247   003984  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg
  2248   00398A  006F FF78  F040    	movff	postinc2,vfpfcnvrt@convarg+1
  2249   003990  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg+2
  2250   003996  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+3
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2253   00399C  EFF4  F01C         	goto	l3145
  2254   0039A0                     l3139:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2257   0039A0  503D               	movf	vfpfcnvrt@ap^0,w,c
  2258   0039A2  6ED9               	movwf	fsr2l,c
  2259   0039A4  6ADA               	clrf	fsr2h,c
  2260   0039A6  006F FF7C  F03E    	movff	indf2,??_vfpfcnvrt
  2261   0039AC  0E04               	movlw	4
  2262   0039AE  26DF               	addwf	indf2,f,c
  2263   0039B0  503E               	movf	??_vfpfcnvrt^0,w,c
  2264   0039B2  6ED9               	movwf	fsr2l,c
  2265   0039B4  6ADA               	clrf	fsr2h,c
  2266   0039B6  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg
  2267   0039BC  006F FF78  F040    	movff	postinc2,vfpfcnvrt@convarg+1
  2268   0039C2  006F FF78  F041    	movff	postinc2,vfpfcnvrt@convarg+2
  2269   0039C8  006F FF78  F042    	movff	postinc2,vfpfcnvrt@convarg+3
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2272   0039CE  EFF4  F01C         	goto	l3145
  2273   0039D2                     l3143:
  2274   0039D2  5043               	movf	vfpfcnvrt@c^0,w,c
  2275                           
  2276                           ; Switch size 1, requested type "simple"
  2277                           ; Number of cases is 2, Range of values is 76 to 108
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte            7     4 (average)
  2281                           ;	Chosen strategy is simple_byte
  2282   0039D4  0A4C               	xorlw	76	; case 76
  2283   0039D6  B4D8               	btfsc	status,2,c
  2284   0039D8  EFD0  F01C         	goto	l3139
  2285   0039DC  0A20               	xorlw	32	; case 108
  2286   0039DE  B4D8               	btfsc	status,2,c
  2287   0039E0  EFB7  F01C         	goto	l3137
  2288   0039E4  EFF4  F01C         	goto	l3145
  2289   0039E8                     l3145:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2292   0039E8  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2293   0039EA  6ED9               	movwf	fsr2l,c
  2294   0039EC  6ADA               	clrf	fsr2h,c
  2295   0039EE  2844               	incf	vfpfcnvrt@cp^0,w,c
  2296   0039F0  6EDF               	movwf	indf2,c
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2299   0039F2  EF14  F01D         	goto	l3153
  2300   0039F6                     l3147:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2303   0039F6  C03B  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  2304   0039FA  C03F  F035         	movff	vfpfcnvrt@convarg,efgtoa@f
  2305   0039FE  C040  F036         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2306   003A02  C041  F037         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2307   003A06  C042  F038         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2308   003A0A  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2309   003A10                     	if	1	;There is more than 1 active tblptr byte
  2310   003A10  0E20               	movlw	high __smallconst
  2311   003A12  6EF7               	movwf	tblptrh,c
  2312   003A14                     	endif
  2313   003A14                     	if	0	;tblptru may be non-zero
  2314   003A14                     	endif
  2315   003A14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2316   003A14  0E00               	movlw	low (__smallconst shr (0+16))
  2317   003A16  6EF8               	movwf	tblptru,c
  2318   003A18                     	endif
  2319   003A18  0008               	tblrd		*
  2320   003A1A  006F FFD4  F039    	movff	tablat,efgtoa@c
  2321   003A20  EC13  F010         	call	_efgtoa	;wreg free
  2322   003A24  EF3D  F01D         	goto	l927
  2323   003A28                     l3153:
  2324   003A28  0060  F113  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2325   003A2E                     	if	1	;There is more than 1 active tblptr byte
  2326   003A2E  0E20               	movlw	high __smallconst
  2327   003A30  6EF7               	movwf	tblptrh,c
  2328   003A32                     	endif
  2329   003A32                     	if	0	;tblptru may be non-zero
  2330   003A32                     	endif
  2331   003A32                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2332   003A32  0E00               	movlw	low (__smallconst shr (0+16))
  2333   003A34  6EF8               	movwf	tblptru,c
  2334   003A36                     	endif
  2335   003A36  0008               	tblrd		*
  2336   003A38  50F5               	movf	tablat,w,c
  2337                           
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 1, Range of values is 102 to 102
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            4     3 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344   003A3A  0A66               	xorlw	102	; case 102
  2345   003A3C  B4D8               	btfsc	status,2,c
  2346   003A3E  EFFB  F01C         	goto	l3147
  2347   003A42  EF23  F01D         	goto	l3155
  2348   003A46                     l3155:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2351   003A46  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2352   003A48  6ED9               	movwf	fsr2l,c
  2353   003A4A  6ADA               	clrf	fsr2h,c
  2354   003A4C  2ADF               	incf	indf2,f,c
  2355   003A4E  EF3D  F01D         	goto	l927
  2356   003A52                     l3159:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2359   003A52  503C               	movf	vfpfcnvrt@fmt^0,w,c
  2360   003A54  6ED9               	movwf	fsr2l,c
  2361   003A56  6ADA               	clrf	fsr2h,c
  2362   003A58  006F FF7F FFF6     	movff	indf2,tblptrl
  2363   003A5E                     	if	1	;There is more than 1 active tblptr byte
  2364   003A5E  0E20               	movlw	high __smallconst
  2365   003A60  6EF7               	movwf	tblptrh,c
  2366   003A62                     	endif
  2367   003A62                     	if	0	;tblptru may be non-zero
  2368   003A62                     	endif
  2369   003A62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2370   003A62  0E00               	movlw	low (__smallconst shr (0+16))
  2371   003A64  6EF8               	movwf	tblptru,c
  2372   003A66                     	endif
  2373   003A66  0008               	tblrd		*
  2374   003A68  50F5               	movf	tablat,w,c
  2375   003A6A  6E01               	movwf	fputc@c^0,c
  2376   003A6C  6A02               	clrf	(fputc@c+1)^0,c
  2377   003A6E  C03B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2378   003A72  EC7D  F020         	call	_fputc	;wreg free
  2379   003A76  EF23  F01D         	goto	l3155
  2380   003A7A                     l927:
  2381   003A7A  0012               	return		;funcret
  2382   003A7C                     __end_of_vfpfcnvrt:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function _read_prec_or_width *****************
  2386 ;; Defined at:
  2387 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  2390 ;;		 -> vfprintf@cfmt(1), 
  2391 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  2392 ;;		 -> sprintf@ap(1), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  c               1    4[COMRAM] unsigned char 
  2395 ;;  n               2    5[COMRAM] int 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2    0[COMRAM] int 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2406 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2408 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2409 ;;Total ram usage:        7 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_vfpfcnvrt
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text5
  2419   004042                     __ptext5:
  2420                           	callstack 0
  2421   004042                     _read_prec_or_width:
  2422                           	callstack 27
  2423   004042                     
  2424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2425   004042  0E00               	movlw	0
  2426   004044  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2427   004046  0E00               	movlw	0
  2428   004048  6E06               	movwf	read_prec_or_width@n^0,c
  2429   00404A                     
  2430                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2431   00404A  5001               	movf	read_prec_or_width@fmt^0,w,c
  2432   00404C  6ED9               	movwf	fsr2l,c
  2433   00404E  6ADA               	clrf	fsr2h,c
  2434   004050  006F FF7F FFF6     	movff	indf2,tblptrl
  2435   004056                     	if	1	;There is more than 1 active tblptr byte
  2436   004056  0E20               	movlw	high __smallconst
  2437   004058  6EF7               	movwf	tblptrh,c
  2438   00405A                     	endif
  2439   00405A                     	if	0	;tblptru may be non-zero
  2440   00405A                     	endif
  2441   00405A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2442   00405A  0E00               	movlw	low (__smallconst shr (0+16))
  2443   00405C  6EF8               	movwf	tblptru,c
  2444   00405E                     	endif
  2445   00405E  0008               	tblrd		*
  2446   004060  50F5               	movf	tablat,w,c
  2447   004062  0A2A               	xorlw	42
  2448   004064  A4D8               	btfss	status,2,c
  2449   004066  EF37  F020         	goto	u3401
  2450   00406A  EF39  F020         	goto	u3400
  2451   00406E                     u3401:
  2452   00406E  EF62  F020         	goto	l3095
  2453   004072                     u3400:
  2454   004072                     
  2455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2456   004072  5001               	movf	read_prec_or_width@fmt^0,w,c
  2457   004074  6ED9               	movwf	fsr2l,c
  2458   004076  6ADA               	clrf	fsr2h,c
  2459   004078  2ADF               	incf	indf2,f,c
  2460   00407A                     
  2461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2462   00407A  5002               	movf	read_prec_or_width@ap^0,w,c
  2463   00407C  6ED9               	movwf	fsr2l,c
  2464   00407E  6ADA               	clrf	fsr2h,c
  2465   004080  0E02               	movlw	2
  2466   004082  26DF               	addwf	indf2,f,c
  2467   004084  5CDF               	subwf	indf2,w,c
  2468   004086  6ED9               	movwf	fsr2l,c
  2469   004088  6ADA               	clrf	fsr2h,c
  2470   00408A  006F FF78  F006    	movff	postinc2,read_prec_or_width@n
  2471   004090  006F FF78  F007    	movff	postinc2,read_prec_or_width@n+1
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2474   004096  EF78  F020         	goto	l903
  2475   00409A                     l3091:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2478   00409A  0E0A               	movlw	10
  2479   00409C  0206               	mulwf	read_prec_or_width@n^0,c
  2480   00409E  006F FFCC  F003    	movff	prodl,??_read_prec_or_width
  2481   0040A4  006F FFD0  F004    	movff	prodh,??_read_prec_or_width+1
  2482   0040AA  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2483   0040AC  50F3               	movf	prodl,w,c
  2484   0040AE  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2485   0040B0  5005               	movf	read_prec_or_width@c^0,w,c
  2486   0040B2  2403               	addwf	??_read_prec_or_width^0,w,c
  2487   0040B4  6E06               	movwf	read_prec_or_width@n^0,c
  2488   0040B6  0E00               	movlw	0
  2489   0040B8  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2490   0040BA  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2491   0040BC                     
  2492                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2493   0040BC  5001               	movf	read_prec_or_width@fmt^0,w,c
  2494   0040BE  6ED9               	movwf	fsr2l,c
  2495   0040C0  6ADA               	clrf	fsr2h,c
  2496   0040C2  2ADF               	incf	indf2,f,c
  2497   0040C4                     l3095:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2500   0040C4  5001               	movf	read_prec_or_width@fmt^0,w,c
  2501   0040C6  6ED9               	movwf	fsr2l,c
  2502   0040C8  6ADA               	clrf	fsr2h,c
  2503   0040CA  006F FF7F FFF6     	movff	indf2,tblptrl
  2504   0040D0                     	if	1	;There is more than 1 active tblptr byte
  2505   0040D0  0E20               	movlw	high __smallconst
  2506   0040D2  6EF7               	movwf	tblptrh,c
  2507   0040D4                     	endif
  2508   0040D4                     	if	0	;tblptru may be non-zero
  2509   0040D4                     	endif
  2510   0040D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2511   0040D4  0E00               	movlw	low (__smallconst shr (0+16))
  2512   0040D6  6EF8               	movwf	tblptru,c
  2513   0040D8                     	endif
  2514   0040D8  0008               	tblrd		*
  2515   0040DA  50F5               	movf	tablat,w,c
  2516   0040DC  0FD0               	addlw	208
  2517   0040DE  6E05               	movwf	read_prec_or_width@c^0,c
  2518   0040E0  0E09               	movlw	9
  2519   0040E2  6405               	cpfsgt	read_prec_or_width@c^0,c
  2520   0040E4  EF76  F020         	goto	u3411
  2521   0040E8  EF78  F020         	goto	u3410
  2522   0040EC                     u3411:
  2523   0040EC  EF4D  F020         	goto	l3091
  2524   0040F0                     u3410:
  2525   0040F0                     l903:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2528   0040F0  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2529   0040F4  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2530   0040F8  0012               	return		;funcret
  2531   0040FA                     __end_of_read_prec_or_width:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _efgtoa *****************
  2535 ;; Defined at:
  2536 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  fp              1   51[COMRAM] PTR struct _IO_FILE
  2539 ;;		 -> sprintf@f(11), 
  2540 ;;  f               4   52[COMRAM] PTR struct _IO_FILE
  2541 ;;  c               1   56[COMRAM] unsigned char 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  u               4   40[BANK0 ] struct flui
  2544 ;;  g               4   36[BANK0 ] struct flui
  2545 ;;  l               4   29[BANK0 ] struct flui
  2546 ;;  h               4   25[BANK0 ] struct flui
  2547 ;;  ou              4   19[BANK0 ] struct flui
  2548 ;;  n               2   34[BANK0 ] int 
  2549 ;;  i               2   23[BANK0 ] int 
  2550 ;;  w               2   17[BANK0 ] int 
  2551 ;;  e               2   15[BANK0 ] int 
  2552 ;;  m               2   13[BANK0 ] int 
  2553 ;;  d               2   11[BANK0 ] int 
  2554 ;;  t               2    4[BANK0 ] int 
  2555 ;;  p               2    2[BANK0 ] int 
  2556 ;;  ne              2    0[BANK0 ] int 
  2557 ;;  sign            1   33[BANK0 ] unsigned char 
  2558 ;;  nmode           1   10[BANK0 ] unsigned char 
  2559 ;;  mode            1    9[BANK0 ] unsigned char 
  2560 ;;  pp              1    8[BANK0 ] unsigned char 
  2561 ;;  esign           1    0        unsigned char 
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2571 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2572 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2574 ;;      Totals:         7      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2575 ;;Total ram usage:       51 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 4
  2578 ;; This function calls:
  2579 ;;		___fladd
  2580 ;;		___fldiv
  2581 ;;		___fleq
  2582 ;;		___flge
  2583 ;;		___flmul
  2584 ;;		___flneg
  2585 ;;		___flsub
  2586 ;;		___fltol
  2587 ;;		___fpclassifyf
  2588 ;;		_floorf
  2589 ;;		_labs
  2590 ;;		_memcpy
  2591 ;;		_pad
  2592 ;;		_strcpy
  2593 ;; This function is called by:
  2594 ;;		_vfpfcnvrt
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text6
  2599   002026                     __ptext6:
  2600                           	callstack 0
  2601   002026                     _efgtoa:
  2602                           	callstack 23
  2603   002026                     
  2604                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2605   002026  0100               	movlb	0	; () banked
  2606   002028  6BE7               	clrf	efgtoa@sign& (0+255),b
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2609   00202A  C035  F0EA         	movff	efgtoa@f,efgtoa@g
  2610   00202E  C036  F0EB         	movff	efgtoa@f+1,efgtoa@g+1
  2611   002032  C037  F0EC         	movff	efgtoa@f+2,efgtoa@g+2
  2612   002036  C038  F0ED         	movff	efgtoa@f+3,efgtoa@g+3
  2613   00203A                     
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2616   00203A  BFED               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2617   00203C  EF24  F010         	goto	u3080
  2618   002040  EF22  F010         	goto	u3081
  2619   002044                     u3081:
  2620   002044  EF38  F010         	goto	l2871
  2621   002048                     u3080:
  2622   002048                     
  2623                           ; BSR set to: 0
  2624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2625   002048  0E01               	movlw	1
  2626   00204A  6FE7               	movwf	efgtoa@sign& (0+255),b
  2627   00204C                     
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2630   00204C  C0EA  F001         	movff	efgtoa@g,___flneg@f1
  2631   002050  C0EB  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2632   002054  C0EC  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2633   002058  C0ED  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2634   00205C  ECD4  F022         	call	___flneg	;wreg free
  2635   002060  C001  F0EA         	movff	?___flneg,efgtoa@g
  2636   002064  C002  F0EB         	movff	?___flneg+1,efgtoa@g+1
  2637   002068  C003  F0EC         	movff	?___flneg+2,efgtoa@g+2
  2638   00206C  C004  F0ED         	movff	?___flneg+3,efgtoa@g+3
  2639   002070                     l2871:
  2640                           
  2641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2642   002070  0E00               	movlw	0
  2643   002072  0100               	movlb	0	; () banked
  2644   002074  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  2645   002076  0E00               	movlw	0
  2646   002078  6FE8               	movwf	efgtoa@n& (0+255),b
  2647   00207A                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2650   00207A  C068  F0D7         	movff	_width,efgtoa@w
  2651   00207E  C069  F0D8         	movff	_width+1,efgtoa@w+1
  2652   002082                     
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2655   002082  51E7               	movf	efgtoa@sign& (0+255),w,b
  2656   002084  B4D8               	btfsc	status,2,c
  2657   002086  EF47  F010         	goto	u3091
  2658   00208A  EF49  F010         	goto	u3090
  2659   00208E                     u3091:
  2660   00208E  EF5D  F010         	goto	l2885
  2661   002092                     u3090:
  2662   002092                     
  2663                           ; BSR set to: 0
  2664                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2665   002092  51E7               	movf	efgtoa@sign& (0+255),w,b
  2666   002094  A4D8               	btfss	status,2,c
  2667   002096  EF4F  F010         	goto	u3101
  2668   00209A  EF51  F010         	goto	u3100
  2669   00209E                     u3101:
  2670   00209E  EF57  F010         	goto	l2881
  2671   0020A2                     u3100:
  2672   0020A2                     
  2673                           ; BSR set to: 0
  2674   0020A2  0E00               	movlw	0
  2675   0020A4  6FCD               	movwf	(_efgtoa$813+1)& (0+255),b
  2676   0020A6  0E2B               	movlw	43
  2677   0020A8  6FCC               	movwf	_efgtoa$813& (0+255),b
  2678   0020AA  EF5B  F010         	goto	l2883
  2679   0020AE                     l2881:
  2680                           
  2681                           ; BSR set to: 0
  2682   0020AE  0E00               	movlw	0
  2683   0020B0  6FCD               	movwf	(_efgtoa$813+1)& (0+255),b
  2684   0020B2  0E2D               	movlw	45
  2685   0020B4  6FCC               	movwf	_efgtoa$813& (0+255),b
  2686   0020B6                     l2883:
  2687                           
  2688                           ; BSR set to: 0
  2689   0020B6  C0CC  F0E7         	movff	_efgtoa$813,efgtoa@sign
  2690   0020BA                     l2885:
  2691                           
  2692                           ; BSR set to: 0
  2693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2694   0020BA  C0EA  F001         	movff	efgtoa@g,___fpclassifyf@x
  2695   0020BE  C0EB  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2696   0020C2  C0EC  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2697   0020C6  C0ED  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2698   0020CA  ECA2  F01F         	call	___fpclassifyf	;wreg free
  2699   0020CE  0401               	decf	?___fpclassifyf^0,w,c
  2700   0020D0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2701   0020D2  A4D8               	btfss	status,2,c
  2702   0020D4  EF6E  F010         	goto	u3111
  2703   0020D8  EF70  F010         	goto	u3110
  2704   0020DC                     u3111:
  2705   0020DC  EF9A  F010         	goto	l2903
  2706   0020E0                     u3110:
  2707   0020E0                     
  2708                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2709   0020E0  0100               	movlb	0	; () banked
  2710   0020E2  51E7               	movf	efgtoa@sign& (0+255),w,b
  2711   0020E4  B4D8               	btfsc	status,2,c
  2712   0020E6  EF77  F010         	goto	u3121
  2713   0020EA  EF79  F010         	goto	u3120
  2714   0020EE                     u3121:
  2715   0020EE  EF82  F010         	goto	l2895
  2716   0020F2                     u3120:
  2717   0020F2                     
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2720   0020F2  C0E7  F06C         	movff	efgtoa@sign,_dbuf
  2721   0020F6                     
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  2724   0020F6  07D7               	decf	efgtoa@w& (0+255),f,b
  2725   0020F8  A0D8               	btfss	status,0,c
  2726   0020FA  07D8               	decf	(efgtoa@w+1)& (0+255),f,b
  2727   0020FC                     
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2730   0020FC  0E00               	movlw	0
  2731   0020FE  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  2732   002100  0E01               	movlw	1
  2733   002102  6FE8               	movwf	efgtoa@n& (0+255),b
  2734   002104                     l2895:
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2738   002104  51E8               	movf	efgtoa@n& (0+255),w,b
  2739   002106  0F6C               	addlw	low _dbuf
  2740   002108  6E01               	movwf	strcpy@dest^0,c
  2741   00210A  0E19               	movlw	low STR_4
  2742   00210C  6E02               	movwf	strcpy@src^0,c
  2743   00210E  ECB7  F022         	call	_strcpy	;wreg free
  2744   002112                     l2897:
  2745                           
  2746                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2747   002112  0100               	movlb	0	; () banked
  2748   002114  0EFD               	movlw	253
  2749   002116  27D7               	addwf	efgtoa@w& (0+255),f,b
  2750   002118  0EFF               	movlw	255
  2751   00211A  23D8               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2752   00211C                     
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2755   00211C  C034  F00E         	movff	efgtoa@fp,pad@fp
  2756   002120  0E6C               	movlw	low _dbuf
  2757   002122  6E0F               	movwf	pad@buf^0,c
  2758   002124  C0D7  F010         	movff	efgtoa@w,pad@p
  2759   002128  C0D8  F011         	movff	efgtoa@w+1,pad@p+1
  2760   00212C  EC92  F021         	call	_pad	;wreg free
  2761   002130  EFE4  F014         	goto	l858
  2762   002134                     l2903:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2765   002134  C0EA  F001         	movff	efgtoa@g,___fpclassifyf@x
  2766   002138  C0EB  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2767   00213C  C0EC  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2768   002140  C0ED  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2769   002144  ECA2  F01F         	call	___fpclassifyf	;wreg free
  2770   002148  5001               	movf	?___fpclassifyf^0,w,c
  2771   00214A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2772   00214C  A4D8               	btfss	status,2,c
  2773   00214E  EFAB  F010         	goto	u3131
  2774   002152  EFAD  F010         	goto	u3130
  2775   002156                     u3131:
  2776   002156  EFC8  F010         	goto	l2921
  2777   00215A                     u3130:
  2778   00215A                     
  2779                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2780   00215A  0100               	movlb	0	; () banked
  2781   00215C  51E7               	movf	efgtoa@sign& (0+255),w,b
  2782   00215E  B4D8               	btfsc	status,2,c
  2783   002160  EFB4  F010         	goto	u3141
  2784   002164  EFB6  F010         	goto	u3140
  2785   002168                     u3141:
  2786   002168  EFBF  F010         	goto	l2913
  2787   00216C                     u3140:
  2788   00216C                     
  2789                           ; BSR set to: 0
  2790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2791   00216C  C0E7  F06C         	movff	efgtoa@sign,_dbuf
  2792   002170                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  2795   002170  07D7               	decf	efgtoa@w& (0+255),f,b
  2796   002172  A0D8               	btfss	status,0,c
  2797   002174  07D8               	decf	(efgtoa@w+1)& (0+255),f,b
  2798   002176                     
  2799                           ; BSR set to: 0
  2800                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2801   002176  0E00               	movlw	0
  2802   002178  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  2803   00217A  0E01               	movlw	1
  2804   00217C  6FE8               	movwf	efgtoa@n& (0+255),b
  2805   00217E                     l2913:
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2809   00217E  51E8               	movf	efgtoa@n& (0+255),w,b
  2810   002180  0F6C               	addlw	low _dbuf
  2811   002182  6E01               	movwf	strcpy@dest^0,c
  2812   002184  0E1D               	movlw	low STR_7
  2813   002186  6E02               	movwf	strcpy@src^0,c
  2814   002188  ECB7  F022         	call	_strcpy	;wreg free
  2815   00218C  EF89  F010         	goto	l2897
  2816   002190                     l2921:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  2819   002190  0E00               	movlw	0
  2820   002192  0100               	movlb	0	; () banked
  2821   002194  6FEE               	movwf	efgtoa@u& (0+255),b
  2822   002196  0E00               	movlw	0
  2823   002198  6FEF               	movwf	(efgtoa@u+1)& (0+255),b
  2824   00219A  0E80               	movlw	128
  2825   00219C  6FF0               	movwf	(efgtoa@u+2)& (0+255),b
  2826   00219E  0E3F               	movlw	63
  2827   0021A0  6FF1               	movwf	(efgtoa@u+3)& (0+255),b
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  2830   0021A2  0E00               	movlw	0
  2831   0021A4  6FD6               	movwf	(efgtoa@e+1)& (0+255),b
  2832   0021A6  0E00               	movlw	0
  2833   0021A8  6FD5               	movwf	efgtoa@e& (0+255),b
  2834   0021AA                     
  2835                           ; BSR set to: 0
  2836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  2837   0021AA  C0EA  F001         	movff	efgtoa@g,___fleq@ff1
  2838   0021AE  C0EB  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2839   0021B2  C0EC  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2840   0021B6  C0ED  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2841   0021BA  0E00               	movlw	0
  2842   0021BC  6E05               	movwf	___fleq@ff2^0,c
  2843   0021BE  0E00               	movlw	0
  2844   0021C0  6E06               	movwf	(___fleq@ff2+1)^0,c
  2845   0021C2  0E00               	movlw	0
  2846   0021C4  6E07               	movwf	(___fleq@ff2+2)^0,c
  2847   0021C6  0E00               	movlw	0
  2848   0021C8  6E08               	movwf	(___fleq@ff2+3)^0,c
  2849   0021CA  ECD3  F020         	call	___fleq	;wreg free
  2850   0021CE  B0D8               	btfsc	status,0,c
  2851   0021D0  EFEC  F010         	goto	u3151
  2852   0021D4  EFEE  F010         	goto	u3150
  2853   0021D8                     u3151:
  2854   0021D8  EFCD  F011         	goto	l861
  2855   0021DC                     u3150:
  2856   0021DC  EFFB  F010         	goto	l2929
  2857   0021E0                     l863:
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  2860   0021E0  C0D9  F0EE         	movff	efgtoa@ou,efgtoa@u
  2861   0021E4  C0DA  F0EF         	movff	efgtoa@ou+1,efgtoa@u+1
  2862   0021E8  C0DB  F0F0         	movff	efgtoa@ou+2,efgtoa@u+2
  2863   0021EC  C0DC  F0F1         	movff	efgtoa@ou+3,efgtoa@u+3
  2864   0021F0                     
  2865                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  2866   0021F0  0100               	movlb	0	; () banked
  2867   0021F2  4BD5               	infsnz	efgtoa@e& (0+255),f,b
  2868   0021F4  2BD6               	incf	(efgtoa@e+1)& (0+255),f,b
  2869   0021F6                     l2929:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2872   0021F6  C0EE  F00F         	movff	efgtoa@u,___flmul@b
  2873   0021FA  C0EF  F010         	movff	efgtoa@u+1,___flmul@b+1
  2874   0021FE  C0F0  F011         	movff	efgtoa@u+2,___flmul@b+2
  2875   002202  C0F1  F012         	movff	efgtoa@u+3,___flmul@b+3
  2876   002206  0E00               	movlw	0
  2877   002208  6E13               	movwf	___flmul@a^0,c
  2878   00220A  0E00               	movlw	0
  2879   00220C  6E14               	movwf	(___flmul@a+1)^0,c
  2880   00220E  0E20               	movlw	32
  2881   002210  6E15               	movwf	(___flmul@a+2)^0,c
  2882   002212  0E41               	movlw	65
  2883   002214  6E16               	movwf	(___flmul@a+3)^0,c
  2884   002216  EC40  F017         	call	___flmul	;wreg free
  2885   00221A  C00F  F0D9         	movff	?___flmul,efgtoa@ou
  2886   00221E  C010  F0DA         	movff	?___flmul+1,efgtoa@ou+1
  2887   002222  C011  F0DB         	movff	?___flmul+2,efgtoa@ou+2
  2888   002226  C012  F0DC         	movff	?___flmul+3,efgtoa@ou+3
  2889   00222A  0100               	movlb	0	; () banked
  2890   00222C  51D9               	movf	efgtoa@ou& (0+255),w,b
  2891   00222E  5DEA               	subwf	efgtoa@g& (0+255),w,b
  2892   002230  6E01               	movwf	labs@a^0,c
  2893   002232  51DA               	movf	(efgtoa@ou+1)& (0+255),w,b
  2894   002234  59EB               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2895   002236  6E02               	movwf	(labs@a+1)^0,c
  2896   002238  51DB               	movf	(efgtoa@ou+2)& (0+255),w,b
  2897   00223A  59EC               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2898   00223C  6E03               	movwf	(labs@a+2)^0,c
  2899   00223E  51DC               	movf	(efgtoa@ou+3)& (0+255),w,b
  2900   002240  59ED               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2901   002242  6E04               	movwf	(labs@a+3)^0,c
  2902   002244  ECC3  F021         	call	_labs	;wreg free
  2903   002248  BE04               	btfsc	(?_labs+3)^0,7,c
  2904   00224A  EF32  F011         	goto	u3161
  2905   00224E  5004               	movf	(?_labs+3)^0,w,c
  2906   002250  1003               	iorwf	(?_labs+2)^0,w,c
  2907   002252  1002               	iorwf	(?_labs+1)^0,w,c
  2908   002254  E109               	bnz	u3160
  2909   002256  0E02               	movlw	2
  2910   002258  5C01               	subwf	?_labs^0,w,c
  2911   00225A  A0D8               	btfss	status,0,c
  2912   00225C  EF32  F011         	goto	u3161
  2913   002260  EF34  F011         	goto	u3160
  2914   002264                     u3161:
  2915   002264  EFF0  F010         	goto	l863
  2916   002268                     u3160:
  2917   002268  C0D9  F028         	movff	efgtoa@ou,___flge@ff1
  2918   00226C  C0DA  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2919   002270  C0DB  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2920   002274  C0DC  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2921   002278  C0EA  F02C         	movff	efgtoa@g,___flge@ff2
  2922   00227C  C0EB  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2923   002280  C0EC  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2924   002284  C0ED  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2925   002288  EC20  F01F         	call	___flge	;wreg free
  2926   00228C  A0D8               	btfss	status,0,c
  2927   00228E  EF4B  F011         	goto	u3171
  2928   002292  EF4D  F011         	goto	u3170
  2929   002296                     u3171:
  2930   002296  EFF0  F010         	goto	l863
  2931   00229A                     u3170:
  2932   00229A                     
  2933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2934   00229A  0100               	movlb	0	; () banked
  2935   00229C  51EE               	movf	efgtoa@u& (0+255),w,b
  2936   00229E  5DEA               	subwf	efgtoa@g& (0+255),w,b
  2937   0022A0  6E01               	movwf	labs@a^0,c
  2938   0022A2  51EF               	movf	(efgtoa@u+1)& (0+255),w,b
  2939   0022A4  59EB               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2940   0022A6  6E02               	movwf	(labs@a+1)^0,c
  2941   0022A8  51F0               	movf	(efgtoa@u+2)& (0+255),w,b
  2942   0022AA  59EC               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2943   0022AC  6E03               	movwf	(labs@a+2)^0,c
  2944   0022AE  51F1               	movf	(efgtoa@u+3)& (0+255),w,b
  2945   0022B0  59ED               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2946   0022B2  6E04               	movwf	(labs@a+3)^0,c
  2947   0022B4  ECC3  F021         	call	_labs	;wreg free
  2948   0022B8  BE04               	btfsc	(?_labs+3)^0,7,c
  2949   0022BA  EF6C  F011         	goto	u3180
  2950   0022BE  5004               	movf	(?_labs+3)^0,w,c
  2951   0022C0  1003               	iorwf	(?_labs+2)^0,w,c
  2952   0022C2  1002               	iorwf	(?_labs+1)^0,w,c
  2953   0022C4  E107               	bnz	u3181
  2954   0022C6  0E02               	movlw	2
  2955   0022C8  5C01               	subwf	?_labs^0,w,c
  2956   0022CA  B0D8               	btfsc	status,0,c
  2957   0022CC  EF6A  F011         	goto	u3181
  2958   0022D0  EF6C  F011         	goto	u3180
  2959   0022D4                     u3181:
  2960   0022D4  EFB4  F011         	goto	l2947
  2961   0022D8                     u3180:
  2962   0022D8                     l2937:
  2963                           
  2964                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  2965   0022D8  C0EE  F0EA         	movff	efgtoa@u,efgtoa@g
  2966   0022DC  C0EF  F0EB         	movff	efgtoa@u+1,efgtoa@g+1
  2967   0022E0  C0F0  F0EC         	movff	efgtoa@u+2,efgtoa@g+2
  2968   0022E4  C0F1  F0ED         	movff	efgtoa@u+3,efgtoa@g+3
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  2971   0022E8  EFCD  F011         	goto	l861
  2972   0022EC                     l2939:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  2975   0022EC  C0EE  F001         	movff	efgtoa@u,___fldiv@b
  2976   0022F0  C0EF  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2977   0022F4  C0F0  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2978   0022F8  C0F1  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2979   0022FC  0E00               	movlw	0
  2980   0022FE  6E05               	movwf	___fldiv@a^0,c
  2981   002300  0E00               	movlw	0
  2982   002302  6E06               	movwf	(___fldiv@a+1)^0,c
  2983   002304  0E20               	movlw	32
  2984   002306  6E07               	movwf	(___fldiv@a+2)^0,c
  2985   002308  0E41               	movlw	65
  2986   00230A  6E08               	movwf	(___fldiv@a+3)^0,c
  2987   00230C  EC65  F019         	call	___fldiv	;wreg free
  2988   002310  C001  F0EE         	movff	?___fldiv,efgtoa@u
  2989   002314  C002  F0EF         	movff	?___fldiv+1,efgtoa@u+1
  2990   002318  C003  F0F0         	movff	?___fldiv+2,efgtoa@u+2
  2991   00231C  C004  F0F1         	movff	?___fldiv+3,efgtoa@u+3
  2992   002320                     
  2993                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  2994   002320  0100               	movlb	0	; () banked
  2995   002322  07D5               	decf	efgtoa@e& (0+255),f,b
  2996   002324  A0D8               	btfss	status,0,c
  2997   002326  07D6               	decf	(efgtoa@e+1)& (0+255),f,b
  2998   002328                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3001   002328  51EE               	movf	efgtoa@u& (0+255),w,b
  3002   00232A  5DEA               	subwf	efgtoa@g& (0+255),w,b
  3003   00232C  6E01               	movwf	labs@a^0,c
  3004   00232E  51EF               	movf	(efgtoa@u+1)& (0+255),w,b
  3005   002330  59EB               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3006   002332  6E02               	movwf	(labs@a+1)^0,c
  3007   002334  51F0               	movf	(efgtoa@u+2)& (0+255),w,b
  3008   002336  59EC               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3009   002338  6E03               	movwf	(labs@a+2)^0,c
  3010   00233A  51F1               	movf	(efgtoa@u+3)& (0+255),w,b
  3011   00233C  59ED               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3012   00233E  6E04               	movwf	(labs@a+3)^0,c
  3013   002340  ECC3  F021         	call	_labs	;wreg free
  3014   002344  BE04               	btfsc	(?_labs+3)^0,7,c
  3015   002346  EFB2  F011         	goto	u3190
  3016   00234A  5004               	movf	(?_labs+3)^0,w,c
  3017   00234C  1003               	iorwf	(?_labs+2)^0,w,c
  3018   00234E  1002               	iorwf	(?_labs+1)^0,w,c
  3019   002350  E107               	bnz	u3191
  3020   002352  0E02               	movlw	2
  3021   002354  5C01               	subwf	?_labs^0,w,c
  3022   002356  B0D8               	btfsc	status,0,c
  3023   002358  EFB0  F011         	goto	u3191
  3024   00235C  EFB2  F011         	goto	u3190
  3025   002360                     u3191:
  3026   002360  EFB4  F011         	goto	l2947
  3027   002364                     u3190:
  3028   002364  EF6C  F011         	goto	l2937
  3029   002368                     l2947:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3032   002368  C0EA  F028         	movff	efgtoa@g,___flge@ff1
  3033   00236C  C0EB  F029         	movff	efgtoa@g+1,___flge@ff1+1
  3034   002370  C0EC  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  3035   002374  C0ED  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  3036   002378  C0EE  F02C         	movff	efgtoa@u,___flge@ff2
  3037   00237C  C0EF  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  3038   002380  C0F0  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  3039   002384  C0F1  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  3040   002388  EC20  F01F         	call	___flge	;wreg free
  3041   00238C  A0D8               	btfss	status,0,c
  3042   00238E  EFCB  F011         	goto	u3201
  3043   002392  EFCD  F011         	goto	u3200
  3044   002396                     u3201:
  3045   002396  EF76  F011         	goto	l2939
  3046   00239A                     u3200:
  3047   00239A                     l861:
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3050   00239A  C039  F0CF         	movff	efgtoa@c,efgtoa@mode
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3053   00239E  C0CF  F0D0         	movff	efgtoa@mode,efgtoa@nmode
  3054   0023A2                     
  3055                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3056   0023A2  0100               	movlb	0	; () banked
  3057   0023A4  BF6B               	btfsc	(_prec+1)& (0+255),7,b
  3058   0023A6  EFD7  F011         	goto	u3211
  3059   0023AA  EFD9  F011         	goto	u3210
  3060   0023AE                     u3211:
  3061   0023AE  EFDF  F011         	goto	l2953
  3062   0023B2                     u3210:
  3063   0023B2                     
  3064                           ; BSR set to: 0
  3065   0023B2  C06A  F0C8         	movff	_prec,efgtoa@p
  3066   0023B6  C06B  F0C9         	movff	_prec+1,efgtoa@p+1
  3067   0023BA  EFE3  F011         	goto	l2955
  3068   0023BE                     l2953:
  3069                           
  3070                           ; BSR set to: 0
  3071   0023BE  0E00               	movlw	0
  3072   0023C0  6FC9               	movwf	(efgtoa@p+1)& (0+255),b
  3073   0023C2  0E06               	movlw	6
  3074   0023C4  6FC8               	movwf	efgtoa@p& (0+255),b
  3075   0023C6                     l2955:
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3079   0023C6  C0C8  F0D3         	movff	efgtoa@p,efgtoa@m
  3080   0023CA  C0C9  F0D4         	movff	efgtoa@p+1,efgtoa@m+1
  3081   0023CE                     
  3082                           ; BSR set to: 0
  3083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3084   0023CE  4BD3               	infsnz	efgtoa@m& (0+255),f,b
  3085   0023D0  2BD4               	incf	(efgtoa@m+1)& (0+255),f,b
  3086   0023D2                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3089   0023D2  0E66               	movlw	102
  3090   0023D4  19D0               	xorwf	efgtoa@nmode& (0+255),w,b
  3091   0023D6  A4D8               	btfss	status,2,c
  3092   0023D8  EFF0  F011         	goto	u3221
  3093   0023DC  EFF2  F011         	goto	u3220
  3094   0023E0                     u3221:
  3095   0023E0  EF12  F012         	goto	l2969
  3096   0023E4                     u3220:
  3097   0023E4                     
  3098                           ; BSR set to: 0
  3099                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3100   0023E4  BFD6               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3101   0023E6  EFF9  F011         	goto	u3230
  3102   0023EA  EFF7  F011         	goto	u3231
  3103   0023EE                     u3231:
  3104   0023EE  EF05  F012         	goto	l2965
  3105   0023F2                     u3230:
  3106   0023F2                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3109   0023F2  0E00               	movlw	0
  3110   0023F4  6FEE               	movwf	efgtoa@u& (0+255),b
  3111   0023F6  0E00               	movlw	0
  3112   0023F8  6FEF               	movwf	(efgtoa@u+1)& (0+255),b
  3113   0023FA  0E80               	movlw	128
  3114   0023FC  6FF0               	movwf	(efgtoa@u+2)& (0+255),b
  3115   0023FE  0E3F               	movlw	63
  3116   002400  6FF1               	movwf	(efgtoa@u+3)& (0+255),b
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3119   002402  0E00               	movlw	0
  3120   002404  6FD6               	movwf	(efgtoa@e+1)& (0+255),b
  3121   002406  0E00               	movlw	0
  3122   002408  6FD5               	movwf	efgtoa@e& (0+255),b
  3123   00240A                     l2965:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3127   00240A  0E67               	movlw	103
  3128   00240C  19CF               	xorwf	efgtoa@mode& (0+255),w,b
  3129   00240E  B4D8               	btfsc	status,2,c
  3130   002410  EF0C  F012         	goto	u3241
  3131   002414  EF0E  F012         	goto	u3240
  3132   002418                     u3241:
  3133   002418  EF12  F012         	goto	l2969
  3134   00241C                     u3240:
  3135   00241C                     
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3138   00241C  51D5               	movf	efgtoa@e& (0+255),w,b
  3139   00241E  27D3               	addwf	efgtoa@m& (0+255),f,b
  3140   002420  51D6               	movf	(efgtoa@e+1)& (0+255),w,b
  3141   002422  23D4               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3142   002424                     l2969:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3146   002424  0E00               	movlw	0
  3147   002426  6FDE               	movwf	(efgtoa@i+1)& (0+255),b
  3148   002428  0E00               	movlw	0
  3149   00242A  6FDD               	movwf	efgtoa@i& (0+255),b
  3150   00242C                     
  3151                           ; BSR set to: 0
  3152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3153   00242C  C0EA  F0DF         	movff	efgtoa@g,efgtoa@h
  3154   002430  C0EB  F0E0         	movff	efgtoa@g+1,efgtoa@h+1
  3155   002434  C0EC  F0E1         	movff	efgtoa@g+2,efgtoa@h+2
  3156   002438  C0ED  F0E2         	movff	efgtoa@g+3,efgtoa@h+3
  3157   00243C                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3160   00243C  C0EE  F0D9         	movff	efgtoa@u,efgtoa@ou
  3161   002440  C0EF  F0DA         	movff	efgtoa@u+1,efgtoa@ou+1
  3162   002444  C0F0  F0DB         	movff	efgtoa@u+2,efgtoa@ou+2
  3163   002448  C0F1  F0DC         	movff	efgtoa@u+3,efgtoa@ou+3
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3166   00244C  EFA3  F012         	goto	l2983
  3167   002450                     l2975:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3171   002450  C0DF  F001         	movff	efgtoa@h,___fldiv@b
  3172   002454  C0E0  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3173   002458  C0E1  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3174   00245C  C0E2  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3175   002460  C0EE  F005         	movff	efgtoa@u,___fldiv@a
  3176   002464  C0EF  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3177   002468  C0F0  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3178   00246C  C0F1  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3179   002470  EC65  F019         	call	___fldiv	;wreg free
  3180   002474  C001  F01A         	movff	?___fldiv,floorf@x
  3181   002478  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3182   00247C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3183   002480  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3184   002484  EC2D  F01B         	call	_floorf	;wreg free
  3185   002488  C01A  F0E3         	movff	?_floorf,efgtoa@l
  3186   00248C  C01B  F0E4         	movff	?_floorf+1,efgtoa@l+1
  3187   002490  C01C  F0E5         	movff	?_floorf+2,efgtoa@l+2
  3188   002494  C01D  F0E6         	movff	?_floorf+3,efgtoa@l+3
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3191   002498  C0E3  F001         	movff	efgtoa@l,___fltol@f1
  3192   00249C  C0E4  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3193   0024A0  C0E5  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3194   0024A4  C0E6  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3195   0024A8  EC9D  F01E         	call	___fltol	;wreg free
  3196   0024AC  C001  F0D1         	movff	?___fltol,efgtoa@d
  3197   0024B0  C002  F0D2         	movff	?___fltol+1,efgtoa@d+1
  3198   0024B4                     
  3199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3200   0024B4  C0DF  F028         	movff	efgtoa@h,___flsub@b
  3201   0024B8  C0E0  F029         	movff	efgtoa@h+1,___flsub@b+1
  3202   0024BC  C0E1  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3203   0024C0  C0E2  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3204   0024C4  C0E3  F013         	movff	efgtoa@l,___flmul@a
  3205   0024C8  C0E4  F014         	movff	efgtoa@l+1,___flmul@a+1
  3206   0024CC  C0E5  F015         	movff	efgtoa@l+2,___flmul@a+2
  3207   0024D0  C0E6  F016         	movff	efgtoa@l+3,___flmul@a+3
  3208   0024D4  C0EE  F00F         	movff	efgtoa@u,___flmul@b
  3209   0024D8  C0EF  F010         	movff	efgtoa@u+1,___flmul@b+1
  3210   0024DC  C0F0  F011         	movff	efgtoa@u+2,___flmul@b+2
  3211   0024E0  C0F1  F012         	movff	efgtoa@u+3,___flmul@b+3
  3212   0024E4  EC40  F017         	call	___flmul	;wreg free
  3213   0024E8  C00F  F02C         	movff	?___flmul,___flsub@a
  3214   0024EC  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3215   0024F0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3216   0024F4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3217   0024F8  EC13  F022         	call	___flsub	;wreg free
  3218   0024FC  C028  F0DF         	movff	?___flsub,efgtoa@h
  3219   002500  C029  F0E0         	movff	?___flsub+1,efgtoa@h+1
  3220   002504  C02A  F0E1         	movff	?___flsub+2,efgtoa@h+2
  3221   002508  C02B  F0E2         	movff	?___flsub+3,efgtoa@h+3
  3222   00250C                     
  3223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3224   00250C  C0EE  F001         	movff	efgtoa@u,___fldiv@b
  3225   002510  C0EF  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3226   002514  C0F0  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3227   002518  C0F1  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3228   00251C  0E00               	movlw	0
  3229   00251E  6E05               	movwf	___fldiv@a^0,c
  3230   002520  0E00               	movlw	0
  3231   002522  6E06               	movwf	(___fldiv@a+1)^0,c
  3232   002524  0E20               	movlw	32
  3233   002526  6E07               	movwf	(___fldiv@a+2)^0,c
  3234   002528  0E41               	movlw	65
  3235   00252A  6E08               	movwf	(___fldiv@a+3)^0,c
  3236   00252C  EC65  F019         	call	___fldiv	;wreg free
  3237   002530  C001  F0EE         	movff	?___fldiv,efgtoa@u
  3238   002534  C002  F0EF         	movff	?___fldiv+1,efgtoa@u+1
  3239   002538  C003  F0F0         	movff	?___fldiv+2,efgtoa@u+2
  3240   00253C  C004  F0F1         	movff	?___fldiv+3,efgtoa@u+3
  3241   002540                     
  3242                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3243   002540  0100               	movlb	0	; () banked
  3244   002542  4BDD               	infsnz	efgtoa@i& (0+255),f,b
  3245   002544  2BDE               	incf	(efgtoa@i+1)& (0+255),f,b
  3246   002546                     l2983:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3250   002546  51D3               	movf	efgtoa@m& (0+255),w,b
  3251   002548  5DDD               	subwf	efgtoa@i& (0+255),w,b
  3252   00254A  51DE               	movf	(efgtoa@i+1)& (0+255),w,b
  3253   00254C  0A80               	xorlw	128
  3254   00254E  6E3A               	movwf	??_efgtoa^0,c
  3255   002550  51D4               	movf	(efgtoa@m+1)& (0+255),w,b
  3256   002552  0A80               	xorlw	128
  3257   002554  583A               	subwfb	??_efgtoa^0,w,c
  3258   002556  A0D8               	btfss	status,0,c
  3259   002558  EFB0  F012         	goto	u3251
  3260   00255C  EFB2  F012         	goto	u3250
  3261   002560                     u3251:
  3262   002560  EF28  F012         	goto	l2975
  3263   002564                     u3250:
  3264   002564                     
  3265                           ; BSR set to: 0
  3266                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3267   002564  C0EE  F00F         	movff	efgtoa@u,___flmul@b
  3268   002568  C0EF  F010         	movff	efgtoa@u+1,___flmul@b+1
  3269   00256C  C0F0  F011         	movff	efgtoa@u+2,___flmul@b+2
  3270   002570  C0F1  F012         	movff	efgtoa@u+3,___flmul@b+3
  3271   002574  0E00               	movlw	0
  3272   002576  6E13               	movwf	___flmul@a^0,c
  3273   002578  0E00               	movlw	0
  3274   00257A  6E14               	movwf	(___flmul@a+1)^0,c
  3275   00257C  0EA0               	movlw	160
  3276   00257E  6E15               	movwf	(___flmul@a+2)^0,c
  3277   002580  0E40               	movlw	64
  3278   002582  6E16               	movwf	(___flmul@a+3)^0,c
  3279   002584  EC40  F017         	call	___flmul	;wreg free
  3280   002588  C00F  F0E3         	movff	?___flmul,efgtoa@l
  3281   00258C  C010  F0E4         	movff	?___flmul+1,efgtoa@l+1
  3282   002590  C011  F0E5         	movff	?___flmul+2,efgtoa@l+2
  3283   002594  C012  F0E6         	movff	?___flmul+3,efgtoa@l+3
  3284   002598                     
  3285                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3286   002598  C0DF  F028         	movff	efgtoa@h,___flge@ff1
  3287   00259C  C0E0  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3288   0025A0  C0E1  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3289   0025A4  C0E2  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3290   0025A8  C0E3  F02C         	movff	efgtoa@l,___flge@ff2
  3291   0025AC  C0E4  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3292   0025B0  C0E5  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3293   0025B4  C0E6  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3294   0025B8  EC20  F01F         	call	___flge	;wreg free
  3295   0025BC  B0D8               	btfsc	status,0,c
  3296   0025BE  EFE3  F012         	goto	u3261
  3297   0025C2  EFE5  F012         	goto	u3260
  3298   0025C6                     u3261:
  3299   0025C6  EFF0  F012         	goto	l2991
  3300   0025CA                     u3260:
  3301   0025CA                     
  3302                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3303   0025CA  0E00               	movlw	0
  3304   0025CC  0100               	movlb	0	; () banked
  3305   0025CE  6FE3               	movwf	efgtoa@l& (0+255),b
  3306   0025D0  0E00               	movlw	0
  3307   0025D2  6FE4               	movwf	(efgtoa@l+1)& (0+255),b
  3308   0025D4  0E00               	movlw	0
  3309   0025D6  6FE5               	movwf	(efgtoa@l+2)& (0+255),b
  3310   0025D8  0E00               	movlw	0
  3311   0025DA  6FE6               	movwf	(efgtoa@l+3)& (0+255),b
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3314   0025DC  EF19  F013         	goto	l2997
  3315   0025E0                     l2991:
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3318   0025E0  C0DF  F001         	movff	efgtoa@h,___fleq@ff1
  3319   0025E4  C0E0  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3320   0025E8  C0E1  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3321   0025EC  C0E2  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3322   0025F0  C0E3  F005         	movff	efgtoa@l,___fleq@ff2
  3323   0025F4  C0E4  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3324   0025F8  C0E5  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3325   0025FC  C0E6  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3326   002600  ECD3  F020         	call	___fleq	;wreg free
  3327   002604  A0D8               	btfss	status,0,c
  3328   002606  EF07  F013         	goto	u3271
  3329   00260A  EF09  F013         	goto	u3270
  3330   00260E                     u3271:
  3331   00260E  EF19  F013         	goto	l2997
  3332   002612                     u3270:
  3333   002612  0100               	movlb	0	; () banked
  3334   002614  B1D1               	btfsc	efgtoa@d& (0+255),0,b
  3335   002616  EF0F  F013         	goto	u3281
  3336   00261A  EF11  F013         	goto	u3280
  3337   00261E                     u3281:
  3338   00261E  EF19  F013         	goto	l2997
  3339   002622                     u3280:
  3340   002622                     
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3343   002622  0E00               	movlw	0
  3344   002624  6FE3               	movwf	efgtoa@l& (0+255),b
  3345   002626  0E00               	movlw	0
  3346   002628  6FE4               	movwf	(efgtoa@l+1)& (0+255),b
  3347   00262A  0E00               	movlw	0
  3348   00262C  6FE5               	movwf	(efgtoa@l+2)& (0+255),b
  3349   00262E  0E00               	movlw	0
  3350   002630  6FE6               	movwf	(efgtoa@l+3)& (0+255),b
  3351   002632                     l2997:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3354   002632  C0EA  F001         	movff	efgtoa@g,___fladd@b
  3355   002636  C0EB  F002         	movff	efgtoa@g+1,___fladd@b+1
  3356   00263A  C0EC  F003         	movff	efgtoa@g+2,___fladd@b+2
  3357   00263E  C0ED  F004         	movff	efgtoa@g+3,___fladd@b+3
  3358   002642  C0E3  F005         	movff	efgtoa@l,___fladd@a
  3359   002646  C0E4  F006         	movff	efgtoa@l+1,___fladd@a+1
  3360   00264A  C0E5  F007         	movff	efgtoa@l+2,___fladd@a+2
  3361   00264E  C0E6  F008         	movff	efgtoa@l+3,___fladd@a+3
  3362   002652  ECE5  F014         	call	___fladd	;wreg free
  3363   002656  C001  F0DF         	movff	?___fladd,efgtoa@h
  3364   00265A  C002  F0E0         	movff	?___fladd+1,efgtoa@h+1
  3365   00265E  C003  F0E1         	movff	?___fladd+2,efgtoa@h+2
  3366   002662  C004  F0E2         	movff	?___fladd+3,efgtoa@h+3
  3367   002666                     
  3368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3369   002666  C0DF  F028         	movff	efgtoa@h,___flge@ff1
  3370   00266A  C0E0  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3371   00266E  C0E1  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3372   002672  C0E2  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3373   002676  0E00               	movlw	0
  3374   002678  6E13               	movwf	___flmul@a^0,c
  3375   00267A  0E00               	movlw	0
  3376   00267C  6E14               	movwf	(___flmul@a+1)^0,c
  3377   00267E  0E20               	movlw	32
  3378   002680  6E15               	movwf	(___flmul@a+2)^0,c
  3379   002682  0E41               	movlw	65
  3380   002684  6E16               	movwf	(___flmul@a+3)^0,c
  3381   002686  C0D9  F00F         	movff	efgtoa@ou,___flmul@b
  3382   00268A  C0DA  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3383   00268E  C0DB  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3384   002692  C0DC  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3385   002696  EC40  F017         	call	___flmul	;wreg free
  3386   00269A  C00F  F02C         	movff	?___flmul,___flge@ff2
  3387   00269E  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3388   0026A2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3389   0026A6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3390   0026AA  EC20  F01F         	call	___flge	;wreg free
  3391   0026AE  A0D8               	btfss	status,0,c
  3392   0026B0  EF5C  F013         	goto	u3291
  3393   0026B4  EF5E  F013         	goto	u3290
  3394   0026B8                     u3291:
  3395   0026B8  EF87  F013         	goto	l3009
  3396   0026BC                     u3290:
  3397   0026BC                     
  3398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3399   0026BC  0100               	movlb	0	; () banked
  3400   0026BE  4BD5               	infsnz	efgtoa@e& (0+255),f,b
  3401   0026C0  2BD6               	incf	(efgtoa@e+1)& (0+255),f,b
  3402   0026C2                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3405   0026C2  C0D9  F00F         	movff	efgtoa@ou,___flmul@b
  3406   0026C6  C0DA  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3407   0026CA  C0DB  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3408   0026CE  C0DC  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3409   0026D2  0E00               	movlw	0
  3410   0026D4  6E13               	movwf	___flmul@a^0,c
  3411   0026D6  0E00               	movlw	0
  3412   0026D8  6E14               	movwf	(___flmul@a+1)^0,c
  3413   0026DA  0E20               	movlw	32
  3414   0026DC  6E15               	movwf	(___flmul@a+2)^0,c
  3415   0026DE  0E41               	movlw	65
  3416   0026E0  6E16               	movwf	(___flmul@a+3)^0,c
  3417   0026E2  EC40  F017         	call	___flmul	;wreg free
  3418   0026E6  C00F  F0D9         	movff	?___flmul,efgtoa@ou
  3419   0026EA  C010  F0DA         	movff	?___flmul+1,efgtoa@ou+1
  3420   0026EE  C011  F0DB         	movff	?___flmul+2,efgtoa@ou+2
  3421   0026F2  C012  F0DC         	movff	?___flmul+3,efgtoa@ou+3
  3422   0026F6                     
  3423                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3424   0026F6  0E66               	movlw	102
  3425   0026F8  0100               	movlb	0	; () banked
  3426   0026FA  19D0               	xorwf	efgtoa@nmode& (0+255),w,b
  3427   0026FC  A4D8               	btfss	status,2,c
  3428   0026FE  EF83  F013         	goto	u3301
  3429   002702  EF85  F013         	goto	u3300
  3430   002706                     u3301:
  3431   002706  EF87  F013         	goto	l3009
  3432   00270A                     u3300:
  3433   00270A                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3436   00270A  4BD3               	infsnz	efgtoa@m& (0+255),f,b
  3437   00270C  2BD4               	incf	(efgtoa@m+1)& (0+255),f,b
  3438   00270E                     l3009:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3441   00270E  C0D9  F0EE         	movff	efgtoa@ou,efgtoa@u
  3442   002712  C0DA  F0EF         	movff	efgtoa@ou+1,efgtoa@u+1
  3443   002716  C0DB  F0F0         	movff	efgtoa@ou+2,efgtoa@u+2
  3444   00271A  C0DC  F0F1         	movff	efgtoa@ou+3,efgtoa@u+3
  3445   00271E                     
  3446                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3447   00271E  C0D5  F0C6         	movff	efgtoa@e,efgtoa@ne
  3448   002722  C0D6  F0C7         	movff	efgtoa@e+1,efgtoa@ne+1
  3449   002726                     
  3450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3451   002726  0100               	movlb	0	; () banked
  3452   002728  6BCE               	clrf	efgtoa@pp& (0+255),b
  3453   00272A                     
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3456   00272A  0E00               	movlw	0
  3457   00272C  6FCB               	movwf	(efgtoa@t+1)& (0+255),b
  3458   00272E  0E00               	movlw	0
  3459   002730  6FCA               	movwf	efgtoa@t& (0+255),b
  3460   002732                     
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3463   002732  0E00               	movlw	0
  3464   002734  6FDE               	movwf	(efgtoa@i+1)& (0+255),b
  3465   002736  0E00               	movlw	0
  3466   002738  6FDD               	movwf	efgtoa@i& (0+255),b
  3467                           
  3468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3469   00273A  EF7E  F014         	goto	l3059
  3470   00273E                     l3019:
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3474   00273E  C0DF  F001         	movff	efgtoa@h,___fldiv@b
  3475   002742  C0E0  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3476   002746  C0E1  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3477   00274A  C0E2  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3478   00274E  C0EE  F005         	movff	efgtoa@u,___fldiv@a
  3479   002752  C0EF  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3480   002756  C0F0  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3481   00275A  C0F1  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3482   00275E  EC65  F019         	call	___fldiv	;wreg free
  3483   002762  C001  F01A         	movff	?___fldiv,floorf@x
  3484   002766  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3485   00276A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3486   00276E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3487   002772  EC2D  F01B         	call	_floorf	;wreg free
  3488   002776  C01A  F0E3         	movff	?_floorf,efgtoa@l
  3489   00277A  C01B  F0E4         	movff	?_floorf+1,efgtoa@l+1
  3490   00277E  C01C  F0E5         	movff	?_floorf+2,efgtoa@l+2
  3491   002782  C01D  F0E6         	movff	?_floorf+3,efgtoa@l+3
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3494   002786  C0E3  F001         	movff	efgtoa@l,___fltol@f1
  3495   00278A  C0E4  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3496   00278E  C0E5  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3497   002792  C0E6  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3498   002796  EC9D  F01E         	call	___fltol	;wreg free
  3499   00279A  BE02               	btfsc	(?___fltol+1)^0,7,c
  3500   00279C  EFDB  F013         	goto	u3310
  3501   0027A0  5002               	movf	(?___fltol+1)^0,w,c
  3502   0027A2  E107               	bnz	u3311
  3503   0027A4  0E0A               	movlw	10
  3504   0027A6  5C01               	subwf	?___fltol^0,w,c
  3505   0027A8  B0D8               	btfsc	status,0,c
  3506   0027AA  EFD9  F013         	goto	u3311
  3507   0027AE  EFDB  F013         	goto	u3310
  3508   0027B2                     u3311:
  3509   0027B2  EFEB  F013         	goto	l3023
  3510   0027B6                     u3310:
  3511   0027B6  C0E3  F001         	movff	efgtoa@l,___fltol@f1
  3512   0027BA  C0E4  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3513   0027BE  C0E5  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3514   0027C2  C0E6  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3515   0027C6  EC9D  F01E         	call	___fltol	;wreg free
  3516   0027CA  C001  F0D1         	movff	?___fltol,efgtoa@d
  3517   0027CE  C002  F0D2         	movff	?___fltol+1,efgtoa@d+1
  3518   0027D2  EFF0  F013         	goto	l891
  3519   0027D6                     l3023:
  3520   0027D6  0E00               	movlw	0
  3521   0027D8  0100               	movlb	0	; () banked
  3522   0027DA  6FD2               	movwf	(efgtoa@d+1)& (0+255),b
  3523   0027DC  0E09               	movlw	9
  3524   0027DE  6FD1               	movwf	efgtoa@d& (0+255),b
  3525   0027E0                     l891:
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3528   0027E0  0100               	movlb	0	; () banked
  3529   0027E2  51CE               	movf	efgtoa@pp& (0+255),w,b
  3530   0027E4  A4D8               	btfss	status,2,c
  3531   0027E6  EFF7  F013         	goto	u3321
  3532   0027EA  EFF9  F013         	goto	u3320
  3533   0027EE                     u3321:
  3534   0027EE  EF1D  F014         	goto	l3043
  3535   0027F2                     u3320:
  3536   0027F2                     
  3537                           ; BSR set to: 0
  3538   0027F2  BFC7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3539   0027F4  EF00  F014         	goto	u3330
  3540   0027F8  EFFE  F013         	goto	u3331
  3541   0027FC                     u3331:
  3542   0027FC  EF1D  F014         	goto	l3043
  3543   002800                     u3330:
  3544   002800                     
  3545                           ; BSR set to: 0
  3546                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3547   002800  51E8               	movf	efgtoa@n& (0+255),w,b
  3548   002802  0F6C               	addlw	low _dbuf
  3549   002804  6ED9               	movwf	fsr2l,c
  3550   002806  6ADA               	clrf	fsr2h,c
  3551   002808  0E2E               	movlw	46
  3552   00280A  6EDF               	movwf	indf2,c
  3553   00280C                     
  3554                           ; BSR set to: 0
  3555   00280C  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3556   00280E  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3557   002810                     
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3560   002810  07D7               	decf	efgtoa@w& (0+255),f,b
  3561   002812  A0D8               	btfss	status,0,c
  3562   002814  07D8               	decf	(efgtoa@w+1)& (0+255),f,b
  3563   002816                     
  3564                           ; BSR set to: 0
  3565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3566   002816  0E01               	movlw	1
  3567   002818  6FCE               	movwf	efgtoa@pp& (0+255),b
  3568   00281A  EF1D  F014         	goto	l3043
  3569   00281E                     l3035:
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3573   00281E  51E8               	movf	efgtoa@n& (0+255),w,b
  3574   002820  0F6C               	addlw	low _dbuf
  3575   002822  6ED9               	movwf	fsr2l,c
  3576   002824  6ADA               	clrf	fsr2h,c
  3577   002826  0E30               	movlw	48
  3578   002828  6EDF               	movwf	indf2,c
  3579   00282A                     
  3580                           ; BSR set to: 0
  3581   00282A  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3582   00282C  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3583   00282E                     
  3584                           ; BSR set to: 0
  3585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3586   00282E  07D7               	decf	efgtoa@w& (0+255),f,b
  3587   002830  A0D8               	btfss	status,0,c
  3588   002832  07D8               	decf	(efgtoa@w+1)& (0+255),f,b
  3589   002834                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3592   002834  07CA               	decf	efgtoa@t& (0+255),f,b
  3593   002836  A0D8               	btfss	status,0,c
  3594   002838  07CB               	decf	(efgtoa@t+1)& (0+255),f,b
  3595   00283A                     l3043:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3599   00283A  51CA               	movf	efgtoa@t& (0+255),w,b
  3600   00283C  11CB               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3601   00283E  A4D8               	btfss	status,2,c
  3602   002840  EF24  F014         	goto	u3341
  3603   002844  EF26  F014         	goto	u3340
  3604   002848                     u3341:
  3605   002848  EF0F  F014         	goto	l3035
  3606   00284C                     u3340:
  3607   00284C                     
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3610   00284C  51E8               	movf	efgtoa@n& (0+255),w,b
  3611   00284E  0F6C               	addlw	low _dbuf
  3612   002850  6ED9               	movwf	fsr2l,c
  3613   002852  6ADA               	clrf	fsr2h,c
  3614   002854  51D1               	movf	efgtoa@d& (0+255),w,b
  3615   002856  0F30               	addlw	48
  3616   002858  6EDF               	movwf	indf2,c
  3617   00285A                     
  3618                           ; BSR set to: 0
  3619   00285A  4BE8               	infsnz	efgtoa@n& (0+255),f,b
  3620   00285C  2BE9               	incf	(efgtoa@n+1)& (0+255),f,b
  3621   00285E                     
  3622                           ; BSR set to: 0
  3623                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3624   00285E  07D7               	decf	efgtoa@w& (0+255),f,b
  3625   002860  A0D8               	btfss	status,0,c
  3626   002862  07D8               	decf	(efgtoa@w+1)& (0+255),f,b
  3627   002864                     
  3628                           ; BSR set to: 0
  3629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3630   002864  C0DF  F028         	movff	efgtoa@h,___flsub@b
  3631   002868  C0E0  F029         	movff	efgtoa@h+1,___flsub@b+1
  3632   00286C  C0E1  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3633   002870  C0E2  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3634   002874  C0E3  F013         	movff	efgtoa@l,___flmul@a
  3635   002878  C0E4  F014         	movff	efgtoa@l+1,___flmul@a+1
  3636   00287C  C0E5  F015         	movff	efgtoa@l+2,___flmul@a+2
  3637   002880  C0E6  F016         	movff	efgtoa@l+3,___flmul@a+3
  3638   002884  C0EE  F00F         	movff	efgtoa@u,___flmul@b
  3639   002888  C0EF  F010         	movff	efgtoa@u+1,___flmul@b+1
  3640   00288C  C0F0  F011         	movff	efgtoa@u+2,___flmul@b+2
  3641   002890  C0F1  F012         	movff	efgtoa@u+3,___flmul@b+3
  3642   002894  EC40  F017         	call	___flmul	;wreg free
  3643   002898  C00F  F02C         	movff	?___flmul,___flsub@a
  3644   00289C  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3645   0028A0  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3646   0028A4  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3647   0028A8  EC13  F022         	call	___flsub	;wreg free
  3648   0028AC  C028  F0DF         	movff	?___flsub,efgtoa@h
  3649   0028B0  C029  F0E0         	movff	?___flsub+1,efgtoa@h+1
  3650   0028B4  C02A  F0E1         	movff	?___flsub+2,efgtoa@h+2
  3651   0028B8  C02B  F0E2         	movff	?___flsub+3,efgtoa@h+3
  3652   0028BC                     
  3653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3654   0028BC  C0EE  F001         	movff	efgtoa@u,___fldiv@b
  3655   0028C0  C0EF  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3656   0028C4  C0F0  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3657   0028C8  C0F1  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3658   0028CC  0E00               	movlw	0
  3659   0028CE  6E05               	movwf	___fldiv@a^0,c
  3660   0028D0  0E00               	movlw	0
  3661   0028D2  6E06               	movwf	(___fldiv@a+1)^0,c
  3662   0028D4  0E20               	movlw	32
  3663   0028D6  6E07               	movwf	(___fldiv@a+2)^0,c
  3664   0028D8  0E41               	movlw	65
  3665   0028DA  6E08               	movwf	(___fldiv@a+3)^0,c
  3666   0028DC  EC65  F019         	call	___fldiv	;wreg free
  3667   0028E0  C001  F0EE         	movff	?___fldiv,efgtoa@u
  3668   0028E4  C002  F0EF         	movff	?___fldiv+1,efgtoa@u+1
  3669   0028E8  C003  F0F0         	movff	?___fldiv+2,efgtoa@u+2
  3670   0028EC  C004  F0F1         	movff	?___fldiv+3,efgtoa@u+3
  3671   0028F0                     
  3672                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  3673   0028F0  0100               	movlb	0	; () banked
  3674   0028F2  07C6               	decf	efgtoa@ne& (0+255),f,b
  3675   0028F4  A0D8               	btfss	status,0,c
  3676   0028F6  07C7               	decf	(efgtoa@ne+1)& (0+255),f,b
  3677   0028F8                     
  3678                           ; BSR set to: 0
  3679                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  3680   0028F8  4BDD               	infsnz	efgtoa@i& (0+255),f,b
  3681   0028FA  2BDE               	incf	(efgtoa@i+1)& (0+255),f,b
  3682   0028FC                     l3059:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3686   0028FC  51D3               	movf	efgtoa@m& (0+255),w,b
  3687   0028FE  5DDD               	subwf	efgtoa@i& (0+255),w,b
  3688   002900  51DE               	movf	(efgtoa@i+1)& (0+255),w,b
  3689   002902  0A80               	xorlw	128
  3690   002904  6E3A               	movwf	??_efgtoa^0,c
  3691   002906  51D4               	movf	(efgtoa@m+1)& (0+255),w,b
  3692   002908  0A80               	xorlw	128
  3693   00290A  583A               	subwfb	??_efgtoa^0,w,c
  3694   00290C  B0D8               	btfsc	status,0,c
  3695   00290E  EF8B  F014         	goto	u3351
  3696   002912  EF8D  F014         	goto	u3350
  3697   002916                     u3351:
  3698   002916  EF9B  F014         	goto	l3063
  3699   00291A                     u3350:
  3700   00291A                     
  3701                           ; BSR set to: 0
  3702   00291A  BFE9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3703   00291C  EF99  F014         	goto	u3361
  3704   002920  51E9               	movf	(efgtoa@n+1)& (0+255),w,b
  3705   002922  E109               	bnz	u3360
  3706   002924  0E4B               	movlw	75
  3707   002926  5DE8               	subwf	efgtoa@n& (0+255),w,b
  3708   002928  A0D8               	btfss	status,0,c
  3709   00292A  EF99  F014         	goto	u3361
  3710   00292E  EF9B  F014         	goto	u3360
  3711   002932                     u3361:
  3712   002932  EF9F  F013         	goto	l3019
  3713   002936                     u3360:
  3714   002936                     l3063:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  3718   002936  0E00               	movlw	0
  3719   002938  6FDE               	movwf	(efgtoa@i+1)& (0+255),b
  3720   00293A  0E4F               	movlw	79
  3721   00293C  6FDD               	movwf	efgtoa@i& (0+255),b
  3722   00293E                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  3725   00293E  51DD               	movf	efgtoa@i& (0+255),w,b
  3726   002940  0F6C               	addlw	low _dbuf
  3727   002942  6ED9               	movwf	fsr2l,c
  3728   002944  6ADA               	clrf	fsr2h,c
  3729   002946  6ADF               	clrf	indf2,c
  3730   002948                     
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3733   002948  51E8               	movf	efgtoa@n& (0+255),w,b
  3734   00294A  086C               	sublw	low _dbuf
  3735   00294C  25DD               	addwf	efgtoa@i& (0+255),w,b
  3736   00294E  6E01               	movwf	memcpy@d1^0,c
  3737   002950  0E6C               	movlw	low _dbuf
  3738   002952  6E02               	movwf	memcpy@s1^0,c
  3739   002954  C0E8  F003         	movff	efgtoa@n,memcpy@n
  3740   002958  C0E9  F004         	movff	efgtoa@n+1,memcpy@n+1
  3741   00295C  EC58  F022         	call	_memcpy	;wreg free
  3742   002960                     
  3743                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  3744   002960  0100               	movlb	0	; () banked
  3745   002962  51E8               	movf	efgtoa@n& (0+255),w,b
  3746   002964  5DDD               	subwf	efgtoa@i& (0+255),w,b
  3747   002966  6FE8               	movwf	efgtoa@n& (0+255),b
  3748   002968  51E9               	movf	(efgtoa@n+1)& (0+255),w,b
  3749   00296A  59DE               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3750   00296C  6FE9               	movwf	(efgtoa@n+1)& (0+255),b
  3751   00296E                     
  3752                           ; BSR set to: 0
  3753                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  3754   00296E  51E7               	movf	efgtoa@sign& (0+255),w,b
  3755   002970  A4D8               	btfss	status,2,c
  3756   002972  EFBD  F014         	goto	u3371
  3757   002976  EFC0  F014         	goto	u3370
  3758   00297A                     u3371:
  3759   00297A  0E01               	movlw	1
  3760   00297C  EFC1  F014         	goto	u3380
  3761   002980                     u3370:
  3762   002980  0E00               	movlw	0
  3763   002982                     u3380:
  3764   002982  6FDD               	movwf	efgtoa@i& (0+255),b
  3765   002984  6BDE               	clrf	(efgtoa@i+1)& (0+255),b
  3766   002986                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  3769   002986  51E7               	movf	efgtoa@sign& (0+255),w,b
  3770   002988  B4D8               	btfsc	status,2,c
  3771   00298A  EFC9  F014         	goto	u3391
  3772   00298E  EFCB  F014         	goto	u3390
  3773   002992                     u3391:
  3774   002992  EFD5  F014         	goto	l3077
  3775   002996                     u3390:
  3776   002996                     
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  3779   002996  07E8               	decf	efgtoa@n& (0+255),f,b
  3780   002998  A0D8               	btfss	status,0,c
  3781   00299A  07E9               	decf	(efgtoa@n+1)& (0+255),f,b
  3782   00299C  51E8               	movf	efgtoa@n& (0+255),w,b
  3783   00299E  0F6C               	addlw	low _dbuf
  3784   0029A0  6ED9               	movwf	fsr2l,c
  3785   0029A2  6ADA               	clrf	fsr2h,c
  3786   0029A4  0060  F39F  FFDF   	movff	efgtoa@sign,indf2
  3787   0029AA                     l3077:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  3791   0029AA  51DD               	movf	efgtoa@i& (0+255),w,b
  3792   0029AC  5FD7               	subwf	efgtoa@w& (0+255),f,b
  3793   0029AE  51DE               	movf	(efgtoa@i+1)& (0+255),w,b
  3794   0029B0  5BD8               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3795   0029B2                     
  3796                           ; BSR set to: 0
  3797                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3798   0029B2  C034  F00E         	movff	efgtoa@fp,pad@fp
  3799   0029B6  51E8               	movf	efgtoa@n& (0+255),w,b
  3800   0029B8  0F6C               	addlw	low _dbuf
  3801   0029BA  6E0F               	movwf	pad@buf^0,c
  3802   0029BC  C0D7  F010         	movff	efgtoa@w,pad@p
  3803   0029C0  C0D8  F011         	movff	efgtoa@w+1,pad@p+1
  3804   0029C4  EC92  F021         	call	_pad	;wreg free
  3805   0029C8                     l858:
  3806   0029C8  0012               	return		;funcret
  3807   0029CA                     __end_of_efgtoa:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _strcpy *****************
  3811 ;; Defined at:
  3812 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  dest            1    0[COMRAM] PTR unsigned char 
  3815 ;;		 -> dbuf(80), 
  3816 ;;  src             1    1[COMRAM] PTR const unsigned char 
  3817 ;;		 -> STR_7(4), STR_4(4), 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  d               1    3[COMRAM] PTR unsigned char 
  3820 ;;		 -> dbuf(80), 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    0[COMRAM] PTR unsigned char 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3834 ;;Total ram usage:        4 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_efgtoa
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text7
  3844   00456E                     __ptext7:
  3845                           	callstack 0
  3846   00456E                     _strcpy:
  3847                           	callstack 26
  3848   00456E  C001  F004         	movff	strcpy@dest,strcpy@d
  3849   004572                     l2799:
  3850   004572  2A02               	incf	strcpy@src^0,f,c
  3851   004574  0402               	decf	strcpy@src^0,w,c
  3852   004576  6E03               	movwf	??_strcpy^0,c
  3853   004578  0060  F00F  FFF6   	movff	??_strcpy,tblptrl
  3854   00457E                     	if	1	;There is more than 1 active tblptr byte
  3855   00457E  0E20               	movlw	high __smallconst
  3856   004580  6EF7               	movwf	tblptrh,c
  3857   004582                     	endif
  3858   004582                     	if	0	;tblptru may be non-zero
  3859   004582                     	endif
  3860   004582                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3861   004582  0E00               	movlw	low (__smallconst shr (0+16))
  3862   004584  6EF8               	movwf	tblptru,c
  3863   004586                     	endif
  3864   004586  2A04               	incf	strcpy@d^0,f,c
  3865   004588  0404               	decf	strcpy@d^0,w,c
  3866   00458A  6ED9               	movwf	fsr2l,c
  3867   00458C  6ADA               	clrf	fsr2h,c
  3868   00458E  0008               	tblrd		*
  3869   004590  006F FFD7 FFDF     	movff	tablat,indf2
  3870   004596  50DF               	movf	indf2,w,c
  3871   004598  A4D8               	btfss	status,2,c
  3872   00459A  EFD1  F022         	goto	u2931
  3873   00459E  EFD3  F022         	goto	u2930
  3874   0045A2                     u2931:
  3875   0045A2  EFB9  F022         	goto	l2799
  3876   0045A6                     u2930:
  3877   0045A6  0012               	return		;funcret
  3878   0045A8                     __end_of_strcpy:
  3879                           	callstack 0
  3880                           
  3881 ;; *************** function _pad *****************
  3882 ;; Defined at:
  3883 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  3886 ;;		 -> sprintf@f(11), 
  3887 ;;  buf             1   14[COMRAM] PTR unsigned char 
  3888 ;;		 -> dbuf(80), 
  3889 ;;  p               2   15[COMRAM] int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  i               2   18[COMRAM] int 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3904 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3905 ;;Total ram usage:        7 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 3
  3908 ;; This function calls:
  3909 ;;		_fputc
  3910 ;;		_fputs
  3911 ;; This function is called by:
  3912 ;;		_efgtoa
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text8
  3917   004324                     __ptext8:
  3918                           	callstack 0
  3919   004324                     _pad:
  3920                           	callstack 23
  3921   004324                     
  3922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  3923   004324  BE11               	btfsc	(pad@p+1)^0,7,c
  3924   004326  EF99  F021         	goto	u2840
  3925   00432A  EF97  F021         	goto	u2841
  3926   00432E                     u2841:
  3927   00432E  EF9D  F021         	goto	l843
  3928   004332                     u2840:
  3929   004332                     
  3930                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3931   004332  0E00               	movlw	0
  3932   004334  6E11               	movwf	(pad@p+1)^0,c
  3933   004336  0E00               	movlw	0
  3934   004338  6E10               	movwf	pad@p^0,c
  3935   00433A                     l843:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3938   00433A  0E00               	movlw	0
  3939   00433C  6E14               	movwf	(pad@i+1)^0,c
  3940   00433E  0E00               	movlw	0
  3941   004340  6E13               	movwf	pad@i^0,c
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3944   004342  EFAD  F021         	goto	l2771
  3945   004346                     l2767:
  3946                           
  3947                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3948   004346  0E00               	movlw	0
  3949   004348  6E02               	movwf	(fputc@c+1)^0,c
  3950   00434A  0E20               	movlw	32
  3951   00434C  6E01               	movwf	fputc@c^0,c
  3952   00434E  C00E  F003         	movff	pad@fp,fputc@fp
  3953   004352  EC7D  F020         	call	_fputc	;wreg free
  3954   004356                     
  3955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3956   004356  4A13               	infsnz	pad@i^0,f,c
  3957   004358  2A14               	incf	(pad@i+1)^0,f,c
  3958   00435A                     l2771:
  3959                           
  3960                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3961   00435A  5010               	movf	pad@p^0,w,c
  3962   00435C  5C13               	subwf	pad@i^0,w,c
  3963   00435E  5014               	movf	(pad@i+1)^0,w,c
  3964   004360  0A80               	xorlw	128
  3965   004362  6E12               	movwf	??_pad^0,c
  3966   004364  5011               	movf	(pad@p+1)^0,w,c
  3967   004366  0A80               	xorlw	128
  3968   004368  5812               	subwfb	??_pad^0,w,c
  3969   00436A  A0D8               	btfss	status,0,c
  3970   00436C  EFBA  F021         	goto	u2851
  3971   004370  EFBC  F021         	goto	u2850
  3972   004374                     u2851:
  3973   004374  EFA3  F021         	goto	l2767
  3974   004378                     u2850:
  3975   004378                     
  3976                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3977   004378  C00F  F009         	movff	pad@buf,fputs@s
  3978   00437C  C00E  F00A         	movff	pad@fp,fputs@fp
  3979   004380  EC99  F022         	call	_fputs	;wreg free
  3980   004384  0012               	return		;funcret
  3981   004386                     __end_of_pad:
  3982                           	callstack 0
  3983                           
  3984 ;; *************** function _fputs *****************
  3985 ;; Defined at:
  3986 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  s               1    8[COMRAM] PTR const unsigned char 
  3989 ;;		 -> dbuf(80), 
  3990 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  3991 ;;		 -> sprintf@f(11), 
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;  i               2   11[COMRAM] int 
  3994 ;;  c               1   10[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  2    8[COMRAM] int 
  3997 ;; Registers used:
  3998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4005 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4007 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4008 ;;Total ram usage:        5 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 2
  4011 ;; This function calls:
  4012 ;;		_fputc
  4013 ;; This function is called by:
  4014 ;;		_pad
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text9
  4019   004532                     __ptext9:
  4020                           	callstack 0
  4021   004532                     _fputs:
  4022                           	callstack 23
  4023   004532  0E00               	movlw	0
  4024   004534  6E0D               	movwf	(fputs@i+1)^0,c
  4025   004536  0E00               	movlw	0
  4026   004538  6E0C               	movwf	fputs@i^0,c
  4027   00453A  EFA8  F022         	goto	l2401
  4028   00453E                     l2397:
  4029   00453E  C00B  F001         	movff	fputs@c,fputc@c
  4030   004542  6A02               	clrf	(fputc@c+1)^0,c
  4031   004544  C00A  F003         	movff	fputs@fp,fputc@fp
  4032   004548  EC7D  F020         	call	_fputc	;wreg free
  4033   00454C  4A0C               	infsnz	fputs@i^0,f,c
  4034   00454E  2A0D               	incf	(fputs@i+1)^0,f,c
  4035   004550                     l2401:
  4036   004550  5009               	movf	fputs@s^0,w,c
  4037   004552  240C               	addwf	fputs@i^0,w,c
  4038   004554  6ED9               	movwf	fsr2l,c
  4039   004556  6ADA               	clrf	fsr2h,c
  4040   004558  50DF               	movf	indf2,w,c
  4041   00455A  6E0B               	movwf	fputs@c^0,c
  4042   00455C  500B               	movf	fputs@c^0,w,c
  4043   00455E  A4D8               	btfss	status,2,c
  4044   004560  EFB4  F022         	goto	u2251
  4045   004564  EFB6  F022         	goto	u2250
  4046   004568                     u2251:
  4047   004568  EF9F  F022         	goto	l2397
  4048   00456C                     u2250:
  4049   00456C  0012               	return		;funcret
  4050   00456E                     __end_of_fputs:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _fputc *****************
  4054 ;; Defined at:
  4055 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;  c               2    0[COMRAM] int 
  4058 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4059 ;;		 -> sprintf@f(11), 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2    0[COMRAM] int 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4071 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4073 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4074 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4075 ;;Total ram usage:        8 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 1
  4078 ;; This function calls:
  4079 ;;		_putch
  4080 ;; This function is called by:
  4081 ;;		_pad
  4082 ;;		_vfpfcnvrt
  4083 ;;		_fputs
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text10
  4088   0040FA                     __ptext10:
  4089                           	callstack 0
  4090   0040FA                     _fputc:
  4091                           	callstack 26
  4092   0040FA  5003               	movf	fputc@fp^0,w,c
  4093   0040FC  B4D8               	btfsc	status,2,c
  4094   0040FE  EF83  F020         	goto	u1821
  4095   004102  EF85  F020         	goto	u1820
  4096   004106                     u1821:
  4097   004106  EF8D  F020         	goto	l2191
  4098   00410A                     u1820:
  4099   00410A  5003               	movf	fputc@fp^0,w,c
  4100   00410C  A4D8               	btfss	status,2,c
  4101   00410E  EF8B  F020         	goto	u1831
  4102   004112  EF8D  F020         	goto	u1830
  4103   004116                     u1831:
  4104   004116  EF92  F020         	goto	l2193
  4105   00411A                     u1830:
  4106   00411A                     l2191:
  4107   00411A  5001               	movf	fputc@c^0,w,c
  4108   00411C  EC60  F023         	call	_putch
  4109   004120  EFD2  F020         	goto	l983
  4110   004124                     l2193:
  4111   004124  5003               	movf	fputc@fp^0,w,c
  4112   004126  6ED9               	movwf	fsr2l,c
  4113   004128  6ADA               	clrf	fsr2h,c
  4114   00412A  0E09               	movlw	9
  4115   00412C  26D9               	addwf	fsr2l,f,c
  4116   00412E  50DE               	movf	postinc2,w,c
  4117   004130  10DE               	iorwf	postinc2,w,c
  4118   004132  B4D8               	btfsc	status,2,c
  4119   004134  EF9E  F020         	goto	u1841
  4120   004138  EFA0  F020         	goto	u1840
  4121   00413C                     u1841:
  4122   00413C  EFB9  F020         	goto	l2197
  4123   004140                     u1840:
  4124   004140  5003               	movf	fputc@fp^0,w,c
  4125   004142  6ED9               	movwf	fsr2l,c
  4126   004144  6ADA               	clrf	fsr2h,c
  4127   004146  0E09               	movlw	9
  4128   004148  26D9               	addwf	fsr2l,f,c
  4129   00414A  5003               	movf	fputc@fp^0,w,c
  4130   00414C  6EE1               	movwf	fsr1l,c
  4131   00414E  6AE2               	clrf	fsr1h,c
  4132   004150  0E02               	movlw	2
  4133   004152  26E1               	addwf	fsr1l,f,c
  4134   004154  50DE               	movf	postinc2,w,c
  4135   004156  5CE6               	subwf	postinc1,w,c
  4136   004158  50E6               	movf	postinc1,w,c
  4137   00415A  0A80               	xorlw	128
  4138   00415C  6E08               	movwf	(??_fputc+4)^0,c
  4139   00415E  50DE               	movf	postinc2,w,c
  4140   004160  0A80               	xorlw	128
  4141   004162  5808               	subwfb	(??_fputc+4)^0,w,c
  4142   004164  B0D8               	btfsc	status,0,c
  4143   004166  EFB7  F020         	goto	u1851
  4144   00416A  EFB9  F020         	goto	u1850
  4145   00416E                     u1851:
  4146   00416E  EFD2  F020         	goto	l983
  4147   004172                     u1850:
  4148   004172                     l2197:
  4149   004172  5003               	movf	fputc@fp^0,w,c
  4150   004174  6ED9               	movwf	fsr2l,c
  4151   004176  6ADA               	clrf	fsr2h,c
  4152   004178  0E02               	movlw	2
  4153   00417A  26D9               	addwf	fsr2l,f,c
  4154   00417C  50DF               	movf	indf2,w,c
  4155   00417E  6E04               	movwf	??_fputc^0,c
  4156   004180  5003               	movf	fputc@fp^0,w,c
  4157   004182  6ED9               	movwf	fsr2l,c
  4158   004184  6ADA               	clrf	fsr2h,c
  4159   004186  50DF               	movf	indf2,w,c
  4160   004188  2404               	addwf	??_fputc^0,w,c
  4161   00418A  6ED9               	movwf	fsr2l,c
  4162   00418C  6ADA               	clrf	fsr2h,c
  4163   00418E  0060  F007  FFDF   	movff	fputc@c,indf2
  4164   004194  5003               	movf	fputc@fp^0,w,c
  4165   004196  6ED9               	movwf	fsr2l,c
  4166   004198  6ADA               	clrf	fsr2h,c
  4167   00419A  0E02               	movlw	2
  4168   00419C  26D9               	addwf	fsr2l,f,c
  4169   00419E  2ADE               	incf	postinc2,f,c
  4170   0041A0  0E00               	movlw	0
  4171   0041A2  22DD               	addwfc	postdec2,f,c
  4172   0041A4                     l983:
  4173   0041A4  0012               	return		;funcret
  4174   0041A6                     __end_of_fputc:
  4175                           	callstack 0
  4176                           
  4177 ;; *************** function _putch *****************
  4178 ;; Defined at:
  4179 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  4180 ;; Parameters:    Size  Location     Type
  4181 ;;  c               1    wreg     unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  c               1    0[COMRAM] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4197 ;;Total ram usage:        0 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_fputc
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text11
  4207   0046C0                     __ptext11:
  4208                           	callstack 0
  4209   0046C0                     _putch:
  4210                           	callstack 26
  4211   0046C0  0012               	return		;funcret
  4212   0046C2                     __end_of_putch:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _memcpy *****************
  4216 ;; Defined at:
  4217 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  d1              1    0[COMRAM] PTR void 
  4220 ;;		 -> dbuf(80), 
  4221 ;;  s1              1    1[COMRAM] PTR const void 
  4222 ;;		 -> dbuf(80), 
  4223 ;;  n               2    2[COMRAM] unsigned int 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  s               1    6[COMRAM] PTR const unsigned char 
  4226 ;;		 -> dbuf(80), 
  4227 ;;  d               1    5[COMRAM] PTR unsigned char 
  4228 ;;		 -> dbuf(80), 
  4229 ;;  tmp             1    4[COMRAM] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    0[COMRAM] PTR void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4240 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4242 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;Total ram usage:        7 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_efgtoa
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text12
  4253   0044B0                     __ptext12:
  4254                           	callstack 0
  4255   0044B0                     _memcpy:
  4256                           	callstack 26
  4257   0044B0  C002  F007         	movff	memcpy@s1,memcpy@s
  4258   0044B4  C001  F006         	movff	memcpy@d1,memcpy@d
  4259   0044B8  EF6B  F022         	goto	l2845
  4260   0044BC                     l2839:
  4261   0044BC  5007               	movf	memcpy@s^0,w,c
  4262   0044BE  6ED9               	movwf	fsr2l,c
  4263   0044C0  6ADA               	clrf	fsr2h,c
  4264   0044C2  50DF               	movf	indf2,w,c
  4265   0044C4  6E05               	movwf	memcpy@tmp^0,c
  4266   0044C6  2A07               	incf	memcpy@s^0,f,c
  4267   0044C8  5006               	movf	memcpy@d^0,w,c
  4268   0044CA  6ED9               	movwf	fsr2l,c
  4269   0044CC  6ADA               	clrf	fsr2h,c
  4270   0044CE  0060  F017  FFDF   	movff	memcpy@tmp,indf2
  4271   0044D4  2A06               	incf	memcpy@d^0,f,c
  4272   0044D6                     l2845:
  4273   0044D6  0603               	decf	memcpy@n^0,f,c
  4274   0044D8  A0D8               	btfss	status,0,c
  4275   0044DA  0604               	decf	(memcpy@n+1)^0,f,c
  4276   0044DC  2803               	incf	memcpy@n^0,w,c
  4277   0044DE  E106               	bnz	u3051
  4278   0044E0  2804               	incf	(memcpy@n+1)^0,w,c
  4279   0044E2  A4D8               	btfss	status,2,c
  4280   0044E4  EF76  F022         	goto	u3051
  4281   0044E8  EF78  F022         	goto	u3050
  4282   0044EC                     u3051:
  4283   0044EC  EF5E  F022         	goto	l2839
  4284   0044F0                     u3050:
  4285   0044F0  0012               	return		;funcret
  4286   0044F2                     __end_of_memcpy:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _labs *****************
  4290 ;; Defined at:
  4291 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  a               4    0[COMRAM] long 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  4    0[COMRAM] long 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4308 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;Total ram usage:        8 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_efgtoa
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           	psect	text13
  4319   004386                     __ptext13:
  4320                           	callstack 0
  4321   004386                     _labs:
  4322                           	callstack 26
  4323   004386  BE04               	btfsc	(labs@a+3)^0,7,c
  4324   004388  EFC8  F021         	goto	u2941
  4325   00438C  EFCA  F021         	goto	u2940
  4326   004390                     u2941:
  4327   004390  EFD4  F021         	goto	l2805
  4328   004394                     u2940:
  4329   004394  C001  F001         	movff	labs@a,?_labs
  4330   004398  C002  F002         	movff	labs@a+1,?_labs+1
  4331   00439C  C003  F003         	movff	labs@a+2,?_labs+2
  4332   0043A0  C004  F004         	movff	labs@a+3,?_labs+3
  4333   0043A4  EFED  F021         	goto	l965
  4334   0043A8                     l2805:
  4335   0043A8  C001  F005         	movff	labs@a,??_labs
  4336   0043AC  C002  F006         	movff	labs@a+1,??_labs+1
  4337   0043B0  C003  F007         	movff	labs@a+2,??_labs+2
  4338   0043B4  C004  F008         	movff	labs@a+3,??_labs+3
  4339   0043B8  1E05               	comf	??_labs^0,f,c
  4340   0043BA  1E06               	comf	(??_labs+1)^0,f,c
  4341   0043BC  1E07               	comf	(??_labs+2)^0,f,c
  4342   0043BE  1E08               	comf	(??_labs+3)^0,f,c
  4343   0043C0  2A05               	incf	??_labs^0,f,c
  4344   0043C2  0E00               	movlw	0
  4345   0043C4  2206               	addwfc	(??_labs+1)^0,f,c
  4346   0043C6  2207               	addwfc	(??_labs+2)^0,f,c
  4347   0043C8  2208               	addwfc	(??_labs+3)^0,f,c
  4348   0043CA  C005  F001         	movff	??_labs,?_labs
  4349   0043CE  C006  F002         	movff	??_labs+1,?_labs+1
  4350   0043D2  C007  F003         	movff	??_labs+2,?_labs+2
  4351   0043D6  C008  F004         	movff	??_labs+3,?_labs+3
  4352   0043DA                     l965:
  4353   0043DA  0012               	return		;funcret
  4354   0043DC                     __end_of_labs:
  4355                           	callstack 0
  4356                           
  4357 ;; *************** function _floorf *****************
  4358 ;; Defined at:
  4359 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  x               4   25[COMRAM] float 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  u               4   41[COMRAM] struct .
  4364 ;;  m               4   35[COMRAM] unsigned long 
  4365 ;;  e               2   39[COMRAM] int 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  4   25[COMRAM] float 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4376 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4377 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4378 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4379 ;;Total ram usage:       20 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_efgtoa
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text14
  4389   00365A                     __ptext14:
  4390                           	callstack 0
  4391   00365A                     _floorf:
  4392                           	callstack 26
  4393   00365A  C060  F02A         	movff	floorf@F521,floorf@u
  4394   00365E  C061  F02B         	movff	floorf@F521+1,floorf@u+1
  4395   003662  C062  F02C         	movff	floorf@F521+2,floorf@u+2
  4396   003666  C063  F02D         	movff	floorf@F521+3,floorf@u+3
  4397   00366A  C01A  F02A         	movff	floorf@x,floorf@u
  4398   00366E  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4399   003672  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4400   003676  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4401   00367A  0E81               	movlw	129
  4402   00367C  6E1E               	movwf	??_floorf^0,c
  4403   00367E  0EFF               	movlw	255
  4404   003680  6E1F               	movwf	(??_floorf+1)^0,c
  4405   003682  C02A  F020         	movff	floorf@u,??_floorf+2
  4406   003686  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4407   00368A  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4408   00368E  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4409   003692  0E18               	movlw	24
  4410   003694  EF51  F01B         	goto	u2950
  4411   003698                     u2955:
  4412   003698  90D8               	bcf	status,0,c
  4413   00369A  3223               	rrcf	(??_floorf+5)^0,f,c
  4414   00369C  3222               	rrcf	(??_floorf+4)^0,f,c
  4415   00369E  3221               	rrcf	(??_floorf+3)^0,f,c
  4416   0036A0  3220               	rrcf	(??_floorf+2)^0,f,c
  4417   0036A2                     u2950:
  4418   0036A2  2EE8               	decfsz	wreg,f,c
  4419   0036A4  EF4C  F01B         	goto	u2955
  4420   0036A8  5020               	movf	(??_floorf+2)^0,w,c
  4421   0036AA  241E               	addwf	??_floorf^0,w,c
  4422   0036AC  6E28               	movwf	floorf@e^0,c
  4423   0036AE  0E00               	movlw	0
  4424   0036B0  201F               	addwfc	(??_floorf+1)^0,w,c
  4425   0036B2  6E29               	movwf	(floorf@e+1)^0,c
  4426   0036B4  BE29               	btfsc	(floorf@e+1)^0,7,c
  4427   0036B6  EF66  F01B         	goto	u2961
  4428   0036BA  5029               	movf	(floorf@e+1)^0,w,c
  4429   0036BC  E109               	bnz	u2960
  4430   0036BE  0E17               	movlw	23
  4431   0036C0  5C28               	subwf	floorf@e^0,w,c
  4432   0036C2  A0D8               	btfss	status,0,c
  4433   0036C4  EF66  F01B         	goto	u2961
  4434   0036C8  EF68  F01B         	goto	u2960
  4435   0036CC                     u2961:
  4436   0036CC  EF72  F01B         	goto	l2815
  4437   0036D0                     u2960:
  4438   0036D0                     l2813:
  4439   0036D0  C01A  F01A         	movff	floorf@x,?_floorf
  4440   0036D4  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4441   0036D8  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4442   0036DC  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4443   0036E0  EF35  F01C         	goto	l951
  4444   0036E4                     l2815:
  4445   0036E4  BE29               	btfsc	(floorf@e+1)^0,7,c
  4446   0036E6  EF77  F01B         	goto	u2971
  4447   0036EA  EF79  F01B         	goto	u2970
  4448   0036EE                     u2971:
  4449   0036EE  EFE9  F01B         	goto	l2825
  4450   0036F2                     u2970:
  4451   0036F2  C028  F01E         	movff	floorf@e,??_floorf
  4452   0036F6  0EFF               	movlw	255
  4453   0036F8  6E1F               	movwf	(??_floorf+1)^0,c
  4454   0036FA  0EFF               	movlw	255
  4455   0036FC  6E20               	movwf	(??_floorf+2)^0,c
  4456   0036FE  0E7F               	movlw	127
  4457   003700  6E21               	movwf	(??_floorf+3)^0,c
  4458   003702  0E00               	movlw	0
  4459   003704  6E22               	movwf	(??_floorf+4)^0,c
  4460   003706                     u2985:
  4461   003706  661E               	tstfsz	??_floorf^0,c
  4462   003708  EF88  F01B         	goto	u2986
  4463   00370C  EF90  F01B         	goto	u2987
  4464   003710                     u2986:
  4465   003710  3422               	rlcf	(??_floorf+4)^0,w,c
  4466   003712  3222               	rrcf	(??_floorf+4)^0,f,c
  4467   003714  3221               	rrcf	(??_floorf+3)^0,f,c
  4468   003716  3220               	rrcf	(??_floorf+2)^0,f,c
  4469   003718  321F               	rrcf	(??_floorf+1)^0,f,c
  4470   00371A  2E1E               	decfsz	??_floorf^0,f,c
  4471   00371C  EF83  F01B         	goto	u2985
  4472   003720                     u2987:
  4473   003720  C01F  F024         	movff	??_floorf+1,floorf@m
  4474   003724  C020  F025         	movff	??_floorf+2,floorf@m+1
  4475   003728  C021  F026         	movff	??_floorf+3,floorf@m+2
  4476   00372C  C022  F027         	movff	??_floorf+4,floorf@m+3
  4477   003730  5024               	movf	floorf@m^0,w,c
  4478   003732  142A               	andwf	floorf@u^0,w,c
  4479   003734  6E1E               	movwf	??_floorf^0,c
  4480   003736  5025               	movf	(floorf@m+1)^0,w,c
  4481   003738  142B               	andwf	(floorf@u+1)^0,w,c
  4482   00373A  6E1F               	movwf	(??_floorf+1)^0,c
  4483   00373C  5026               	movf	(floorf@m+2)^0,w,c
  4484   00373E  142C               	andwf	(floorf@u+2)^0,w,c
  4485   003740  6E20               	movwf	(??_floorf+2)^0,c
  4486   003742  5027               	movf	(floorf@m+3)^0,w,c
  4487   003744  142D               	andwf	(floorf@u+3)^0,w,c
  4488   003746  6E21               	movwf	(??_floorf+3)^0,c
  4489   003748  501E               	movf	??_floorf^0,w,c
  4490   00374A  101F               	iorwf	(??_floorf+1)^0,w,c
  4491   00374C  1020               	iorwf	(??_floorf+2)^0,w,c
  4492   00374E  1021               	iorwf	(??_floorf+3)^0,w,c
  4493   003750  A4D8               	btfss	status,2,c
  4494   003752  EFAD  F01B         	goto	u2991
  4495   003756  EFAF  F01B         	goto	u2990
  4496   00375A                     u2991:
  4497   00375A  EFB1  F01B         	goto	l2821
  4498   00375E                     u2990:
  4499   00375E  EF68  F01B         	goto	l2813
  4500   003762                     l2821:
  4501   003762  C02A  F01E         	movff	floorf@u,??_floorf
  4502   003766  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4503   00376A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4504   00376E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4505   003772  0E20               	movlw	32
  4506   003774  EFC1  F01B         	goto	u3000
  4507   003778                     u3005:
  4508   003778  90D8               	bcf	status,0,c
  4509   00377A  3221               	rrcf	(??_floorf+3)^0,f,c
  4510   00377C  3220               	rrcf	(??_floorf+2)^0,f,c
  4511   00377E  321F               	rrcf	(??_floorf+1)^0,f,c
  4512   003780  321E               	rrcf	??_floorf^0,f,c
  4513   003782                     u3000:
  4514   003782  2EE8               	decfsz	wreg,f,c
  4515   003784  EFBC  F01B         	goto	u3005
  4516   003788  501E               	movf	??_floorf^0,w,c
  4517   00378A  101F               	iorwf	(??_floorf+1)^0,w,c
  4518   00378C  1020               	iorwf	(??_floorf+2)^0,w,c
  4519   00378E  1021               	iorwf	(??_floorf+3)^0,w,c
  4520   003790  B4D8               	btfsc	status,2,c
  4521   003792  EFCD  F01B         	goto	u3011
  4522   003796  EFCF  F01B         	goto	u3010
  4523   00379A                     u3011:
  4524   00379A  EFD7  F01B         	goto	l954
  4525   00379E                     u3010:
  4526   00379E  5024               	movf	floorf@m^0,w,c
  4527   0037A0  262A               	addwf	floorf@u^0,f,c
  4528   0037A2  5025               	movf	(floorf@m+1)^0,w,c
  4529   0037A4  222B               	addwfc	(floorf@u+1)^0,f,c
  4530   0037A6  5026               	movf	(floorf@m+2)^0,w,c
  4531   0037A8  222C               	addwfc	(floorf@u+2)^0,f,c
  4532   0037AA  5027               	movf	(floorf@m+3)^0,w,c
  4533   0037AC  222D               	addwfc	(floorf@u+3)^0,f,c
  4534   0037AE                     l954:
  4535   0037AE  1C24               	comf	floorf@m^0,w,c
  4536   0037B0  6E1E               	movwf	??_floorf^0,c
  4537   0037B2  1C25               	comf	(floorf@m+1)^0,w,c
  4538   0037B4  6E1F               	movwf	(??_floorf+1)^0,c
  4539   0037B6  1C26               	comf	(floorf@m+2)^0,w,c
  4540   0037B8  6E20               	movwf	(??_floorf+2)^0,c
  4541   0037BA  1C27               	comf	(floorf@m+3)^0,w,c
  4542   0037BC  6E21               	movwf	(??_floorf+3)^0,c
  4543   0037BE  501E               	movf	??_floorf^0,w,c
  4544   0037C0  162A               	andwf	floorf@u^0,f,c
  4545   0037C2  501F               	movf	(??_floorf+1)^0,w,c
  4546   0037C4  162B               	andwf	(floorf@u+1)^0,f,c
  4547   0037C6  5020               	movf	(??_floorf+2)^0,w,c
  4548   0037C8  162C               	andwf	(floorf@u+2)^0,f,c
  4549   0037CA  5021               	movf	(??_floorf+3)^0,w,c
  4550   0037CC  162D               	andwf	(floorf@u+3)^0,f,c
  4551   0037CE  EF2D  F01C         	goto	l2833
  4552   0037D2                     l2825:
  4553   0037D2  C02A  F01E         	movff	floorf@u,??_floorf
  4554   0037D6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4555   0037DA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4556   0037DE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4557   0037E2  0E20               	movlw	32
  4558   0037E4  EFF9  F01B         	goto	u3020
  4559   0037E8                     u3025:
  4560   0037E8  90D8               	bcf	status,0,c
  4561   0037EA  3221               	rrcf	(??_floorf+3)^0,f,c
  4562   0037EC  3220               	rrcf	(??_floorf+2)^0,f,c
  4563   0037EE  321F               	rrcf	(??_floorf+1)^0,f,c
  4564   0037F0  321E               	rrcf	??_floorf^0,f,c
  4565   0037F2                     u3020:
  4566   0037F2  2EE8               	decfsz	wreg,f,c
  4567   0037F4  EFF4  F01B         	goto	u3025
  4568   0037F8  501E               	movf	??_floorf^0,w,c
  4569   0037FA  101F               	iorwf	(??_floorf+1)^0,w,c
  4570   0037FC  1020               	iorwf	(??_floorf+2)^0,w,c
  4571   0037FE  1021               	iorwf	(??_floorf+3)^0,w,c
  4572   003800  A4D8               	btfss	status,2,c
  4573   003802  EF05  F01C         	goto	u3031
  4574   003806  EF07  F01C         	goto	u3030
  4575   00380A                     u3031:
  4576   00380A  EF11  F01C         	goto	l2829
  4577   00380E                     u3030:
  4578   00380E  0E00               	movlw	0
  4579   003810  6E2A               	movwf	floorf@u^0,c
  4580   003812  0E00               	movlw	0
  4581   003814  6E2B               	movwf	(floorf@u+1)^0,c
  4582   003816  0E00               	movlw	0
  4583   003818  6E2C               	movwf	(floorf@u+2)^0,c
  4584   00381A  0E00               	movlw	0
  4585   00381C  6E2D               	movwf	(floorf@u+3)^0,c
  4586   00381E  EF2D  F01C         	goto	l2833
  4587   003822                     l2829:
  4588   003822  90D8               	bcf	status,0,c
  4589   003824  342A               	rlcf	floorf@u^0,w,c
  4590   003826  6E1E               	movwf	??_floorf^0,c
  4591   003828  342B               	rlcf	(floorf@u+1)^0,w,c
  4592   00382A  6E1F               	movwf	(??_floorf+1)^0,c
  4593   00382C  342C               	rlcf	(floorf@u+2)^0,w,c
  4594   00382E  6E20               	movwf	(??_floorf+2)^0,c
  4595   003830  342D               	rlcf	(floorf@u+3)^0,w,c
  4596   003832  6E21               	movwf	(??_floorf+3)^0,c
  4597   003834  501E               	movf	??_floorf^0,w,c
  4598   003836  101F               	iorwf	(??_floorf+1)^0,w,c
  4599   003838  1020               	iorwf	(??_floorf+2)^0,w,c
  4600   00383A  1021               	iorwf	(??_floorf+3)^0,w,c
  4601   00383C  B4D8               	btfsc	status,2,c
  4602   00383E  EF23  F01C         	goto	u3041
  4603   003842  EF25  F01C         	goto	u3040
  4604   003846                     u3041:
  4605   003846  EF2D  F01C         	goto	l2833
  4606   00384A                     u3040:
  4607   00384A  0E00               	movlw	0
  4608   00384C  6E2A               	movwf	floorf@u^0,c
  4609   00384E  0E00               	movlw	0
  4610   003850  6E2B               	movwf	(floorf@u+1)^0,c
  4611   003852  0E80               	movlw	128
  4612   003854  6E2C               	movwf	(floorf@u+2)^0,c
  4613   003856  0EBF               	movlw	191
  4614   003858  6E2D               	movwf	(floorf@u+3)^0,c
  4615   00385A                     l2833:
  4616   00385A  C02A  F01A         	movff	floorf@u,?_floorf
  4617   00385E  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4618   003862  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4619   003866  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4620   00386A                     l951:
  4621   00386A  0012               	return		;funcret
  4622   00386C                     __end_of_floorf:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function ___fpclassifyf *****************
  4626 ;; Defined at:
  4627 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  x               4    0[COMRAM] float 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  u               4   10[COMRAM] struct .
  4632 ;;  e               2    8[COMRAM] int 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  2    0[COMRAM] int 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4643 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4644 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4645 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4646 ;;Total ram usage:       14 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_efgtoa
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text15
  4656   003F44                     __ptext15:
  4657                           	callstack 0
  4658   003F44                     ___fpclassifyf:
  4659                           	callstack 26
  4660   003F44  C064  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4661   003F48  C065  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4662   003F4C  C066  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4663   003F50  C067  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4664   003F54  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4665   003F58  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4666   003F5C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4667   003F60  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4668   003F64  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4669   003F68  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4670   003F6C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4671   003F70  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4672   003F74  0E18               	movlw	24
  4673   003F76  EFC2  F01F         	goto	u2860
  4674   003F7A                     u2865:
  4675   003F7A  90D8               	bcf	status,0,c
  4676   003F7C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4677   003F7E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4678   003F80  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4679   003F82  3205               	rrcf	??___fpclassifyf^0,f,c
  4680   003F84                     u2860:
  4681   003F84  2EE8               	decfsz	wreg,f,c
  4682   003F86  EFBD  F01F         	goto	u2865
  4683   003F8A  5005               	movf	??___fpclassifyf^0,w,c
  4684   003F8C  6E09               	movwf	___fpclassifyf@e^0,c
  4685   003F8E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4686   003F90  5009               	movf	___fpclassifyf@e^0,w,c
  4687   003F92  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4688   003F94  A4D8               	btfss	status,2,c
  4689   003F96  EFCF  F01F         	goto	u2871
  4690   003F9A  EFD1  F01F         	goto	u2870
  4691   003F9E                     u2871:
  4692   003F9E  EFF1  F01F         	goto	l2787
  4693   003FA2                     u2870:
  4694   003FA2  90D8               	bcf	status,0,c
  4695   003FA4  340B               	rlcf	___fpclassifyf@u^0,w,c
  4696   003FA6  6E05               	movwf	??___fpclassifyf^0,c
  4697   003FA8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4698   003FAA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4699   003FAC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4700   003FAE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4701   003FB0  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4702   003FB2  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4703   003FB4  5005               	movf	??___fpclassifyf^0,w,c
  4704   003FB6  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4705   003FB8  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4706   003FBA  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4707   003FBC  A4D8               	btfss	status,2,c
  4708   003FBE  EFE3  F01F         	goto	u2881
  4709   003FC2  EFE5  F01F         	goto	u2880
  4710   003FC6                     u2881:
  4711   003FC6  EFEB  F01F         	goto	l2783
  4712   003FCA                     u2880:
  4713   003FCA  0E00               	movlw	0
  4714   003FCC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4715   003FCE  0E02               	movlw	2
  4716   003FD0  6E01               	movwf	?___fpclassifyf^0,c
  4717   003FD2  EF20  F020         	goto	l944
  4718   003FD6                     l2783:
  4719   003FD6  0E00               	movlw	0
  4720   003FD8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4721   003FDA  0E03               	movlw	3
  4722   003FDC  6E01               	movwf	?___fpclassifyf^0,c
  4723   003FDE  EF20  F020         	goto	l944
  4724   003FE2                     l2787:
  4725   003FE2  2809               	incf	___fpclassifyf@e^0,w,c
  4726   003FE4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4727   003FE6  A4D8               	btfss	status,2,c
  4728   003FE8  EFF8  F01F         	goto	u2891
  4729   003FEC  EFFA  F01F         	goto	u2890
  4730   003FF0                     u2891:
  4731   003FF0  EF1C  F020         	goto	l2793
  4732   003FF4                     u2890:
  4733   003FF4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4734   003FF8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4735   003FFC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4736   004000  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4737   004004  0E09               	movlw	9
  4738   004006                     u2905:
  4739   004006  90D8               	bcf	status,0,c
  4740   004008  3605               	rlcf	??___fpclassifyf^0,f,c
  4741   00400A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4742   00400C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4743   00400E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4744   004010  2EE8               	decfsz	wreg,f,c
  4745   004012  EF03  F020         	goto	u2905
  4746   004016  5005               	movf	??___fpclassifyf^0,w,c
  4747   004018  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4748   00401A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4749   00401C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4750   00401E  B4D8               	btfsc	status,2,c
  4751   004020  EF14  F020         	goto	u2911
  4752   004024  EF17  F020         	goto	u2910
  4753   004028                     u2911:
  4754   004028  0E01               	movlw	1
  4755   00402A  EF18  F020         	goto	u2920
  4756   00402E                     u2910:
  4757   00402E  0E00               	movlw	0
  4758   004030                     u2920:
  4759   004030  6E01               	movwf	?___fpclassifyf^0,c
  4760   004032  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4761   004034  EF20  F020         	goto	l944
  4762   004038                     l2793:
  4763   004038  0E00               	movlw	0
  4764   00403A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4765   00403C  0E04               	movlw	4
  4766   00403E  6E01               	movwf	?___fpclassifyf^0,c
  4767   004040                     l944:
  4768   004040  0012               	return		;funcret
  4769   004042                     __end_of___fpclassifyf:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function ___fltol *****************
  4773 ;; Defined at:
  4774 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  f1              4    0[COMRAM] int 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  exp1            1    9[COMRAM] unsigned char 
  4779 ;;  sign1           1    8[COMRAM] unsigned char 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  4    0[COMRAM] long 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4790 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4792 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4793 ;;Total ram usage:       10 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_efgtoa
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text16
  4803   003D3A                     __ptext16:
  4804                           	callstack 0
  4805   003D3A                     ___fltol:
  4806                           	callstack 26
  4807   003D3A  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4808   003D3C  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4809   003D3E  6E0A               	movwf	___fltol@exp1^0,c
  4810   003D40  500A               	movf	___fltol@exp1^0,w,c
  4811   003D42  A4D8               	btfss	status,2,c
  4812   003D44  EFA6  F01E         	goto	u2771
  4813   003D48  EFA8  F01E         	goto	u2770
  4814   003D4C                     u2771:
  4815   003D4C  EFB2  F01E         	goto	l2725
  4816   003D50                     u2770:
  4817   003D50                     l2721:
  4818   003D50  0E00               	movlw	0
  4819   003D52  6E01               	movwf	?___fltol^0,c
  4820   003D54  0E00               	movlw	0
  4821   003D56  6E02               	movwf	(?___fltol+1)^0,c
  4822   003D58  0E00               	movlw	0
  4823   003D5A  6E03               	movwf	(?___fltol+2)^0,c
  4824   003D5C  0E00               	movlw	0
  4825   003D5E  6E04               	movwf	(?___fltol+3)^0,c
  4826   003D60  EF1F  F01F         	goto	l435
  4827   003D64                     l2725:
  4828   003D64  C001  F005         	movff	___fltol@f1,??___fltol
  4829   003D68  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4830   003D6C  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4831   003D70  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4832   003D74  0E20               	movlw	32
  4833   003D76  EFC2  F01E         	goto	u2780
  4834   003D7A                     u2785:
  4835   003D7A  90D8               	bcf	status,0,c
  4836   003D7C  3208               	rrcf	(??___fltol+3)^0,f,c
  4837   003D7E  3207               	rrcf	(??___fltol+2)^0,f,c
  4838   003D80  3206               	rrcf	(??___fltol+1)^0,f,c
  4839   003D82  3205               	rrcf	??___fltol^0,f,c
  4840   003D84                     u2780:
  4841   003D84  2EE8               	decfsz	wreg,f,c
  4842   003D86  EFBD  F01E         	goto	u2785
  4843   003D8A  5005               	movf	??___fltol^0,w,c
  4844   003D8C  6E09               	movwf	___fltol@sign1^0,c
  4845   003D8E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4846   003D90  0EFF               	movlw	255
  4847   003D92  1601               	andwf	___fltol@f1^0,f,c
  4848   003D94  0EFF               	movlw	255
  4849   003D96  1602               	andwf	(___fltol@f1+1)^0,f,c
  4850   003D98  0EFF               	movlw	255
  4851   003D9A  1603               	andwf	(___fltol@f1+2)^0,f,c
  4852   003D9C  0E00               	movlw	0
  4853   003D9E  1604               	andwf	(___fltol@f1+3)^0,f,c
  4854   003DA0  0E96               	movlw	150
  4855   003DA2  5E0A               	subwf	___fltol@exp1^0,f,c
  4856   003DA4  BE0A               	btfsc	___fltol@exp1^0,7,c
  4857   003DA6  EFD9  F01E         	goto	u2790
  4858   003DAA  EFD7  F01E         	goto	u2791
  4859   003DAE                     u2791:
  4860   003DAE  EFEF  F01E         	goto	l2745
  4861   003DB2                     u2790:
  4862   003DB2  500A               	movf	___fltol@exp1^0,w,c
  4863   003DB4  0A80               	xorlw	128
  4864   003DB6  0F97               	addlw	151
  4865   003DB8  B0D8               	btfsc	status,0,c
  4866   003DBA  EFE1  F01E         	goto	u2801
  4867   003DBE  EFE3  F01E         	goto	u2800
  4868   003DC2                     u2801:
  4869   003DC2  EFE5  F01E         	goto	l2741
  4870   003DC6                     u2800:
  4871   003DC6  EFA8  F01E         	goto	l2721
  4872   003DCA                     l2741:
  4873   003DCA  90D8               	bcf	status,0,c
  4874   003DCC  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4875   003DCE  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4876   003DD0  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4877   003DD2  3201               	rrcf	___fltol@f1^0,f,c
  4878   003DD4  3E0A               	incfsz	___fltol@exp1^0,f,c
  4879   003DD6  EFE5  F01E         	goto	l2741
  4880   003DDA  EF07  F01F         	goto	l2755
  4881   003DDE                     l2745:
  4882   003DDE  0E1F               	movlw	31
  4883   003DE0  640A               	cpfsgt	___fltol@exp1^0,c
  4884   003DE2  EFF5  F01E         	goto	u2811
  4885   003DE6  EFF7  F01E         	goto	u2810
  4886   003DEA                     u2811:
  4887   003DEA  EFFF  F01E         	goto	l2753
  4888   003DEE                     u2810:
  4889   003DEE  EFA8  F01E         	goto	l2721
  4890   003DF2                     l2751:
  4891   003DF2  90D8               	bcf	status,0,c
  4892   003DF4  3601               	rlcf	___fltol@f1^0,f,c
  4893   003DF6  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4894   003DF8  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4895   003DFA  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4896   003DFC  060A               	decf	___fltol@exp1^0,f,c
  4897   003DFE                     l2753:
  4898   003DFE  500A               	movf	___fltol@exp1^0,w,c
  4899   003E00  A4D8               	btfss	status,2,c
  4900   003E02  EF05  F01F         	goto	u2821
  4901   003E06  EF07  F01F         	goto	u2820
  4902   003E0A                     u2821:
  4903   003E0A  EFF9  F01E         	goto	l2751
  4904   003E0E                     u2820:
  4905   003E0E                     l2755:
  4906   003E0E  5009               	movf	___fltol@sign1^0,w,c
  4907   003E10  B4D8               	btfsc	status,2,c
  4908   003E12  EF0D  F01F         	goto	u2831
  4909   003E16  EF0F  F01F         	goto	u2830
  4910   003E1A                     u2831:
  4911   003E1A  EF17  F01F         	goto	l2759
  4912   003E1E                     u2830:
  4913   003E1E  1E04               	comf	(___fltol@f1+3)^0,f,c
  4914   003E20  1E03               	comf	(___fltol@f1+2)^0,f,c
  4915   003E22  1E02               	comf	(___fltol@f1+1)^0,f,c
  4916   003E24  6C01               	negf	___fltol@f1^0,c
  4917   003E26  0E00               	movlw	0
  4918   003E28  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4919   003E2A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4920   003E2C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4921   003E2E                     l2759:
  4922   003E2E  C001  F001         	movff	___fltol@f1,?___fltol
  4923   003E32  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4924   003E36  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4925   003E3A  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4926   003E3E                     l435:
  4927   003E3E  0012               	return		;funcret
  4928   003E40                     __end_of___fltol:
  4929                           	callstack 0
  4930                           
  4931 ;; *************** function ___flsub *****************
  4932 ;; Defined at:
  4933 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  b               4   39[COMRAM] long 
  4936 ;;  a               4   43[COMRAM] long 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  4   39[COMRAM] long 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4948 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4951 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4952 ;;Total ram usage:        8 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 1
  4955 ;; This function calls:
  4956 ;;		___fladd
  4957 ;; This function is called by:
  4958 ;;		_efgtoa
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text17
  4963   004426                     __ptext17:
  4964                           	callstack 0
  4965   004426                     ___flsub:
  4966                           	callstack 25
  4967   004426  0E00               	movlw	0
  4968   004428  1A2C               	xorwf	___flsub@a^0,f,c
  4969   00442A  0E00               	movlw	0
  4970   00442C  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4971   00442E  0E00               	movlw	0
  4972   004430  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4973   004432  0E80               	movlw	128
  4974   004434  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4975   004436  C028  F001         	movff	___flsub@b,___fladd@b
  4976   00443A  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4977   00443E  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4978   004442  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4979   004446  C02C  F005         	movff	___flsub@a,___fladd@a
  4980   00444A  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4981   00444E  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4982   004452  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4983   004456  ECE5  F014         	call	___fladd	;wreg free
  4984   00445A  C001  F028         	movff	?___fladd,?___flsub
  4985   00445E  C002  F029         	movff	?___fladd+1,?___flsub+1
  4986   004462  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4987   004466  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4988   00446A  0012               	return		;funcret
  4989   00446C                     __end_of___flsub:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function ___fladd *****************
  4993 ;; Defined at:
  4994 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  b               4    0[COMRAM] long 
  4997 ;;  a               4    4[COMRAM] long 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;  grs             1   15[COMRAM] unsigned char 
  5000 ;;  bexp            1   14[COMRAM] unsigned char 
  5001 ;;  aexp            1   13[COMRAM] unsigned char 
  5002 ;;  signs           1   12[COMRAM] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  4    0[COMRAM] unsigned char 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5012 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5013 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5014 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5015 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5016 ;;Total ram usage:       16 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		___flsub
  5022 ;;		_efgtoa
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text18
  5027   0029CA                     __ptext18:
  5028                           	callstack 0
  5029   0029CA                     ___fladd:
  5030                           	callstack 25
  5031   0029CA  5004               	movf	(___fladd@b+3)^0,w,c
  5032   0029CC  0B80               	andlw	128
  5033   0029CE  6E0D               	movwf	___fladd@signs^0,c
  5034   0029D0  5004               	movf	(___fladd@b+3)^0,w,c
  5035   0029D2  2404               	addwf	(___fladd@b+3)^0,w,c
  5036   0029D4  6E0F               	movwf	___fladd@bexp^0,c
  5037   0029D6  AE03               	btfss	(___fladd@b+2)^0,7,c
  5038   0029D8  EFF0  F014         	goto	u1861
  5039   0029DC  EFF2  F014         	goto	u1860
  5040   0029E0                     u1861:
  5041   0029E0  EFF3  F014         	goto	l2207
  5042   0029E4                     u1860:
  5043   0029E4  800F               	bsf	___fladd@bexp^0,0,c
  5044   0029E6                     l2207:
  5045   0029E6  500F               	movf	___fladd@bexp^0,w,c
  5046   0029E8  B4D8               	btfsc	status,2,c
  5047   0029EA  EFF9  F014         	goto	u1871
  5048   0029EE  EFFB  F014         	goto	u1870
  5049   0029F2                     u1871:
  5050   0029F2  EF0F  F015         	goto	l2217
  5051   0029F6                     u1870:
  5052   0029F6  280F               	incf	___fladd@bexp^0,w,c
  5053   0029F8  A4D8               	btfss	status,2,c
  5054   0029FA  EF01  F015         	goto	u1881
  5055   0029FE  EF03  F015         	goto	u1880
  5056   002A02                     u1881:
  5057   002A02  EF0B  F015         	goto	l2213
  5058   002A06                     u1880:
  5059   002A06  0E00               	movlw	0
  5060   002A08  6E01               	movwf	___fladd@b^0,c
  5061   002A0A  0E00               	movlw	0
  5062   002A0C  6E02               	movwf	(___fladd@b+1)^0,c
  5063   002A0E  0E00               	movlw	0
  5064   002A10  6E03               	movwf	(___fladd@b+2)^0,c
  5065   002A12  0E00               	movlw	0
  5066   002A14  6E04               	movwf	(___fladd@b+3)^0,c
  5067   002A16                     l2213:
  5068   002A16  8E03               	bsf	(___fladd@b+2)^0,7,c
  5069   002A18  6A04               	clrf	(___fladd@b+3)^0,c
  5070   002A1A  EF17  F015         	goto	l2219
  5071   002A1E                     l2217:
  5072   002A1E  0E00               	movlw	0
  5073   002A20  6E01               	movwf	___fladd@b^0,c
  5074   002A22  0E00               	movlw	0
  5075   002A24  6E02               	movwf	(___fladd@b+1)^0,c
  5076   002A26  0E00               	movlw	0
  5077   002A28  6E03               	movwf	(___fladd@b+2)^0,c
  5078   002A2A  0E00               	movlw	0
  5079   002A2C  6E04               	movwf	(___fladd@b+3)^0,c
  5080   002A2E                     l2219:
  5081   002A2E  5008               	movf	(___fladd@a+3)^0,w,c
  5082   002A30  0B80               	andlw	128
  5083   002A32  6E0E               	movwf	___fladd@aexp^0,c
  5084   002A34  500D               	movf	___fladd@signs^0,w,c
  5085   002A36  180E               	xorwf	___fladd@aexp^0,w,c
  5086   002A38  B4D8               	btfsc	status,2,c
  5087   002A3A  EF21  F015         	goto	u1891
  5088   002A3E  EF23  F015         	goto	u1890
  5089   002A42                     u1891:
  5090   002A42  EF24  F015         	goto	l2225
  5091   002A46                     u1890:
  5092   002A46  8C0D               	bsf	___fladd@signs^0,6,c
  5093   002A48                     l2225:
  5094   002A48  5008               	movf	(___fladd@a+3)^0,w,c
  5095   002A4A  2408               	addwf	(___fladd@a+3)^0,w,c
  5096   002A4C  6E0E               	movwf	___fladd@aexp^0,c
  5097   002A4E  AE07               	btfss	(___fladd@a+2)^0,7,c
  5098   002A50  EF2C  F015         	goto	u1901
  5099   002A54  EF2E  F015         	goto	u1900
  5100   002A58                     u1901:
  5101   002A58  EF2F  F015         	goto	l2231
  5102   002A5C                     u1900:
  5103   002A5C  800E               	bsf	___fladd@aexp^0,0,c
  5104   002A5E                     l2231:
  5105   002A5E  500E               	movf	___fladd@aexp^0,w,c
  5106   002A60  B4D8               	btfsc	status,2,c
  5107   002A62  EF35  F015         	goto	u1911
  5108   002A66  EF37  F015         	goto	u1910
  5109   002A6A                     u1911:
  5110   002A6A  EF4B  F015         	goto	l2241
  5111   002A6E                     u1910:
  5112   002A6E  280E               	incf	___fladd@aexp^0,w,c
  5113   002A70  A4D8               	btfss	status,2,c
  5114   002A72  EF3D  F015         	goto	u1921
  5115   002A76  EF3F  F015         	goto	u1920
  5116   002A7A                     u1921:
  5117   002A7A  EF47  F015         	goto	l2237
  5118   002A7E                     u1920:
  5119   002A7E  0E00               	movlw	0
  5120   002A80  6E05               	movwf	___fladd@a^0,c
  5121   002A82  0E00               	movlw	0
  5122   002A84  6E06               	movwf	(___fladd@a+1)^0,c
  5123   002A86  0E00               	movlw	0
  5124   002A88  6E07               	movwf	(___fladd@a+2)^0,c
  5125   002A8A  0E00               	movlw	0
  5126   002A8C  6E08               	movwf	(___fladd@a+3)^0,c
  5127   002A8E                     l2237:
  5128   002A8E  8E07               	bsf	(___fladd@a+2)^0,7,c
  5129   002A90  6A08               	clrf	(___fladd@a+3)^0,c
  5130   002A92  EF53  F015         	goto	l2243
  5131   002A96                     l2241:
  5132   002A96  0E00               	movlw	0
  5133   002A98  6E05               	movwf	___fladd@a^0,c
  5134   002A9A  0E00               	movlw	0
  5135   002A9C  6E06               	movwf	(___fladd@a+1)^0,c
  5136   002A9E  0E00               	movlw	0
  5137   002AA0  6E07               	movwf	(___fladd@a+2)^0,c
  5138   002AA2  0E00               	movlw	0
  5139   002AA4  6E08               	movwf	(___fladd@a+3)^0,c
  5140   002AA6                     l2243:
  5141   002AA6  500F               	movf	___fladd@bexp^0,w,c
  5142   002AA8  5C0E               	subwf	___fladd@aexp^0,w,c
  5143   002AAA  B0D8               	btfsc	status,0,c
  5144   002AAC  EF5A  F015         	goto	u1931
  5145   002AB0  EF5C  F015         	goto	u1930
  5146   002AB4                     u1931:
  5147   002AB4  EF83  F015         	goto	l2279
  5148   002AB8                     u1930:
  5149   002AB8  AC0D               	btfss	___fladd@signs^0,6,c
  5150   002ABA  EF61  F015         	goto	u1941
  5151   002ABE  EF63  F015         	goto	u1940
  5152   002AC2                     u1941:
  5153   002AC2  EF65  F015         	goto	l2249
  5154   002AC6                     u1940:
  5155   002AC6  0E80               	movlw	128
  5156   002AC8  1A0D               	xorwf	___fladd@signs^0,f,c
  5157   002ACA                     l2249:
  5158   002ACA  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5159   002ACE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5160   002AD2  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5161   002AD6  C001  F010         	movff	___fladd@b,___fladd@grs
  5162   002ADA  C005  F001         	movff	___fladd@a,___fladd@b
  5163   002ADE  C010  F005         	movff	___fladd@grs,___fladd@a
  5164   002AE2  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5165   002AE6  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5166   002AEA  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5167   002AEE  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5168   002AF2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5169   002AF6  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5170   002AFA  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5171   002AFE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5172   002B02  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5173   002B06                     l2279:
  5174   002B06  6A10               	clrf	___fladd@grs^0,c
  5175   002B08  500F               	movf	___fladd@bexp^0,w,c
  5176   002B0A  C00E  F009         	movff	___fladd@aexp,??___fladd
  5177   002B0E  6A0A               	clrf	(??___fladd+1)^0,c
  5178   002B10  5E09               	subwf	??___fladd^0,f,c
  5179   002B12  0E00               	movlw	0
  5180   002B14  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5181   002B16  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5182   002B18  EF97  F015         	goto	u1951
  5183   002B1C  500A               	movf	(??___fladd+1)^0,w,c
  5184   002B1E  E109               	bnz	u1950
  5185   002B20  0E1A               	movlw	26
  5186   002B22  5C09               	subwf	??___fladd^0,w,c
  5187   002B24  A0D8               	btfss	status,0,c
  5188   002B26  EF97  F015         	goto	u1951
  5189   002B2A  EF99  F015         	goto	u1950
  5190   002B2E                     u1951:
  5191   002B2E  EFD0  F015         	goto	l667
  5192   002B32                     u1950:
  5193   002B32  5001               	movf	___fladd@b^0,w,c
  5194   002B34  1002               	iorwf	(___fladd@b+1)^0,w,c
  5195   002B36  1003               	iorwf	(___fladd@b+2)^0,w,c
  5196   002B38  1004               	iorwf	(___fladd@b+3)^0,w,c
  5197   002B3A  A4D8               	btfss	status,2,c
  5198   002B3C  EFA2  F015         	goto	u1961
  5199   002B40  EFA5  F015         	goto	u1960
  5200   002B44                     u1961:
  5201   002B44  0E01               	movlw	1
  5202   002B46  EFA6  F015         	goto	u1970
  5203   002B4A                     u1960:
  5204   002B4A  0E00               	movlw	0
  5205   002B4C                     u1970:
  5206   002B4C  6E10               	movwf	___fladd@grs^0,c
  5207   002B4E  0E00               	movlw	0
  5208   002B50  6E01               	movwf	___fladd@b^0,c
  5209   002B52  0E00               	movlw	0
  5210   002B54  6E02               	movwf	(___fladd@b+1)^0,c
  5211   002B56  0E00               	movlw	0
  5212   002B58  6E03               	movwf	(___fladd@b+2)^0,c
  5213   002B5A  0E00               	movlw	0
  5214   002B5C  6E04               	movwf	(___fladd@b+3)^0,c
  5215   002B5E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5216   002B62  EFD9  F015         	goto	l666
  5217   002B66                     l668:
  5218   002B66  A010               	btfss	___fladd@grs^0,0,c
  5219   002B68  EFB8  F015         	goto	u1981
  5220   002B6C  EFBA  F015         	goto	u1980
  5221   002B70                     u1981:
  5222   002B70  EFC0  F015         	goto	l2289
  5223   002B74                     u1980:
  5224   002B74  90D8               	bcf	status,0,c
  5225   002B76  3010               	rrcf	___fladd@grs^0,w,c
  5226   002B78  0901               	iorlw	1
  5227   002B7A  6E10               	movwf	___fladd@grs^0,c
  5228   002B7C  EFC2  F015         	goto	l2291
  5229   002B80                     l2289:
  5230   002B80  90D8               	bcf	status,0,c
  5231   002B82  3210               	rrcf	___fladd@grs^0,f,c
  5232   002B84                     l2291:
  5233   002B84  A001               	btfss	___fladd@b^0,0,c
  5234   002B86  EFC7  F015         	goto	u1991
  5235   002B8A  EFC9  F015         	goto	u1990
  5236   002B8E                     u1991:
  5237   002B8E  EFCA  F015         	goto	l2295
  5238   002B92                     u1990:
  5239   002B92  8E10               	bsf	___fladd@grs^0,7,c
  5240   002B94                     l2295:
  5241   002B94  3404               	rlcf	(___fladd@b+3)^0,w,c
  5242   002B96  3204               	rrcf	(___fladd@b+3)^0,f,c
  5243   002B98  3203               	rrcf	(___fladd@b+2)^0,f,c
  5244   002B9A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5245   002B9C  3201               	rrcf	___fladd@b^0,f,c
  5246   002B9E  2A0F               	incf	___fladd@bexp^0,f,c
  5247   002BA0                     l667:
  5248   002BA0  500E               	movf	___fladd@aexp^0,w,c
  5249   002BA2  5C0F               	subwf	___fladd@bexp^0,w,c
  5250   002BA4  A0D8               	btfss	status,0,c
  5251   002BA6  EFD7  F015         	goto	u2001
  5252   002BAA  EFD9  F015         	goto	u2000
  5253   002BAE                     u2001:
  5254   002BAE  EFB3  F015         	goto	l668
  5255   002BB2                     u2000:
  5256   002BB2                     l666:
  5257   002BB2  BC0D               	btfsc	___fladd@signs^0,6,c
  5258   002BB4  EFDE  F015         	goto	u2011
  5259   002BB8  EFE0  F015         	goto	u2010
  5260   002BBC                     u2011:
  5261   002BBC  EF20  F016         	goto	l2323
  5262   002BC0                     u2010:
  5263   002BC0  500F               	movf	___fladd@bexp^0,w,c
  5264   002BC2  A4D8               	btfss	status,2,c
  5265   002BC4  EFE6  F015         	goto	u2021
  5266   002BC8  EFE8  F015         	goto	u2020
  5267   002BCC                     u2021:
  5268   002BCC  EFF2  F015         	goto	l2305
  5269   002BD0                     u2020:
  5270   002BD0  0E00               	movlw	0
  5271   002BD2  6E01               	movwf	?___fladd^0,c
  5272   002BD4  0E00               	movlw	0
  5273   002BD6  6E02               	movwf	(?___fladd+1)^0,c
  5274   002BD8  0E00               	movlw	0
  5275   002BDA  6E03               	movwf	(?___fladd+2)^0,c
  5276   002BDC  0E00               	movlw	0
  5277   002BDE  6E04               	movwf	(?___fladd+3)^0,c
  5278   002BE0  EF3F  F017         	goto	l675
  5279   002BE4                     l2305:
  5280   002BE4  5005               	movf	___fladd@a^0,w,c
  5281   002BE6  2601               	addwf	___fladd@b^0,f,c
  5282   002BE8  5006               	movf	(___fladd@a+1)^0,w,c
  5283   002BEA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5284   002BEC  5007               	movf	(___fladd@a+2)^0,w,c
  5285   002BEE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5286   002BF0  5008               	movf	(___fladd@a+3)^0,w,c
  5287   002BF2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5288   002BF4  A004               	btfss	(___fladd@b+3)^0,0,c
  5289   002BF6  EFFF  F015         	goto	u2031
  5290   002BFA  EF01  F016         	goto	u2030
  5291   002BFE                     u2031:
  5292   002BFE  EFAD  F016         	goto	l680
  5293   002C02                     u2030:
  5294   002C02  A010               	btfss	___fladd@grs^0,0,c
  5295   002C04  EF06  F016         	goto	u2041
  5296   002C08  EF08  F016         	goto	u2040
  5297   002C0C                     u2041:
  5298   002C0C  EF0E  F016         	goto	l2313
  5299   002C10                     u2040:
  5300   002C10  90D8               	bcf	status,0,c
  5301   002C12  3010               	rrcf	___fladd@grs^0,w,c
  5302   002C14  0901               	iorlw	1
  5303   002C16  6E10               	movwf	___fladd@grs^0,c
  5304   002C18  EF10  F016         	goto	l2315
  5305   002C1C                     l2313:
  5306   002C1C  90D8               	bcf	status,0,c
  5307   002C1E  3210               	rrcf	___fladd@grs^0,f,c
  5308   002C20                     l2315:
  5309   002C20  A001               	btfss	___fladd@b^0,0,c
  5310   002C22  EF15  F016         	goto	u2051
  5311   002C26  EF17  F016         	goto	u2050
  5312   002C2A                     u2051:
  5313   002C2A  EF18  F016         	goto	l2319
  5314   002C2E                     u2050:
  5315   002C2E  8E10               	bsf	___fladd@grs^0,7,c
  5316   002C30                     l2319:
  5317   002C30  3404               	rlcf	(___fladd@b+3)^0,w,c
  5318   002C32  3204               	rrcf	(___fladd@b+3)^0,f,c
  5319   002C34  3203               	rrcf	(___fladd@b+2)^0,f,c
  5320   002C36  3202               	rrcf	(___fladd@b+1)^0,f,c
  5321   002C38  3201               	rrcf	___fladd@b^0,f,c
  5322   002C3A  2A0F               	incf	___fladd@bexp^0,f,c
  5323   002C3C  EFAD  F016         	goto	l680
  5324   002C40                     l2323:
  5325   002C40  5005               	movf	___fladd@a^0,w,c
  5326   002C42  5C01               	subwf	___fladd@b^0,w,c
  5327   002C44  5006               	movf	(___fladd@a+1)^0,w,c
  5328   002C46  5802               	subwfb	(___fladd@b+1)^0,w,c
  5329   002C48  5007               	movf	(___fladd@a+2)^0,w,c
  5330   002C4A  5803               	subwfb	(___fladd@b+2)^0,w,c
  5331   002C4C  5004               	movf	(___fladd@b+3)^0,w,c
  5332   002C4E  0A80               	xorlw	128
  5333   002C50  6E09               	movwf	??___fladd^0,c
  5334   002C52  5008               	movf	(___fladd@a+3)^0,w,c
  5335   002C54  0A80               	xorlw	128
  5336   002C56  5809               	subwfb	??___fladd^0,w,c
  5337   002C58  B0D8               	btfsc	status,0,c
  5338   002C5A  EF31  F016         	goto	u2061
  5339   002C5E  EF33  F016         	goto	u2060
  5340   002C62                     u2061:
  5341   002C62  EF5E  F016         	goto	l2333
  5342   002C66                     u2060:
  5343   002C66  5001               	movf	___fladd@b^0,w,c
  5344   002C68  5C05               	subwf	___fladd@a^0,w,c
  5345   002C6A  6E09               	movwf	??___fladd^0,c
  5346   002C6C  5002               	movf	(___fladd@b+1)^0,w,c
  5347   002C6E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5348   002C70  6E0A               	movwf	(??___fladd+1)^0,c
  5349   002C72  5003               	movf	(___fladd@b+2)^0,w,c
  5350   002C74  5807               	subwfb	(___fladd@a+2)^0,w,c
  5351   002C76  6E0B               	movwf	(??___fladd+2)^0,c
  5352   002C78  5004               	movf	(___fladd@b+3)^0,w,c
  5353   002C7A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5354   002C7C  6E0C               	movwf	(??___fladd+3)^0,c
  5355   002C7E  0EFF               	movlw	255
  5356   002C80  2409               	addwf	??___fladd^0,w,c
  5357   002C82  6E01               	movwf	___fladd@b^0,c
  5358   002C84  0EFF               	movlw	255
  5359   002C86  200A               	addwfc	(??___fladd+1)^0,w,c
  5360   002C88  6E02               	movwf	(___fladd@b+1)^0,c
  5361   002C8A  0EFF               	movlw	255
  5362   002C8C  200B               	addwfc	(??___fladd+2)^0,w,c
  5363   002C8E  6E03               	movwf	(___fladd@b+2)^0,c
  5364   002C90  0EFF               	movlw	255
  5365   002C92  200C               	addwfc	(??___fladd+3)^0,w,c
  5366   002C94  6E04               	movwf	(___fladd@b+3)^0,c
  5367   002C96  0E80               	movlw	128
  5368   002C98  1A0D               	xorwf	___fladd@signs^0,f,c
  5369   002C9A  6C10               	negf	___fladd@grs^0,c
  5370   002C9C  5010               	movf	___fladd@grs^0,w,c
  5371   002C9E  A4D8               	btfss	status,2,c
  5372   002CA0  EF54  F016         	goto	u2071
  5373   002CA4  EF56  F016         	goto	u2070
  5374   002CA8                     u2071:
  5375   002CA8  EF66  F016         	goto	l683
  5376   002CAC                     u2070:
  5377   002CAC  0E01               	movlw	1
  5378   002CAE  2601               	addwf	___fladd@b^0,f,c
  5379   002CB0  0E00               	movlw	0
  5380   002CB2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5381   002CB4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5382   002CB6  2204               	addwfc	(___fladd@b+3)^0,f,c
  5383   002CB8  EF66  F016         	goto	l683
  5384   002CBC                     l2333:
  5385   002CBC  5005               	movf	___fladd@a^0,w,c
  5386   002CBE  5E01               	subwf	___fladd@b^0,f,c
  5387   002CC0  5006               	movf	(___fladd@a+1)^0,w,c
  5388   002CC2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5389   002CC4  5007               	movf	(___fladd@a+2)^0,w,c
  5390   002CC6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5391   002CC8  5008               	movf	(___fladd@a+3)^0,w,c
  5392   002CCA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5393   002CCC                     l683:
  5394   002CCC  5001               	movf	___fladd@b^0,w,c
  5395   002CCE  1002               	iorwf	(___fladd@b+1)^0,w,c
  5396   002CD0  1003               	iorwf	(___fladd@b+2)^0,w,c
  5397   002CD2  1004               	iorwf	(___fladd@b+3)^0,w,c
  5398   002CD4  A4D8               	btfss	status,2,c
  5399   002CD6  EF6F  F016         	goto	u2081
  5400   002CDA  EF71  F016         	goto	u2080
  5401   002CDE                     u2081:
  5402   002CDE  EFA6  F016         	goto	l2357
  5403   002CE2                     u2080:
  5404   002CE2  5010               	movf	___fladd@grs^0,w,c
  5405   002CE4  A4D8               	btfss	status,2,c
  5406   002CE6  EF77  F016         	goto	u2091
  5407   002CEA  EF79  F016         	goto	u2090
  5408   002CEE                     u2091:
  5409   002CEE  EFA6  F016         	goto	l2357
  5410   002CF2                     u2090:
  5411   002CF2  0E00               	movlw	0
  5412   002CF4  6E01               	movwf	?___fladd^0,c
  5413   002CF6  0E00               	movlw	0
  5414   002CF8  6E02               	movwf	(?___fladd+1)^0,c
  5415   002CFA  0E00               	movlw	0
  5416   002CFC  6E03               	movwf	(?___fladd+2)^0,c
  5417   002CFE  0E00               	movlw	0
  5418   002D00  6E04               	movwf	(?___fladd+3)^0,c
  5419   002D02  EF3F  F017         	goto	l675
  5420   002D06                     l2341:
  5421   002D06  90D8               	bcf	status,0,c
  5422   002D08  3601               	rlcf	___fladd@b^0,f,c
  5423   002D0A  3602               	rlcf	(___fladd@b+1)^0,f,c
  5424   002D0C  3603               	rlcf	(___fladd@b+2)^0,f,c
  5425   002D0E  3604               	rlcf	(___fladd@b+3)^0,f,c
  5426   002D10  AE10               	btfss	___fladd@grs^0,7,c
  5427   002D12  EF8D  F016         	goto	u2101
  5428   002D16  EF8F  F016         	goto	u2100
  5429   002D1A                     u2101:
  5430   002D1A  EF90  F016         	goto	l2347
  5431   002D1E                     u2100:
  5432   002D1E  8001               	bsf	___fladd@b^0,0,c
  5433   002D20                     l2347:
  5434   002D20  A010               	btfss	___fladd@grs^0,0,c
  5435   002D22  EF95  F016         	goto	u2111
  5436   002D26  EF97  F016         	goto	u2110
  5437   002D2A                     u2111:
  5438   002D2A  EF9B  F016         	goto	l2351
  5439   002D2E                     u2110:
  5440   002D2E  80D8               	bsf	status,0,c
  5441   002D30  3610               	rlcf	___fladd@grs^0,f,c
  5442   002D32  EF9D  F016         	goto	l2353
  5443   002D36                     l2351:
  5444   002D36  90D8               	bcf	status,0,c
  5445   002D38  3610               	rlcf	___fladd@grs^0,f,c
  5446   002D3A                     l2353:
  5447   002D3A  500F               	movf	___fladd@bexp^0,w,c
  5448   002D3C  B4D8               	btfsc	status,2,c
  5449   002D3E  EFA3  F016         	goto	u2121
  5450   002D42  EFA5  F016         	goto	u2120
  5451   002D46                     u2121:
  5452   002D46  EFA6  F016         	goto	l2357
  5453   002D4A                     u2120:
  5454   002D4A  060F               	decf	___fladd@bexp^0,f,c
  5455   002D4C                     l2357:
  5456   002D4C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5457   002D4E  EFAB  F016         	goto	u2131
  5458   002D52  EFAD  F016         	goto	u2130
  5459   002D56                     u2131:
  5460   002D56  EF83  F016         	goto	l2341
  5461   002D5A                     u2130:
  5462   002D5A                     l680:
  5463   002D5A  6A0E               	clrf	___fladd@aexp^0,c
  5464   002D5C  AE10               	btfss	___fladd@grs^0,7,c
  5465   002D5E  EFB3  F016         	goto	u2141
  5466   002D62  EFB5  F016         	goto	u2140
  5467   002D66                     u2141:
  5468   002D66  EFCD  F016         	goto	l692
  5469   002D6A                     u2140:
  5470   002D6A  C010  F009         	movff	___fladd@grs,??___fladd
  5471   002D6E  0E7F               	movlw	127
  5472   002D70  1609               	andwf	??___fladd^0,f,c
  5473   002D72  B4D8               	btfsc	status,2,c
  5474   002D74  EFBE  F016         	goto	u2151
  5475   002D78  EFC0  F016         	goto	u2150
  5476   002D7C                     u2151:
  5477   002D7C  EFC4  F016         	goto	l693
  5478   002D80                     u2150:
  5479   002D80                     l2361:
  5480   002D80  0E01               	movlw	1
  5481   002D82  6E0E               	movwf	___fladd@aexp^0,c
  5482   002D84  EFCD  F016         	goto	l692
  5483   002D88                     l693:
  5484   002D88  A001               	btfss	___fladd@b^0,0,c
  5485   002D8A  EFC9  F016         	goto	u2161
  5486   002D8E  EFCB  F016         	goto	u2160
  5487   002D92                     u2161:
  5488   002D92  EFCD  F016         	goto	l692
  5489   002D96                     u2160:
  5490   002D96  EFC0  F016         	goto	l2361
  5491   002D9A                     l692:
  5492   002D9A  500E               	movf	___fladd@aexp^0,w,c
  5493   002D9C  B4D8               	btfsc	status,2,c
  5494   002D9E  EFD3  F016         	goto	u2171
  5495   002DA2  EFD5  F016         	goto	u2170
  5496   002DA6                     u2171:
  5497   002DA6  EF00  F017         	goto	l2373
  5498   002DAA                     u2170:
  5499   002DAA  0E01               	movlw	1
  5500   002DAC  2601               	addwf	___fladd@b^0,f,c
  5501   002DAE  0E00               	movlw	0
  5502   002DB0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5503   002DB2  2203               	addwfc	(___fladd@b+2)^0,f,c
  5504   002DB4  2204               	addwfc	(___fladd@b+3)^0,f,c
  5505   002DB6  A004               	btfss	(___fladd@b+3)^0,0,c
  5506   002DB8  EFE0  F016         	goto	u2181
  5507   002DBC  EFE2  F016         	goto	u2180
  5508   002DC0                     u2181:
  5509   002DC0  EF00  F017         	goto	l2373
  5510   002DC4                     u2180:
  5511   002DC4  C001  F009         	movff	___fladd@b,??___fladd
  5512   002DC8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5513   002DCC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5514   002DD0  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5515   002DD4  340C               	rlcf	(??___fladd+3)^0,w,c
  5516   002DD6  320C               	rrcf	(??___fladd+3)^0,f,c
  5517   002DD8  320B               	rrcf	(??___fladd+2)^0,f,c
  5518   002DDA  320A               	rrcf	(??___fladd+1)^0,f,c
  5519   002DDC  3209               	rrcf	??___fladd^0,f,c
  5520   002DDE  C009  F001         	movff	??___fladd,___fladd@b
  5521   002DE2  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5522   002DE6  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5523   002DEA  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5524   002DEE  280F               	incf	___fladd@bexp^0,w,c
  5525   002DF0  B4D8               	btfsc	status,2,c
  5526   002DF2  EFFD  F016         	goto	u2191
  5527   002DF6  EFFF  F016         	goto	u2190
  5528   002DFA                     u2191:
  5529   002DFA  EF00  F017         	goto	l2373
  5530   002DFE                     u2190:
  5531   002DFE  2A0F               	incf	___fladd@bexp^0,f,c
  5532   002E00                     l2373:
  5533   002E00  280F               	incf	___fladd@bexp^0,w,c
  5534   002E02  B4D8               	btfsc	status,2,c
  5535   002E04  EF06  F017         	goto	u2201
  5536   002E08  EF08  F017         	goto	u2200
  5537   002E0C                     u2201:
  5538   002E0C  EF10  F017         	goto	l2377
  5539   002E10                     u2200:
  5540   002E10  500F               	movf	___fladd@bexp^0,w,c
  5541   002E12  A4D8               	btfss	status,2,c
  5542   002E14  EF0E  F017         	goto	u2211
  5543   002E18  EF10  F017         	goto	u2210
  5544   002E1C                     u2211:
  5545   002E1C  EF21  F017         	goto	l699
  5546   002E20                     u2210:
  5547   002E20                     l2377:
  5548   002E20  0E00               	movlw	0
  5549   002E22  6E01               	movwf	___fladd@b^0,c
  5550   002E24  0E00               	movlw	0
  5551   002E26  6E02               	movwf	(___fladd@b+1)^0,c
  5552   002E28  0E00               	movlw	0
  5553   002E2A  6E03               	movwf	(___fladd@b+2)^0,c
  5554   002E2C  0E00               	movlw	0
  5555   002E2E  6E04               	movwf	(___fladd@b+3)^0,c
  5556   002E30  500F               	movf	___fladd@bexp^0,w,c
  5557   002E32  A4D8               	btfss	status,2,c
  5558   002E34  EF1E  F017         	goto	u2221
  5559   002E38  EF20  F017         	goto	u2220
  5560   002E3C                     u2221:
  5561   002E3C  EF21  F017         	goto	l699
  5562   002E40                     u2220:
  5563   002E40  6A0D               	clrf	___fladd@signs^0,c
  5564   002E42                     l699:
  5565   002E42  A00F               	btfss	___fladd@bexp^0,0,c
  5566   002E44  EF26  F017         	goto	u2231
  5567   002E48  EF28  F017         	goto	u2230
  5568   002E4C                     u2231:
  5569   002E4C  EF2B  F017         	goto	l2383
  5570   002E50                     u2230:
  5571   002E50  8E03               	bsf	(___fladd@b+2)^0,7,c
  5572   002E52  EF2C  F017         	goto	l2385
  5573   002E56                     l2383:
  5574   002E56  9E03               	bcf	(___fladd@b+2)^0,7,c
  5575   002E58                     l2385:
  5576   002E58  90D8               	bcf	status,0,c
  5577   002E5A  300F               	rrcf	___fladd@bexp^0,w,c
  5578   002E5C  6E04               	movwf	(___fladd@b+3)^0,c
  5579   002E5E  AE0D               	btfss	___fladd@signs^0,7,c
  5580   002E60  EF34  F017         	goto	u2241
  5581   002E64  EF36  F017         	goto	u2240
  5582   002E68                     u2241:
  5583   002E68  EF37  F017         	goto	l2391
  5584   002E6C                     u2240:
  5585   002E6C  8E04               	bsf	(___fladd@b+3)^0,7,c
  5586   002E6E                     l2391:
  5587   002E6E  C001  F001         	movff	___fladd@b,?___fladd
  5588   002E72  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5589   002E76  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5590   002E7A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5591   002E7E                     l675:
  5592   002E7E  0012               	return		;funcret
  5593   002E80                     __end_of___fladd:
  5594                           	callstack 0
  5595                           
  5596 ;; *************** function ___flneg *****************
  5597 ;; Defined at:
  5598 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  f1              4    0[COMRAM] unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  4    0[COMRAM] unsigned char 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5616 ;;Total ram usage:        4 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_efgtoa
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text19
  5626   0045A8                     __ptext19:
  5627                           	callstack 0
  5628   0045A8                     ___flneg:
  5629                           	callstack 26
  5630   0045A8  5001               	movf	___flneg@f1^0,w,c
  5631   0045AA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5632   0045AC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5633   0045AE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5634   0045B0  B4D8               	btfsc	status,2,c
  5635   0045B2  EFDD  F022         	goto	u2761
  5636   0045B6  EFDF  F022         	goto	u2760
  5637   0045BA                     u2761:
  5638   0045BA  EFE7  F022         	goto	l2715
  5639   0045BE                     u2760:
  5640   0045BE  0E00               	movlw	0
  5641   0045C0  1A01               	xorwf	___flneg@f1^0,f,c
  5642   0045C2  0E00               	movlw	0
  5643   0045C4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5644   0045C6  0E00               	movlw	0
  5645   0045C8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5646   0045CA  0E80               	movlw	128
  5647   0045CC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5648   0045CE                     l2715:
  5649   0045CE  C001  F001         	movff	___flneg@f1,?___flneg
  5650   0045D2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5651   0045D6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5652   0045DA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5653   0045DE  0012               	return		;funcret
  5654   0045E0                     __end_of___flneg:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function ___flmul *****************
  5658 ;; Defined at:
  5659 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  b               4   14[COMRAM] unsigned char 
  5662 ;;  a               4   18[COMRAM] unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  prod            4   33[COMRAM] struct .
  5665 ;;  grs             4   27[COMRAM] unsigned long 
  5666 ;;  temp            2   37[COMRAM] struct .
  5667 ;;  bexp            1   32[COMRAM] unsigned char 
  5668 ;;  aexp            1   31[COMRAM] unsigned char 
  5669 ;;  sign            1   26[COMRAM] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  4   14[COMRAM] unsigned char 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0, prodl, prodh
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5679 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5680 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5681 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5682 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5683 ;;Total ram usage:       25 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;;		_efgtoa
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text20
  5694   002E80                     __ptext20:
  5695                           	callstack 0
  5696   002E80                     ___flmul:
  5697                           	callstack 26
  5698   002E80  5012               	movf	(___flmul@b+3)^0,w,c
  5699   002E82  0B80               	andlw	128
  5700   002E84  6E1B               	movwf	___flmul@sign^0,c
  5701   002E86  5012               	movf	(___flmul@b+3)^0,w,c
  5702   002E88  2412               	addwf	(___flmul@b+3)^0,w,c
  5703   002E8A  6E21               	movwf	___flmul@bexp^0,c
  5704   002E8C  AE11               	btfss	(___flmul@b+2)^0,7,c
  5705   002E8E  EF4B  F017         	goto	u2491
  5706   002E92  EF4D  F017         	goto	u2490
  5707   002E96                     u2491:
  5708   002E96  EF4E  F017         	goto	l2545
  5709   002E9A                     u2490:
  5710   002E9A  8021               	bsf	___flmul@bexp^0,0,c
  5711   002E9C                     l2545:
  5712   002E9C  5021               	movf	___flmul@bexp^0,w,c
  5713   002E9E  B4D8               	btfsc	status,2,c
  5714   002EA0  EF54  F017         	goto	u2501
  5715   002EA4  EF56  F017         	goto	u2500
  5716   002EA8                     u2501:
  5717   002EA8  EF69  F017         	goto	l2553
  5718   002EAC                     u2500:
  5719   002EAC  2821               	incf	___flmul@bexp^0,w,c
  5720   002EAE  A4D8               	btfss	status,2,c
  5721   002EB0  EF5C  F017         	goto	u2511
  5722   002EB4  EF5E  F017         	goto	u2510
  5723   002EB8                     u2511:
  5724   002EB8  EF66  F017         	goto	l2551
  5725   002EBC                     u2510:
  5726   002EBC  0E00               	movlw	0
  5727   002EBE  6E0F               	movwf	___flmul@b^0,c
  5728   002EC0  0E00               	movlw	0
  5729   002EC2  6E10               	movwf	(___flmul@b+1)^0,c
  5730   002EC4  0E00               	movlw	0
  5731   002EC6  6E11               	movwf	(___flmul@b+2)^0,c
  5732   002EC8  0E00               	movlw	0
  5733   002ECA  6E12               	movwf	(___flmul@b+3)^0,c
  5734   002ECC                     l2551:
  5735   002ECC  8E11               	bsf	(___flmul@b+2)^0,7,c
  5736   002ECE  EF71  F017         	goto	l2555
  5737   002ED2                     l2553:
  5738   002ED2  0E00               	movlw	0
  5739   002ED4  6E0F               	movwf	___flmul@b^0,c
  5740   002ED6  0E00               	movlw	0
  5741   002ED8  6E10               	movwf	(___flmul@b+1)^0,c
  5742   002EDA  0E00               	movlw	0
  5743   002EDC  6E11               	movwf	(___flmul@b+2)^0,c
  5744   002EDE  0E00               	movlw	0
  5745   002EE0  6E12               	movwf	(___flmul@b+3)^0,c
  5746   002EE2                     l2555:
  5747   002EE2  5016               	movf	(___flmul@a+3)^0,w,c
  5748   002EE4  0B80               	andlw	128
  5749   002EE6  1A1B               	xorwf	___flmul@sign^0,f,c
  5750   002EE8  5016               	movf	(___flmul@a+3)^0,w,c
  5751   002EEA  2416               	addwf	(___flmul@a+3)^0,w,c
  5752   002EEC  6E20               	movwf	___flmul@aexp^0,c
  5753   002EEE  AE15               	btfss	(___flmul@a+2)^0,7,c
  5754   002EF0  EF7C  F017         	goto	u2521
  5755   002EF4  EF7E  F017         	goto	u2520
  5756   002EF8                     u2521:
  5757   002EF8  EF7F  F017         	goto	l2563
  5758   002EFC                     u2520:
  5759   002EFC  8020               	bsf	___flmul@aexp^0,0,c
  5760   002EFE                     l2563:
  5761   002EFE  5020               	movf	___flmul@aexp^0,w,c
  5762   002F00  B4D8               	btfsc	status,2,c
  5763   002F02  EF85  F017         	goto	u2531
  5764   002F06  EF87  F017         	goto	u2530
  5765   002F0A                     u2531:
  5766   002F0A  EF9A  F017         	goto	l2571
  5767   002F0E                     u2530:
  5768   002F0E  2820               	incf	___flmul@aexp^0,w,c
  5769   002F10  A4D8               	btfss	status,2,c
  5770   002F12  EF8D  F017         	goto	u2541
  5771   002F16  EF8F  F017         	goto	u2540
  5772   002F1A                     u2541:
  5773   002F1A  EF97  F017         	goto	l2569
  5774   002F1E                     u2540:
  5775   002F1E  0E00               	movlw	0
  5776   002F20  6E13               	movwf	___flmul@a^0,c
  5777   002F22  0E00               	movlw	0
  5778   002F24  6E14               	movwf	(___flmul@a+1)^0,c
  5779   002F26  0E00               	movlw	0
  5780   002F28  6E15               	movwf	(___flmul@a+2)^0,c
  5781   002F2A  0E00               	movlw	0
  5782   002F2C  6E16               	movwf	(___flmul@a+3)^0,c
  5783   002F2E                     l2569:
  5784   002F2E  8E15               	bsf	(___flmul@a+2)^0,7,c
  5785   002F30  EFA2  F017         	goto	l752
  5786   002F34                     l2571:
  5787   002F34  0E00               	movlw	0
  5788   002F36  6E13               	movwf	___flmul@a^0,c
  5789   002F38  0E00               	movlw	0
  5790   002F3A  6E14               	movwf	(___flmul@a+1)^0,c
  5791   002F3C  0E00               	movlw	0
  5792   002F3E  6E15               	movwf	(___flmul@a+2)^0,c
  5793   002F40  0E00               	movlw	0
  5794   002F42  6E16               	movwf	(___flmul@a+3)^0,c
  5795   002F44                     l752:
  5796   002F44  5020               	movf	___flmul@aexp^0,w,c
  5797   002F46  B4D8               	btfsc	status,2,c
  5798   002F48  EFA8  F017         	goto	u2551
  5799   002F4C  EFAA  F017         	goto	u2550
  5800   002F50                     u2551:
  5801   002F50  EFB2  F017         	goto	l2575
  5802   002F54                     u2550:
  5803   002F54  5021               	movf	___flmul@bexp^0,w,c
  5804   002F56  A4D8               	btfss	status,2,c
  5805   002F58  EFB0  F017         	goto	u2561
  5806   002F5C  EFB2  F017         	goto	u2560
  5807   002F60                     u2561:
  5808   002F60  EFBC  F017         	goto	l2579
  5809   002F64                     u2560:
  5810   002F64                     l2575:
  5811   002F64  0E00               	movlw	0
  5812   002F66  6E0F               	movwf	?___flmul^0,c
  5813   002F68  0E00               	movlw	0
  5814   002F6A  6E10               	movwf	(?___flmul+1)^0,c
  5815   002F6C  0E00               	movlw	0
  5816   002F6E  6E11               	movwf	(?___flmul+2)^0,c
  5817   002F70  0E00               	movlw	0
  5818   002F72  6E12               	movwf	(?___flmul+3)^0,c
  5819   002F74  EF64  F019         	goto	l756
  5820   002F78                     l2579:
  5821   002F78  5015               	movf	(___flmul@a+2)^0,w,c
  5822   002F7A  020F               	mulwf	___flmul@b^0,c
  5823   002F7C  006F FFCC  F026    	movff	prodl,___flmul@temp
  5824   002F82  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5825   002F88  5026               	movf	___flmul@temp^0,w,c
  5826   002F8A  6E1C               	movwf	___flmul@grs^0,c
  5827   002F8C  6A1D               	clrf	(___flmul@grs+1)^0,c
  5828   002F8E  6A1E               	clrf	(___flmul@grs+2)^0,c
  5829   002F90  6A1F               	clrf	(___flmul@grs+3)^0,c
  5830   002F92  5027               	movf	(___flmul@temp+1)^0,w,c
  5831   002F94  6E22               	movwf	___flmul@prod^0,c
  5832   002F96  6A23               	clrf	(___flmul@prod+1)^0,c
  5833   002F98  6A24               	clrf	(___flmul@prod+2)^0,c
  5834   002F9A  6A25               	clrf	(___flmul@prod+3)^0,c
  5835   002F9C  5014               	movf	(___flmul@a+1)^0,w,c
  5836   002F9E  0210               	mulwf	(___flmul@b+1)^0,c
  5837   002FA0  006F FFCC  F026    	movff	prodl,___flmul@temp
  5838   002FA6  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5839   002FAC  5026               	movf	___flmul@temp^0,w,c
  5840   002FAE  261C               	addwf	___flmul@grs^0,f,c
  5841   002FB0  0E00               	movlw	0
  5842   002FB2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5843   002FB4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5844   002FB6  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5845   002FB8  5027               	movf	(___flmul@temp+1)^0,w,c
  5846   002FBA  2622               	addwf	___flmul@prod^0,f,c
  5847   002FBC  0E00               	movlw	0
  5848   002FBE  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5849   002FC0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5850   002FC2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5851   002FC4  5013               	movf	___flmul@a^0,w,c
  5852   002FC6  0211               	mulwf	(___flmul@b+2)^0,c
  5853   002FC8  006F FFCC  F026    	movff	prodl,___flmul@temp
  5854   002FCE  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5855   002FD4  5026               	movf	___flmul@temp^0,w,c
  5856   002FD6  261C               	addwf	___flmul@grs^0,f,c
  5857   002FD8  0E00               	movlw	0
  5858   002FDA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5859   002FDC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5860   002FDE  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5861   002FE0  5027               	movf	(___flmul@temp+1)^0,w,c
  5862   002FE2  2622               	addwf	___flmul@prod^0,f,c
  5863   002FE4  0E00               	movlw	0
  5864   002FE6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5865   002FE8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5866   002FEA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5867   002FEC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5868   002FF0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5869   002FF4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5870   002FF8  6A1C               	clrf	___flmul@grs^0,c
  5871   002FFA  5013               	movf	___flmul@a^0,w,c
  5872   002FFC  0210               	mulwf	(___flmul@b+1)^0,c
  5873   002FFE  006F FFCC  F026    	movff	prodl,___flmul@temp
  5874   003004  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5875   00300A  5026               	movf	___flmul@temp^0,w,c
  5876   00300C  261C               	addwf	___flmul@grs^0,f,c
  5877   00300E  5027               	movf	(___flmul@temp+1)^0,w,c
  5878   003010  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5879   003012  0E00               	movlw	0
  5880   003014  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5881   003016  0E00               	movlw	0
  5882   003018  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5883   00301A  5014               	movf	(___flmul@a+1)^0,w,c
  5884   00301C  020F               	mulwf	___flmul@b^0,c
  5885   00301E  006F FFCC  F026    	movff	prodl,___flmul@temp
  5886   003024  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5887   00302A  5026               	movf	___flmul@temp^0,w,c
  5888   00302C  261C               	addwf	___flmul@grs^0,f,c
  5889   00302E  5027               	movf	(___flmul@temp+1)^0,w,c
  5890   003030  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5891   003032  0E00               	movlw	0
  5892   003034  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5893   003036  0E00               	movlw	0
  5894   003038  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5895   00303A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5896   00303E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5897   003042  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5898   003046  6A1C               	clrf	___flmul@grs^0,c
  5899   003048  5013               	movf	___flmul@a^0,w,c
  5900   00304A  020F               	mulwf	___flmul@b^0,c
  5901   00304C  006F FFCC  F026    	movff	prodl,___flmul@temp
  5902   003052  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5903   003058  5026               	movf	___flmul@temp^0,w,c
  5904   00305A  261C               	addwf	___flmul@grs^0,f,c
  5905   00305C  5027               	movf	(___flmul@temp+1)^0,w,c
  5906   00305E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5907   003060  0E00               	movlw	0
  5908   003062  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5909   003064  0E00               	movlw	0
  5910   003066  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5911   003068  5015               	movf	(___flmul@a+2)^0,w,c
  5912   00306A  0210               	mulwf	(___flmul@b+1)^0,c
  5913   00306C  006F FFCC  F026    	movff	prodl,___flmul@temp
  5914   003072  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5915   003078  5026               	movf	___flmul@temp^0,w,c
  5916   00307A  2622               	addwf	___flmul@prod^0,f,c
  5917   00307C  5027               	movf	(___flmul@temp+1)^0,w,c
  5918   00307E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5919   003080  0E00               	movlw	0
  5920   003082  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5921   003084  0E00               	movlw	0
  5922   003086  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5923   003088  5014               	movf	(___flmul@a+1)^0,w,c
  5924   00308A  0211               	mulwf	(___flmul@b+2)^0,c
  5925   00308C  006F FFCC  F026    	movff	prodl,___flmul@temp
  5926   003092  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5927   003098  5026               	movf	___flmul@temp^0,w,c
  5928   00309A  2622               	addwf	___flmul@prod^0,f,c
  5929   00309C  5027               	movf	(___flmul@temp+1)^0,w,c
  5930   00309E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5931   0030A0  0E00               	movlw	0
  5932   0030A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5933   0030A4  0E00               	movlw	0
  5934   0030A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5935   0030A8  5015               	movf	(___flmul@a+2)^0,w,c
  5936   0030AA  0211               	mulwf	(___flmul@b+2)^0,c
  5937   0030AC  006F FFCC  F026    	movff	prodl,___flmul@temp
  5938   0030B2  006F FFD0  F027    	movff	prodh,___flmul@temp+1
  5939   0030B8  5026               	movf	___flmul@temp^0,w,c
  5940   0030BA  6E17               	movwf	??___flmul^0,c
  5941   0030BC  5027               	movf	(___flmul@temp+1)^0,w,c
  5942   0030BE  6E18               	movwf	(??___flmul+1)^0,c
  5943   0030C0  6A19               	clrf	(??___flmul+2)^0,c
  5944   0030C2  6A1A               	clrf	(??___flmul+3)^0,c
  5945   0030C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5946   0030C8  C018  F019         	movff	??___flmul+1,??___flmul+2
  5947   0030CC  C017  F018         	movff	??___flmul,??___flmul+1
  5948   0030D0  6A17               	clrf	??___flmul^0,c
  5949   0030D2  5017               	movf	??___flmul^0,w,c
  5950   0030D4  2622               	addwf	___flmul@prod^0,f,c
  5951   0030D6  5018               	movf	(??___flmul+1)^0,w,c
  5952   0030D8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5953   0030DA  5019               	movf	(??___flmul+2)^0,w,c
  5954   0030DC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5955   0030DE  501A               	movf	(??___flmul+3)^0,w,c
  5956   0030E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5957   0030E2  C01C  F017         	movff	___flmul@grs,??___flmul
  5958   0030E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5959   0030EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5960   0030EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5961   0030F2  0E19               	movlw	25
  5962   0030F4  EF81  F018         	goto	u2570
  5963   0030F8                     u2575:
  5964   0030F8  90D8               	bcf	status,0,c
  5965   0030FA  321A               	rrcf	(??___flmul+3)^0,f,c
  5966   0030FC  3219               	rrcf	(??___flmul+2)^0,f,c
  5967   0030FE  3218               	rrcf	(??___flmul+1)^0,f,c
  5968   003100  3217               	rrcf	??___flmul^0,f,c
  5969   003102                     u2570:
  5970   003102  2EE8               	decfsz	wreg,f,c
  5971   003104  EF7C  F018         	goto	u2575
  5972   003108  5017               	movf	??___flmul^0,w,c
  5973   00310A  2622               	addwf	___flmul@prod^0,f,c
  5974   00310C  5018               	movf	(??___flmul+1)^0,w,c
  5975   00310E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5976   003110  5019               	movf	(??___flmul+2)^0,w,c
  5977   003112  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5978   003114  501A               	movf	(??___flmul+3)^0,w,c
  5979   003116  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5980   003118  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5981   00311C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5982   003120  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5983   003124  6A1C               	clrf	___flmul@grs^0,c
  5984   003126  5020               	movf	___flmul@aexp^0,w,c
  5985   003128  C021  F017         	movff	___flmul@bexp,??___flmul
  5986   00312C  6A18               	clrf	(??___flmul+1)^0,c
  5987   00312E  2617               	addwf	??___flmul^0,f,c
  5988   003130  0E00               	movlw	0
  5989   003132  2218               	addwfc	(??___flmul+1)^0,f,c
  5990   003134  0E82               	movlw	130
  5991   003136  2417               	addwf	??___flmul^0,w,c
  5992   003138  6E26               	movwf	___flmul@temp^0,c
  5993   00313A  0EFF               	movlw	255
  5994   00313C  2018               	addwfc	(??___flmul+1)^0,w,c
  5995   00313E  6E27               	movwf	(___flmul@temp+1)^0,c
  5996   003140  EFB7  F018         	goto	l2627
  5997   003144                     l2621:
  5998   003144  90D8               	bcf	status,0,c
  5999   003146  3622               	rlcf	___flmul@prod^0,f,c
  6000   003148  3623               	rlcf	(___flmul@prod+1)^0,f,c
  6001   00314A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  6002   00314C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  6003   00314E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6004   003150  EFAC  F018         	goto	u2581
  6005   003154  EFAE  F018         	goto	u2580
  6006   003158                     u2581:
  6007   003158  EFAF  F018         	goto	l759
  6008   00315C                     u2580:
  6009   00315C  8022               	bsf	___flmul@prod^0,0,c
  6010   00315E                     l759:
  6011   00315E  90D8               	bcf	status,0,c
  6012   003160  361C               	rlcf	___flmul@grs^0,f,c
  6013   003162  361D               	rlcf	(___flmul@grs+1)^0,f,c
  6014   003164  361E               	rlcf	(___flmul@grs+2)^0,f,c
  6015   003166  361F               	rlcf	(___flmul@grs+3)^0,f,c
  6016   003168  0626               	decf	___flmul@temp^0,f,c
  6017   00316A  A0D8               	btfss	status,0,c
  6018   00316C  0627               	decf	(___flmul@temp+1)^0,f,c
  6019   00316E                     l2627:
  6020   00316E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  6021   003170  EFBC  F018         	goto	u2591
  6022   003174  EFBE  F018         	goto	u2590
  6023   003178                     u2591:
  6024   003178  EFA2  F018         	goto	l2621
  6025   00317C                     u2590:
  6026   00317C  6A20               	clrf	___flmul@aexp^0,c
  6027   00317E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  6028   003180  EFC4  F018         	goto	u2601
  6029   003184  EFC6  F018         	goto	u2600
  6030   003188                     u2601:
  6031   003188  EFEA  F018         	goto	l761
  6032   00318C                     u2600:
  6033   00318C  0EFF               	movlw	255
  6034   00318E  141C               	andwf	___flmul@grs^0,w,c
  6035   003190  6E17               	movwf	??___flmul^0,c
  6036   003192  0EFF               	movlw	255
  6037   003194  141D               	andwf	(___flmul@grs+1)^0,w,c
  6038   003196  6E18               	movwf	(??___flmul+1)^0,c
  6039   003198  0EFF               	movlw	255
  6040   00319A  141E               	andwf	(___flmul@grs+2)^0,w,c
  6041   00319C  6E19               	movwf	(??___flmul+2)^0,c
  6042   00319E  0E7F               	movlw	127
  6043   0031A0  141F               	andwf	(___flmul@grs+3)^0,w,c
  6044   0031A2  6E1A               	movwf	(??___flmul+3)^0,c
  6045   0031A4  5017               	movf	??___flmul^0,w,c
  6046   0031A6  1018               	iorwf	(??___flmul+1)^0,w,c
  6047   0031A8  1019               	iorwf	(??___flmul+2)^0,w,c
  6048   0031AA  101A               	iorwf	(??___flmul+3)^0,w,c
  6049   0031AC  B4D8               	btfsc	status,2,c
  6050   0031AE  EFDB  F018         	goto	u2611
  6051   0031B2  EFDD  F018         	goto	u2610
  6052   0031B6                     u2611:
  6053   0031B6  EFE1  F018         	goto	l762
  6054   0031BA                     u2610:
  6055   0031BA                     l2631:
  6056   0031BA  0E01               	movlw	1
  6057   0031BC  6E20               	movwf	___flmul@aexp^0,c
  6058   0031BE  EFEA  F018         	goto	l761
  6059   0031C2                     l762:
  6060   0031C2  A022               	btfss	___flmul@prod^0,0,c
  6061   0031C4  EFE6  F018         	goto	u2621
  6062   0031C8  EFE8  F018         	goto	u2620
  6063   0031CC                     u2621:
  6064   0031CC  EFEA  F018         	goto	l761
  6065   0031D0                     u2620:
  6066   0031D0  EFDD  F018         	goto	l2631
  6067   0031D4                     l761:
  6068   0031D4  5020               	movf	___flmul@aexp^0,w,c
  6069   0031D6  B4D8               	btfsc	status,2,c
  6070   0031D8  EFF0  F018         	goto	u2631
  6071   0031DC  EFF2  F018         	goto	u2630
  6072   0031E0                     u2631:
  6073   0031E0  EF16  F019         	goto	l2643
  6074   0031E4                     u2630:
  6075   0031E4  0E01               	movlw	1
  6076   0031E6  2622               	addwf	___flmul@prod^0,f,c
  6077   0031E8  0E00               	movlw	0
  6078   0031EA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  6079   0031EC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  6080   0031EE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  6081   0031F0  A025               	btfss	(___flmul@prod+3)^0,0,c
  6082   0031F2  EFFD  F018         	goto	u2641
  6083   0031F6  EFFF  F018         	goto	u2640
  6084   0031FA                     u2641:
  6085   0031FA  EF16  F019         	goto	l2643
  6086   0031FE                     u2640:
  6087   0031FE  C022  F017         	movff	___flmul@prod,??___flmul
  6088   003202  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  6089   003206  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  6090   00320A  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  6091   00320E  341A               	rlcf	(??___flmul+3)^0,w,c
  6092   003210  321A               	rrcf	(??___flmul+3)^0,f,c
  6093   003212  3219               	rrcf	(??___flmul+2)^0,f,c
  6094   003214  3218               	rrcf	(??___flmul+1)^0,f,c
  6095   003216  3217               	rrcf	??___flmul^0,f,c
  6096   003218  C017  F022         	movff	??___flmul,___flmul@prod
  6097   00321C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  6098   003220  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  6099   003224  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  6100   003228  4A26               	infsnz	___flmul@temp^0,f,c
  6101   00322A  2A27               	incf	(___flmul@temp+1)^0,f,c
  6102   00322C                     l2643:
  6103   00322C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6104   00322E  EF21  F019         	goto	u2651
  6105   003232  5027               	movf	(___flmul@temp+1)^0,w,c
  6106   003234  E108               	bnz	u2650
  6107   003236  2826               	incf	___flmul@temp^0,w,c
  6108   003238  A0D8               	btfss	status,0,c
  6109   00323A  EF21  F019         	goto	u2651
  6110   00323E  EF23  F019         	goto	u2650
  6111   003242                     u2651:
  6112   003242  EF2D  F019         	goto	l2647
  6113   003246                     u2650:
  6114   003246  0E00               	movlw	0
  6115   003248  6E22               	movwf	___flmul@prod^0,c
  6116   00324A  0E00               	movlw	0
  6117   00324C  6E23               	movwf	(___flmul@prod+1)^0,c
  6118   00324E  0E80               	movlw	128
  6119   003250  6E24               	movwf	(___flmul@prod+2)^0,c
  6120   003252  0E7F               	movlw	127
  6121   003254  6E25               	movwf	(___flmul@prod+3)^0,c
  6122   003256  EF5A  F019         	goto	l2661
  6123   00325A                     l2647:
  6124   00325A  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  6125   00325C  EF3A  F019         	goto	u2660
  6126   003260  5027               	movf	(___flmul@temp+1)^0,w,c
  6127   003262  E106               	bnz	u2661
  6128   003264  0426               	decf	___flmul@temp^0,w,c
  6129   003266  B0D8               	btfsc	status,0,c
  6130   003268  EF38  F019         	goto	u2661
  6131   00326C  EF3A  F019         	goto	u2660
  6132   003270                     u2661:
  6133   003270  EF45  F019         	goto	l769
  6134   003274                     u2660:
  6135   003274  0E00               	movlw	0
  6136   003276  6E22               	movwf	___flmul@prod^0,c
  6137   003278  0E00               	movlw	0
  6138   00327A  6E23               	movwf	(___flmul@prod+1)^0,c
  6139   00327C  0E00               	movlw	0
  6140   00327E  6E24               	movwf	(___flmul@prod+2)^0,c
  6141   003280  0E00               	movlw	0
  6142   003282  6E25               	movwf	(___flmul@prod+3)^0,c
  6143   003284  6A1B               	clrf	___flmul@sign^0,c
  6144   003286  EF5A  F019         	goto	l2661
  6145   00328A                     l769:
  6146   00328A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  6147   00328E  0EFF               	movlw	255
  6148   003290  1622               	andwf	___flmul@prod^0,f,c
  6149   003292  0EFF               	movlw	255
  6150   003294  1623               	andwf	(___flmul@prod+1)^0,f,c
  6151   003296  0E7F               	movlw	127
  6152   003298  1624               	andwf	(___flmul@prod+2)^0,f,c
  6153   00329A  0E00               	movlw	0
  6154   00329C  1625               	andwf	(___flmul@prod+3)^0,f,c
  6155   00329E  A021               	btfss	___flmul@bexp^0,0,c
  6156   0032A0  EF54  F019         	goto	u2671
  6157   0032A4  EF56  F019         	goto	u2670
  6158   0032A8                     u2671:
  6159   0032A8  EF57  F019         	goto	l2659
  6160   0032AC                     u2670:
  6161   0032AC  8E24               	bsf	(___flmul@prod+2)^0,7,c
  6162   0032AE                     l2659:
  6163   0032AE  90D8               	bcf	status,0,c
  6164   0032B0  3021               	rrcf	___flmul@bexp^0,w,c
  6165   0032B2  6E25               	movwf	(___flmul@prod+3)^0,c
  6166   0032B4                     l2661:
  6167   0032B4  501B               	movf	___flmul@sign^0,w,c
  6168   0032B6  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6169   0032B8  C022  F00F         	movff	___flmul@prod,?___flmul
  6170   0032BC  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6171   0032C0  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6172   0032C4  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6173   0032C8                     l756:
  6174   0032C8  0012               	return		;funcret
  6175   0032CA                     __end_of___flmul:
  6176                           	callstack 0
  6177                           
  6178 ;; *************** function ___flge *****************
  6179 ;; Defined at:
  6180 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;  ff1             4   39[COMRAM] unsigned char 
  6183 ;;  ff2             4   43[COMRAM] unsigned char 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;		None               void
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6198 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6199 ;;Total ram usage:       12 bytes
  6200 ;; Hardware stack levels used: 1
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_efgtoa
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text21
  6209   003E40                     __ptext21:
  6210                           	callstack 0
  6211   003E40                     ___flge:
  6212                           	callstack 26
  6213   003E40  0E00               	movlw	0
  6214   003E42  1428               	andwf	___flge@ff1^0,w,c
  6215   003E44  6E30               	movwf	??___flge^0,c
  6216   003E46  0E00               	movlw	0
  6217   003E48  1429               	andwf	(___flge@ff1+1)^0,w,c
  6218   003E4A  6E31               	movwf	(??___flge+1)^0,c
  6219   003E4C  0E80               	movlw	128
  6220   003E4E  142A               	andwf	(___flge@ff1+2)^0,w,c
  6221   003E50  6E32               	movwf	(??___flge+2)^0,c
  6222   003E52  0E7F               	movlw	127
  6223   003E54  142B               	andwf	(___flge@ff1+3)^0,w,c
  6224   003E56  6E33               	movwf	(??___flge+3)^0,c
  6225   003E58  5030               	movf	??___flge^0,w,c
  6226   003E5A  1031               	iorwf	(??___flge+1)^0,w,c
  6227   003E5C  1032               	iorwf	(??___flge+2)^0,w,c
  6228   003E5E  1033               	iorwf	(??___flge+3)^0,w,c
  6229   003E60  A4D8               	btfss	status,2,c
  6230   003E62  EF35  F01F         	goto	u2711
  6231   003E66  EF37  F01F         	goto	u2710
  6232   003E6A                     u2711:
  6233   003E6A  EF3F  F01F         	goto	l2693
  6234   003E6E                     u2710:
  6235   003E6E  0E00               	movlw	0
  6236   003E70  6E28               	movwf	___flge@ff1^0,c
  6237   003E72  0E00               	movlw	0
  6238   003E74  6E29               	movwf	(___flge@ff1+1)^0,c
  6239   003E76  0E00               	movlw	0
  6240   003E78  6E2A               	movwf	(___flge@ff1+2)^0,c
  6241   003E7A  0E00               	movlw	0
  6242   003E7C  6E2B               	movwf	(___flge@ff1+3)^0,c
  6243   003E7E                     l2693:
  6244   003E7E  0E00               	movlw	0
  6245   003E80  142C               	andwf	___flge@ff2^0,w,c
  6246   003E82  6E30               	movwf	??___flge^0,c
  6247   003E84  0E00               	movlw	0
  6248   003E86  142D               	andwf	(___flge@ff2+1)^0,w,c
  6249   003E88  6E31               	movwf	(??___flge+1)^0,c
  6250   003E8A  0E80               	movlw	128
  6251   003E8C  142E               	andwf	(___flge@ff2+2)^0,w,c
  6252   003E8E  6E32               	movwf	(??___flge+2)^0,c
  6253   003E90  0E7F               	movlw	127
  6254   003E92  142F               	andwf	(___flge@ff2+3)^0,w,c
  6255   003E94  6E33               	movwf	(??___flge+3)^0,c
  6256   003E96  5030               	movf	??___flge^0,w,c
  6257   003E98  1031               	iorwf	(??___flge+1)^0,w,c
  6258   003E9A  1032               	iorwf	(??___flge+2)^0,w,c
  6259   003E9C  1033               	iorwf	(??___flge+3)^0,w,c
  6260   003E9E  A4D8               	btfss	status,2,c
  6261   003EA0  EF54  F01F         	goto	u2721
  6262   003EA4  EF56  F01F         	goto	u2720
  6263   003EA8                     u2721:
  6264   003EA8  EF5E  F01F         	goto	l2697
  6265   003EAC                     u2720:
  6266   003EAC  0E00               	movlw	0
  6267   003EAE  6E2C               	movwf	___flge@ff2^0,c
  6268   003EB0  0E00               	movlw	0
  6269   003EB2  6E2D               	movwf	(___flge@ff2+1)^0,c
  6270   003EB4  0E00               	movlw	0
  6271   003EB6  6E2E               	movwf	(___flge@ff2+2)^0,c
  6272   003EB8  0E00               	movlw	0
  6273   003EBA  6E2F               	movwf	(___flge@ff2+3)^0,c
  6274   003EBC                     l2697:
  6275   003EBC  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6276   003EBE  EF63  F01F         	goto	u2731
  6277   003EC2  EF65  F01F         	goto	u2730
  6278   003EC6                     u2731:
  6279   003EC6  EF6E  F01F         	goto	l2701
  6280   003ECA                     u2730:
  6281   003ECA  6C28               	negf	___flge@ff1^0,c
  6282   003ECC  1E29               	comf	(___flge@ff1+1)^0,f,c
  6283   003ECE  B0D8               	btfsc	status,0,c
  6284   003ED0  2A29               	incf	(___flge@ff1+1)^0,f,c
  6285   003ED2  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6286   003ED4  B0D8               	btfsc	status,0,c
  6287   003ED6  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6288   003ED8  0E80               	movlw	128
  6289   003EDA  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6290   003EDC                     l2701:
  6291   003EDC  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6292   003EDE  EF73  F01F         	goto	u2741
  6293   003EE2  EF75  F01F         	goto	u2740
  6294   003EE6                     u2741:
  6295   003EE6  EF7E  F01F         	goto	l403
  6296   003EEA                     u2740:
  6297   003EEA  6C2C               	negf	___flge@ff2^0,c
  6298   003EEC  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6299   003EEE  B0D8               	btfsc	status,0,c
  6300   003EF0  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6301   003EF2  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6302   003EF4  B0D8               	btfsc	status,0,c
  6303   003EF6  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6304   003EF8  0E80               	movlw	128
  6305   003EFA  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6306   003EFC                     l403:
  6307   003EFC  0E00               	movlw	0
  6308   003EFE  1A28               	xorwf	___flge@ff1^0,f,c
  6309   003F00  0E00               	movlw	0
  6310   003F02  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6311   003F04  0E00               	movlw	0
  6312   003F06  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6313   003F08  0E80               	movlw	128
  6314   003F0A  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6315   003F0C  0E00               	movlw	0
  6316   003F0E  1A2C               	xorwf	___flge@ff2^0,f,c
  6317   003F10  0E00               	movlw	0
  6318   003F12  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6319   003F14  0E00               	movlw	0
  6320   003F16  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6321   003F18  0E80               	movlw	128
  6322   003F1A  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6323   003F1C  502C               	movf	___flge@ff2^0,w,c
  6324   003F1E  5C28               	subwf	___flge@ff1^0,w,c
  6325   003F20  502D               	movf	(___flge@ff2+1)^0,w,c
  6326   003F22  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6327   003F24  502E               	movf	(___flge@ff2+2)^0,w,c
  6328   003F26  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6329   003F28  502F               	movf	(___flge@ff2+3)^0,w,c
  6330   003F2A  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6331   003F2C  B0D8               	btfsc	status,0,c
  6332   003F2E  EF9B  F01F         	goto	u2751
  6333   003F32  EF9D  F01F         	goto	u2750
  6334   003F36                     u2751:
  6335   003F36  EFA0  F01F         	goto	l2707
  6336   003F3A                     u2750:
  6337   003F3A  90D8               	bcf	status,0,c
  6338   003F3C  EFA1  F01F         	goto	l408
  6339   003F40                     l2707:
  6340   003F40  80D8               	bsf	status,0,c
  6341   003F42                     l408:
  6342   003F42  0012               	return		;funcret
  6343   003F44                     __end_of___flge:
  6344                           	callstack 0
  6345                           
  6346 ;; *************** function ___fleq *****************
  6347 ;; Defined at:
  6348 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;  ff1             4    0[COMRAM] unsigned char 
  6351 ;;  ff2             4    4[COMRAM] unsigned char 
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;		None               void
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6363 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6365 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6366 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6367 ;;Total ram usage:       12 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_efgtoa
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text22
  6377   0041A6                     __ptext22:
  6378                           	callstack 0
  6379   0041A6                     ___fleq:
  6380                           	callstack 26
  6381   0041A6  0E00               	movlw	0
  6382   0041A8  1401               	andwf	___fleq@ff1^0,w,c
  6383   0041AA  6E09               	movwf	??___fleq^0,c
  6384   0041AC  0E00               	movlw	0
  6385   0041AE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6386   0041B0  6E0A               	movwf	(??___fleq+1)^0,c
  6387   0041B2  0E80               	movlw	128
  6388   0041B4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6389   0041B6  6E0B               	movwf	(??___fleq+2)^0,c
  6390   0041B8  0E7F               	movlw	127
  6391   0041BA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6392   0041BC  6E0C               	movwf	(??___fleq+3)^0,c
  6393   0041BE  5009               	movf	??___fleq^0,w,c
  6394   0041C0  100A               	iorwf	(??___fleq+1)^0,w,c
  6395   0041C2  100B               	iorwf	(??___fleq+2)^0,w,c
  6396   0041C4  100C               	iorwf	(??___fleq+3)^0,w,c
  6397   0041C6  A4D8               	btfss	status,2,c
  6398   0041C8  EFE8  F020         	goto	u2681
  6399   0041CC  EFEA  F020         	goto	u2680
  6400   0041D0                     u2681:
  6401   0041D0  EFF2  F020         	goto	l2677
  6402   0041D4                     u2680:
  6403   0041D4  0E00               	movlw	0
  6404   0041D6  6E01               	movwf	___fleq@ff1^0,c
  6405   0041D8  0E00               	movlw	0
  6406   0041DA  6E02               	movwf	(___fleq@ff1+1)^0,c
  6407   0041DC  0E00               	movlw	0
  6408   0041DE  6E03               	movwf	(___fleq@ff1+2)^0,c
  6409   0041E0  0E00               	movlw	0
  6410   0041E2  6E04               	movwf	(___fleq@ff1+3)^0,c
  6411   0041E4                     l2677:
  6412   0041E4  0E00               	movlw	0
  6413   0041E6  1405               	andwf	___fleq@ff2^0,w,c
  6414   0041E8  6E09               	movwf	??___fleq^0,c
  6415   0041EA  0E00               	movlw	0
  6416   0041EC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6417   0041EE  6E0A               	movwf	(??___fleq+1)^0,c
  6418   0041F0  0E80               	movlw	128
  6419   0041F2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6420   0041F4  6E0B               	movwf	(??___fleq+2)^0,c
  6421   0041F6  0E7F               	movlw	127
  6422   0041F8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6423   0041FA  6E0C               	movwf	(??___fleq+3)^0,c
  6424   0041FC  5009               	movf	??___fleq^0,w,c
  6425   0041FE  100A               	iorwf	(??___fleq+1)^0,w,c
  6426   004200  100B               	iorwf	(??___fleq+2)^0,w,c
  6427   004202  100C               	iorwf	(??___fleq+3)^0,w,c
  6428   004204  A4D8               	btfss	status,2,c
  6429   004206  EF07  F021         	goto	u2691
  6430   00420A  EF09  F021         	goto	u2690
  6431   00420E                     u2691:
  6432   00420E  EF11  F021         	goto	l2681
  6433   004212                     u2690:
  6434   004212  0E00               	movlw	0
  6435   004214  6E05               	movwf	___fleq@ff2^0,c
  6436   004216  0E00               	movlw	0
  6437   004218  6E06               	movwf	(___fleq@ff2+1)^0,c
  6438   00421A  0E00               	movlw	0
  6439   00421C  6E07               	movwf	(___fleq@ff2+2)^0,c
  6440   00421E  0E00               	movlw	0
  6441   004220  6E08               	movwf	(___fleq@ff2+3)^0,c
  6442   004222                     l2681:
  6443   004222  5005               	movf	___fleq@ff2^0,w,c
  6444   004224  1801               	xorwf	___fleq@ff1^0,w,c
  6445   004226  E10F               	bnz	u2700
  6446   004228  5006               	movf	(___fleq@ff2+1)^0,w,c
  6447   00422A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6448   00422C  E10C               	bnz	u2700
  6449   00422E  5007               	movf	(___fleq@ff2+2)^0,w,c
  6450   004230  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6451   004232  E109               	bnz	u2700
  6452   004234  5008               	movf	(___fleq@ff2+3)^0,w,c
  6453   004236  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6454   004238  B4D8               	btfsc	status,2,c
  6455   00423A  EF21  F021         	goto	u2701
  6456   00423E  EF23  F021         	goto	u2700
  6457   004242                     u2701:
  6458   004242  EF26  F021         	goto	l2685
  6459   004246                     u2700:
  6460   004246  90D8               	bcf	status,0,c
  6461   004248  EF27  F021         	goto	l397
  6462   00424C                     l2685:
  6463   00424C  80D8               	bsf	status,0,c
  6464   00424E                     l397:
  6465   00424E  0012               	return		;funcret
  6466   004250                     __end_of___fleq:
  6467                           	callstack 0
  6468                           
  6469 ;; *************** function ___fldiv *****************
  6470 ;; Defined at:
  6471 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;  b               4    0[COMRAM] unsigned char 
  6474 ;;  a               4    4[COMRAM] unsigned char 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  grs             4   19[COMRAM] unsigned long 
  6477 ;;  rem             4   12[COMRAM] unsigned long 
  6478 ;;  new_exp         2   17[COMRAM] short 
  6479 ;;  aexp            1   24[COMRAM] unsigned char 
  6480 ;;  bexp            1   23[COMRAM] unsigned char 
  6481 ;;  sign            1   16[COMRAM] unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  4    0[COMRAM] unsigned char 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6491 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6492 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6494 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6495 ;;Total ram usage:       25 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_efgtoa
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text23
  6505   0032CA                     __ptext23:
  6506                           	callstack 0
  6507   0032CA                     ___fldiv:
  6508                           	callstack 26
  6509   0032CA  5004               	movf	(___fldiv@b+3)^0,w,c
  6510   0032CC  0B80               	andlw	128
  6511   0032CE  6E11               	movwf	___fldiv@sign^0,c
  6512   0032D0  5004               	movf	(___fldiv@b+3)^0,w,c
  6513   0032D2  2404               	addwf	(___fldiv@b+3)^0,w,c
  6514   0032D4  6E18               	movwf	___fldiv@bexp^0,c
  6515   0032D6  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6516   0032D8  EF70  F019         	goto	u2261
  6517   0032DC  EF72  F019         	goto	u2260
  6518   0032E0                     u2261:
  6519   0032E0  EF73  F019         	goto	l2409
  6520   0032E4                     u2260:
  6521   0032E4  8018               	bsf	___fldiv@bexp^0,0,c
  6522   0032E6                     l2409:
  6523   0032E6  5018               	movf	___fldiv@bexp^0,w,c
  6524   0032E8  B4D8               	btfsc	status,2,c
  6525   0032EA  EF79  F019         	goto	u2271
  6526   0032EE  EF7B  F019         	goto	u2270
  6527   0032F2                     u2271:
  6528   0032F2  EF8F  F019         	goto	l2419
  6529   0032F6                     u2270:
  6530   0032F6  2818               	incf	___fldiv@bexp^0,w,c
  6531   0032F8  A4D8               	btfss	status,2,c
  6532   0032FA  EF81  F019         	goto	u2281
  6533   0032FE  EF83  F019         	goto	u2280
  6534   003302                     u2281:
  6535   003302  EF8B  F019         	goto	l2415
  6536   003306                     u2280:
  6537   003306  0E00               	movlw	0
  6538   003308  6E01               	movwf	___fldiv@b^0,c
  6539   00330A  0E00               	movlw	0
  6540   00330C  6E02               	movwf	(___fldiv@b+1)^0,c
  6541   00330E  0E00               	movlw	0
  6542   003310  6E03               	movwf	(___fldiv@b+2)^0,c
  6543   003312  0E00               	movlw	0
  6544   003314  6E04               	movwf	(___fldiv@b+3)^0,c
  6545   003316                     l2415:
  6546   003316  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6547   003318  6A04               	clrf	(___fldiv@b+3)^0,c
  6548   00331A  EF97  F019         	goto	l2421
  6549   00331E                     l2419:
  6550   00331E  0E00               	movlw	0
  6551   003320  6E01               	movwf	___fldiv@b^0,c
  6552   003322  0E00               	movlw	0
  6553   003324  6E02               	movwf	(___fldiv@b+1)^0,c
  6554   003326  0E00               	movlw	0
  6555   003328  6E03               	movwf	(___fldiv@b+2)^0,c
  6556   00332A  0E00               	movlw	0
  6557   00332C  6E04               	movwf	(___fldiv@b+3)^0,c
  6558   00332E                     l2421:
  6559   00332E  5008               	movf	(___fldiv@a+3)^0,w,c
  6560   003330  0B80               	andlw	128
  6561   003332  1A11               	xorwf	___fldiv@sign^0,f,c
  6562   003334  5008               	movf	(___fldiv@a+3)^0,w,c
  6563   003336  2408               	addwf	(___fldiv@a+3)^0,w,c
  6564   003338  6E19               	movwf	___fldiv@aexp^0,c
  6565   00333A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6566   00333C  EFA2  F019         	goto	u2291
  6567   003340  EFA4  F019         	goto	u2290
  6568   003344                     u2291:
  6569   003344  EFA5  F019         	goto	l2429
  6570   003348                     u2290:
  6571   003348  8019               	bsf	___fldiv@aexp^0,0,c
  6572   00334A                     l2429:
  6573   00334A  5019               	movf	___fldiv@aexp^0,w,c
  6574   00334C  B4D8               	btfsc	status,2,c
  6575   00334E  EFAB  F019         	goto	u2301
  6576   003352  EFAD  F019         	goto	u2300
  6577   003356                     u2301:
  6578   003356  EFC1  F019         	goto	l2439
  6579   00335A                     u2300:
  6580   00335A  2819               	incf	___fldiv@aexp^0,w,c
  6581   00335C  A4D8               	btfss	status,2,c
  6582   00335E  EFB3  F019         	goto	u2311
  6583   003362  EFB5  F019         	goto	u2310
  6584   003366                     u2311:
  6585   003366  EFBD  F019         	goto	l2435
  6586   00336A                     u2310:
  6587   00336A  0E00               	movlw	0
  6588   00336C  6E05               	movwf	___fldiv@a^0,c
  6589   00336E  0E00               	movlw	0
  6590   003370  6E06               	movwf	(___fldiv@a+1)^0,c
  6591   003372  0E00               	movlw	0
  6592   003374  6E07               	movwf	(___fldiv@a+2)^0,c
  6593   003376  0E00               	movlw	0
  6594   003378  6E08               	movwf	(___fldiv@a+3)^0,c
  6595   00337A                     l2435:
  6596   00337A  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6597   00337C  6A08               	clrf	(___fldiv@a+3)^0,c
  6598   00337E  EFC9  F019         	goto	l2441
  6599   003382                     l2439:
  6600   003382  0E00               	movlw	0
  6601   003384  6E05               	movwf	___fldiv@a^0,c
  6602   003386  0E00               	movlw	0
  6603   003388  6E06               	movwf	(___fldiv@a+1)^0,c
  6604   00338A  0E00               	movlw	0
  6605   00338C  6E07               	movwf	(___fldiv@a+2)^0,c
  6606   00338E  0E00               	movlw	0
  6607   003390  6E08               	movwf	(___fldiv@a+3)^0,c
  6608   003392                     l2441:
  6609   003392  5005               	movf	___fldiv@a^0,w,c
  6610   003394  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6611   003396  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6612   003398  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6613   00339A  A4D8               	btfss	status,2,c
  6614   00339C  EFD2  F019         	goto	u2321
  6615   0033A0  EFD4  F019         	goto	u2320
  6616   0033A4                     u2321:
  6617   0033A4  EFEC  F019         	goto	l2453
  6618   0033A8                     u2320:
  6619   0033A8  0E00               	movlw	0
  6620   0033AA  6E01               	movwf	___fldiv@b^0,c
  6621   0033AC  0E00               	movlw	0
  6622   0033AE  6E02               	movwf	(___fldiv@b+1)^0,c
  6623   0033B0  0E00               	movlw	0
  6624   0033B2  6E03               	movwf	(___fldiv@b+2)^0,c
  6625   0033B4  0E00               	movlw	0
  6626   0033B6  6E04               	movwf	(___fldiv@b+3)^0,c
  6627   0033B8  0E80               	movlw	128
  6628   0033BA  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6629   0033BC  0E7F               	movlw	127
  6630   0033BE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6631   0033C0                     l2447:
  6632   0033C0  5011               	movf	___fldiv@sign^0,w,c
  6633   0033C2  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6634   0033C4  C001  F001         	movff	___fldiv@b,?___fldiv
  6635   0033C8  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6636   0033CC  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6637   0033D0  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6638   0033D4  EF2C  F01B         	goto	l720
  6639   0033D8                     l2453:
  6640   0033D8  5018               	movf	___fldiv@bexp^0,w,c
  6641   0033DA  A4D8               	btfss	status,2,c
  6642   0033DC  EFF2  F019         	goto	u2331
  6643   0033E0  EFF4  F019         	goto	u2330
  6644   0033E4                     u2331:
  6645   0033E4  EFFE  F019         	goto	l2461
  6646   0033E8                     u2330:
  6647   0033E8  0E00               	movlw	0
  6648   0033EA  6E01               	movwf	?___fldiv^0,c
  6649   0033EC  0E00               	movlw	0
  6650   0033EE  6E02               	movwf	(?___fldiv+1)^0,c
  6651   0033F0  0E00               	movlw	0
  6652   0033F2  6E03               	movwf	(?___fldiv+2)^0,c
  6653   0033F4  0E00               	movlw	0
  6654   0033F6  6E04               	movwf	(?___fldiv+3)^0,c
  6655   0033F8  EF2C  F01B         	goto	l720
  6656   0033FC                     l2461:
  6657   0033FC  5019               	movf	___fldiv@aexp^0,w,c
  6658   0033FE  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6659   003402  6A0A               	clrf	(??___fldiv+1)^0,c
  6660   003404  5E09               	subwf	??___fldiv^0,f,c
  6661   003406  0E00               	movlw	0
  6662   003408  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6663   00340A  0E7F               	movlw	127
  6664   00340C  2409               	addwf	??___fldiv^0,w,c
  6665   00340E  6E12               	movwf	___fldiv@new_exp^0,c
  6666   003410  0E00               	movlw	0
  6667   003412  200A               	addwfc	(??___fldiv+1)^0,w,c
  6668   003414  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6669   003416  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6670   00341A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6671   00341E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6672   003422  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6673   003426  0E00               	movlw	0
  6674   003428  6E01               	movwf	___fldiv@b^0,c
  6675   00342A  0E00               	movlw	0
  6676   00342C  6E02               	movwf	(___fldiv@b+1)^0,c
  6677   00342E  0E00               	movlw	0
  6678   003430  6E03               	movwf	(___fldiv@b+2)^0,c
  6679   003432  0E00               	movlw	0
  6680   003434  6E04               	movwf	(___fldiv@b+3)^0,c
  6681   003436  0E00               	movlw	0
  6682   003438  6E14               	movwf	___fldiv@grs^0,c
  6683   00343A  0E00               	movlw	0
  6684   00343C  6E15               	movwf	(___fldiv@grs+1)^0,c
  6685   00343E  0E00               	movlw	0
  6686   003440  6E16               	movwf	(___fldiv@grs+2)^0,c
  6687   003442  0E00               	movlw	0
  6688   003444  6E17               	movwf	(___fldiv@grs+3)^0,c
  6689   003446  6A19               	clrf	___fldiv@aexp^0,c
  6690   003448  EF5E  F01A         	goto	l722
  6691   00344C                     l2471:
  6692   00344C  5019               	movf	___fldiv@aexp^0,w,c
  6693   00344E  B4D8               	btfsc	status,2,c
  6694   003450  EF2C  F01A         	goto	u2341
  6695   003454  EF2E  F01A         	goto	u2340
  6696   003458                     u2341:
  6697   003458  EF45  F01A         	goto	l2479
  6698   00345C                     u2340:
  6699   00345C  90D8               	bcf	status,0,c
  6700   00345E  360D               	rlcf	___fldiv@rem^0,f,c
  6701   003460  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6702   003462  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6703   003464  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6704   003466  90D8               	bcf	status,0,c
  6705   003468  3601               	rlcf	___fldiv@b^0,f,c
  6706   00346A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6707   00346C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6708   00346E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6709   003470  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6710   003472  EF3D  F01A         	goto	u2351
  6711   003476  EF3F  F01A         	goto	u2350
  6712   00347A                     u2351:
  6713   00347A  EF40  F01A         	goto	l725
  6714   00347E                     u2350:
  6715   00347E  8001               	bsf	___fldiv@b^0,0,c
  6716   003480                     l725:
  6717   003480  90D8               	bcf	status,0,c
  6718   003482  3614               	rlcf	___fldiv@grs^0,f,c
  6719   003484  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6720   003486  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6721   003488  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6722   00348A                     l2479:
  6723   00348A  5005               	movf	___fldiv@a^0,w,c
  6724   00348C  5C0D               	subwf	___fldiv@rem^0,w,c
  6725   00348E  5006               	movf	(___fldiv@a+1)^0,w,c
  6726   003490  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6727   003492  5007               	movf	(___fldiv@a+2)^0,w,c
  6728   003494  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6729   003496  5008               	movf	(___fldiv@a+3)^0,w,c
  6730   003498  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6731   00349A  A0D8               	btfss	status,0,c
  6732   00349C  EF52  F01A         	goto	u2361
  6733   0034A0  EF54  F01A         	goto	u2360
  6734   0034A4                     u2361:
  6735   0034A4  EF5D  F01A         	goto	l2485
  6736   0034A8                     u2360:
  6737   0034A8  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6738   0034AA  5005               	movf	___fldiv@a^0,w,c
  6739   0034AC  5E0D               	subwf	___fldiv@rem^0,f,c
  6740   0034AE  5006               	movf	(___fldiv@a+1)^0,w,c
  6741   0034B0  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6742   0034B2  5007               	movf	(___fldiv@a+2)^0,w,c
  6743   0034B4  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6744   0034B6  5008               	movf	(___fldiv@a+3)^0,w,c
  6745   0034B8  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6746   0034BA                     l2485:
  6747   0034BA  2A19               	incf	___fldiv@aexp^0,f,c
  6748   0034BC                     l722:
  6749   0034BC  0E19               	movlw	25
  6750   0034BE  6419               	cpfsgt	___fldiv@aexp^0,c
  6751   0034C0  EF64  F01A         	goto	u2371
  6752   0034C4  EF66  F01A         	goto	u2370
  6753   0034C8                     u2371:
  6754   0034C8  EF26  F01A         	goto	l2471
  6755   0034CC                     u2370:
  6756   0034CC  500D               	movf	___fldiv@rem^0,w,c
  6757   0034CE  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6758   0034D0  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6759   0034D2  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6760   0034D4  B4D8               	btfsc	status,2,c
  6761   0034D6  EF6F  F01A         	goto	u2381
  6762   0034DA  EF71  F01A         	goto	u2380
  6763   0034DE                     u2381:
  6764   0034DE  EF89  F01A         	goto	l2497
  6765   0034E2                     u2380:
  6766   0034E2  8014               	bsf	___fldiv@grs^0,0,c
  6767   0034E4  EF89  F01A         	goto	l2497
  6768   0034E8                     l2491:
  6769   0034E8  90D8               	bcf	status,0,c
  6770   0034EA  3601               	rlcf	___fldiv@b^0,f,c
  6771   0034EC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6772   0034EE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6773   0034F0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6774   0034F2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6775   0034F4  EF7E  F01A         	goto	u2391
  6776   0034F8  EF80  F01A         	goto	u2390
  6777   0034FC                     u2391:
  6778   0034FC  EF81  F01A         	goto	l731
  6779   003500                     u2390:
  6780   003500  8001               	bsf	___fldiv@b^0,0,c
  6781   003502                     l731:
  6782   003502  90D8               	bcf	status,0,c
  6783   003504  3614               	rlcf	___fldiv@grs^0,f,c
  6784   003506  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6785   003508  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6786   00350A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6787   00350C  0612               	decf	___fldiv@new_exp^0,f,c
  6788   00350E  A0D8               	btfss	status,0,c
  6789   003510  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6790   003512                     l2497:
  6791   003512  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6792   003514  EF8E  F01A         	goto	u2401
  6793   003518  EF90  F01A         	goto	u2400
  6794   00351C                     u2401:
  6795   00351C  EF74  F01A         	goto	l2491
  6796   003520                     u2400:
  6797   003520  6A19               	clrf	___fldiv@aexp^0,c
  6798   003522  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6799   003524  EF96  F01A         	goto	u2411
  6800   003528  EF98  F01A         	goto	u2410
  6801   00352C                     u2411:
  6802   00352C  EFBC  F01A         	goto	l733
  6803   003530                     u2410:
  6804   003530  0EFF               	movlw	255
  6805   003532  1414               	andwf	___fldiv@grs^0,w,c
  6806   003534  6E09               	movwf	??___fldiv^0,c
  6807   003536  0EFF               	movlw	255
  6808   003538  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6809   00353A  6E0A               	movwf	(??___fldiv+1)^0,c
  6810   00353C  0EFF               	movlw	255
  6811   00353E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6812   003540  6E0B               	movwf	(??___fldiv+2)^0,c
  6813   003542  0E7F               	movlw	127
  6814   003544  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6815   003546  6E0C               	movwf	(??___fldiv+3)^0,c
  6816   003548  5009               	movf	??___fldiv^0,w,c
  6817   00354A  100A               	iorwf	(??___fldiv+1)^0,w,c
  6818   00354C  100B               	iorwf	(??___fldiv+2)^0,w,c
  6819   00354E  100C               	iorwf	(??___fldiv+3)^0,w,c
  6820   003550  B4D8               	btfsc	status,2,c
  6821   003552  EFAD  F01A         	goto	u2421
  6822   003556  EFAF  F01A         	goto	u2420
  6823   00355A                     u2421:
  6824   00355A  EFB3  F01A         	goto	l734
  6825   00355E                     u2420:
  6826   00355E                     l2501:
  6827   00355E  0E01               	movlw	1
  6828   003560  6E19               	movwf	___fldiv@aexp^0,c
  6829   003562  EFBC  F01A         	goto	l733
  6830   003566                     l734:
  6831   003566  A001               	btfss	___fldiv@b^0,0,c
  6832   003568  EFB8  F01A         	goto	u2431
  6833   00356C  EFBA  F01A         	goto	u2430
  6834   003570                     u2431:
  6835   003570  EFBC  F01A         	goto	l733
  6836   003574                     u2430:
  6837   003574  EFAF  F01A         	goto	l2501
  6838   003578                     l733:
  6839   003578  5019               	movf	___fldiv@aexp^0,w,c
  6840   00357A  B4D8               	btfsc	status,2,c
  6841   00357C  EFC2  F01A         	goto	u2441
  6842   003580  EFC4  F01A         	goto	u2440
  6843   003584                     u2441:
  6844   003584  EFE8  F01A         	goto	l2513
  6845   003588                     u2440:
  6846   003588  0E01               	movlw	1
  6847   00358A  2601               	addwf	___fldiv@b^0,f,c
  6848   00358C  0E00               	movlw	0
  6849   00358E  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6850   003590  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6851   003592  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6852   003594  A004               	btfss	(___fldiv@b+3)^0,0,c
  6853   003596  EFCF  F01A         	goto	u2451
  6854   00359A  EFD1  F01A         	goto	u2450
  6855   00359E                     u2451:
  6856   00359E  EFE8  F01A         	goto	l2513
  6857   0035A2                     u2450:
  6858   0035A2  C001  F009         	movff	___fldiv@b,??___fldiv
  6859   0035A6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6860   0035AA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6861   0035AE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6862   0035B2  340C               	rlcf	(??___fldiv+3)^0,w,c
  6863   0035B4  320C               	rrcf	(??___fldiv+3)^0,f,c
  6864   0035B6  320B               	rrcf	(??___fldiv+2)^0,f,c
  6865   0035B8  320A               	rrcf	(??___fldiv+1)^0,f,c
  6866   0035BA  3209               	rrcf	??___fldiv^0,f,c
  6867   0035BC  C009  F001         	movff	??___fldiv,___fldiv@b
  6868   0035C0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6869   0035C4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6870   0035C8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6871   0035CC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6872   0035CE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6873   0035D0                     l2513:
  6874   0035D0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6875   0035D2  EFF3  F01A         	goto	u2461
  6876   0035D6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6877   0035D8  E108               	bnz	u2460
  6878   0035DA  2812               	incf	___fldiv@new_exp^0,w,c
  6879   0035DC  A0D8               	btfss	status,0,c
  6880   0035DE  EFF3  F01A         	goto	u2461
  6881   0035E2  EFF5  F01A         	goto	u2460
  6882   0035E6                     u2461:
  6883   0035E6  EF00  F01B         	goto	l2517
  6884   0035EA                     u2460:
  6885   0035EA  0E00               	movlw	0
  6886   0035EC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6887   0035EE  6812               	setf	___fldiv@new_exp^0,c
  6888   0035F0  0E00               	movlw	0
  6889   0035F2  6E01               	movwf	___fldiv@b^0,c
  6890   0035F4  0E00               	movlw	0
  6891   0035F6  6E02               	movwf	(___fldiv@b+1)^0,c
  6892   0035F8  0E00               	movlw	0
  6893   0035FA  6E03               	movwf	(___fldiv@b+2)^0,c
  6894   0035FC  0E00               	movlw	0
  6895   0035FE  6E04               	movwf	(___fldiv@b+3)^0,c
  6896   003600                     l2517:
  6897   003600  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6898   003602  EF0D  F01B         	goto	u2470
  6899   003606  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6900   003608  E106               	bnz	u2471
  6901   00360A  0412               	decf	___fldiv@new_exp^0,w,c
  6902   00360C  B0D8               	btfsc	status,0,c
  6903   00360E  EF0B  F01B         	goto	u2471
  6904   003612  EF0D  F01B         	goto	u2470
  6905   003616                     u2471:
  6906   003616  EF1A  F01B         	goto	l2523
  6907   00361A                     u2470:
  6908   00361A  0E00               	movlw	0
  6909   00361C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6910   00361E  0E00               	movlw	0
  6911   003620  6E12               	movwf	___fldiv@new_exp^0,c
  6912   003622  0E00               	movlw	0
  6913   003624  6E01               	movwf	___fldiv@b^0,c
  6914   003626  0E00               	movlw	0
  6915   003628  6E02               	movwf	(___fldiv@b+1)^0,c
  6916   00362A  0E00               	movlw	0
  6917   00362C  6E03               	movwf	(___fldiv@b+2)^0,c
  6918   00362E  0E00               	movlw	0
  6919   003630  6E04               	movwf	(___fldiv@b+3)^0,c
  6920   003632  6A11               	clrf	___fldiv@sign^0,c
  6921   003634                     l2523:
  6922   003634  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6923   003638  A018               	btfss	___fldiv@bexp^0,0,c
  6924   00363A  EF21  F01B         	goto	u2481
  6925   00363E  EF23  F01B         	goto	u2480
  6926   003642                     u2481:
  6927   003642  EF26  F01B         	goto	l2529
  6928   003646                     u2480:
  6929   003646  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6930   003648  EF27  F01B         	goto	l2531
  6931   00364C                     l2529:
  6932   00364C  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6933   00364E                     l2531:
  6934   00364E  90D8               	bcf	status,0,c
  6935   003650  3018               	rrcf	___fldiv@bexp^0,w,c
  6936   003652  6E04               	movwf	(___fldiv@b+3)^0,c
  6937   003654  EFE0  F019         	goto	l2447
  6938   003658                     l720:
  6939   003658  0012               	return		;funcret
  6940   00365A                     __end_of___fldiv:
  6941                           	callstack 0
  6942                           
  6943 ;; *************** function ___xxtofl *****************
  6944 ;; Defined at:
  6945 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  sign            1    wreg     unsigned char 
  6948 ;;  val             4    0[COMRAM] long 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  sign            1    8[COMRAM] unsigned char 
  6951 ;;  arg             4   10[COMRAM] unsigned long 
  6952 ;;  exp             1    9[COMRAM] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  4    0[COMRAM] unsigned char 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6963 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6964 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6965 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6966 ;;Total ram usage:       14 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; This function calls:
  6969 ;;		Nothing
  6970 ;; This function is called by:
  6971 ;;		_main
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text24
  6976   003A7C                     __ptext24:
  6977                           	callstack 0
  6978   003A7C                     ___xxtofl:
  6979                           	callstack 30
  6980                           
  6981                           ;incstack = 0
  6982                           ;___xxtofl@sign stored from wreg
  6983   003A7C  6E09               	movwf	___xxtofl@sign^0,c
  6984   003A7E  5009               	movf	___xxtofl@sign^0,w,c
  6985   003A80  B4D8               	btfsc	status,2,c
  6986   003A82  EF45  F01D         	goto	u3521
  6987   003A86  EF47  F01D         	goto	u3520
  6988   003A8A                     u3521:
  6989   003A8A  EF69  F01D         	goto	l793
  6990   003A8E                     u3520:
  6991   003A8E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6992   003A90  EF4E  F01D         	goto	u3530
  6993   003A94  EF4C  F01D         	goto	u3531
  6994   003A98                     u3531:
  6995   003A98  EF69  F01D         	goto	l793
  6996   003A9C                     u3530:
  6997   003A9C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6998   003AA0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6999   003AA4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7000   003AA8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7001   003AAC  1E05               	comf	??___xxtofl^0,f,c
  7002   003AAE  1E06               	comf	(??___xxtofl+1)^0,f,c
  7003   003AB0  1E07               	comf	(??___xxtofl+2)^0,f,c
  7004   003AB2  1E08               	comf	(??___xxtofl+3)^0,f,c
  7005   003AB4  2A05               	incf	??___xxtofl^0,f,c
  7006   003AB6  0E00               	movlw	0
  7007   003AB8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7008   003ABA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7009   003ABC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7010   003ABE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7011   003AC2  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7012   003AC6  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7013   003ACA  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7014   003ACE  EF71  F01D         	goto	l3267
  7015   003AD2                     l793:
  7016   003AD2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7017   003AD6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7018   003ADA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7019   003ADE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7020   003AE2                     l3267:
  7021   003AE2  5001               	movf	___xxtofl@val^0,w,c
  7022   003AE4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7023   003AE6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7024   003AE8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7025   003AEA  A4D8               	btfss	status,2,c
  7026   003AEC  EF7A  F01D         	goto	u3541
  7027   003AF0  EF7C  F01D         	goto	u3540
  7028   003AF4                     u3541:
  7029   003AF4  EF86  F01D         	goto	l3273
  7030   003AF8                     u3540:
  7031   003AF8  0E00               	movlw	0
  7032   003AFA  6E01               	movwf	?___xxtofl^0,c
  7033   003AFC  0E00               	movlw	0
  7034   003AFE  6E02               	movwf	(?___xxtofl+1)^0,c
  7035   003B00  0E00               	movlw	0
  7036   003B02  6E03               	movwf	(?___xxtofl+2)^0,c
  7037   003B04  0E00               	movlw	0
  7038   003B06  6E04               	movwf	(?___xxtofl+3)^0,c
  7039   003B08  EF17  F01E         	goto	l796
  7040   003B0C                     l3273:
  7041   003B0C  0E96               	movlw	150
  7042   003B0E  6E0A               	movwf	___xxtofl@exp^0,c
  7043   003B10  EF90  F01D         	goto	l3277
  7044   003B14                     l3275:
  7045   003B14  2A0A               	incf	___xxtofl@exp^0,f,c
  7046   003B16  90D8               	bcf	status,0,c
  7047   003B18  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7048   003B1A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7049   003B1C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7050   003B1E  320B               	rrcf	___xxtofl@arg^0,f,c
  7051   003B20                     l3277:
  7052   003B20  0E00               	movlw	0
  7053   003B22  140B               	andwf	___xxtofl@arg^0,w,c
  7054   003B24  6E05               	movwf	??___xxtofl^0,c
  7055   003B26  0E00               	movlw	0
  7056   003B28  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7057   003B2A  6E06               	movwf	(??___xxtofl+1)^0,c
  7058   003B2C  0E00               	movlw	0
  7059   003B2E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7060   003B30  6E07               	movwf	(??___xxtofl+2)^0,c
  7061   003B32  0EFE               	movlw	254
  7062   003B34  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7063   003B36  6E08               	movwf	(??___xxtofl+3)^0,c
  7064   003B38  5005               	movf	??___xxtofl^0,w,c
  7065   003B3A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7066   003B3C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7067   003B3E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7068   003B40  A4D8               	btfss	status,2,c
  7069   003B42  EFA5  F01D         	goto	u3551
  7070   003B46  EFA7  F01D         	goto	u3550
  7071   003B4A                     u3551:
  7072   003B4A  EF8A  F01D         	goto	l3275
  7073   003B4E                     u3550:
  7074   003B4E  EFB5  F01D         	goto	l800
  7075   003B52                     l3279:
  7076   003B52  2A0A               	incf	___xxtofl@exp^0,f,c
  7077   003B54  0E01               	movlw	1
  7078   003B56  260B               	addwf	___xxtofl@arg^0,f,c
  7079   003B58  0E00               	movlw	0
  7080   003B5A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7081   003B5C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7082   003B5E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7083   003B60  90D8               	bcf	status,0,c
  7084   003B62  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7085   003B64  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7086   003B66  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7087   003B68  320B               	rrcf	___xxtofl@arg^0,f,c
  7088   003B6A                     l800:
  7089   003B6A  0E00               	movlw	0
  7090   003B6C  140B               	andwf	___xxtofl@arg^0,w,c
  7091   003B6E  6E05               	movwf	??___xxtofl^0,c
  7092   003B70  0E00               	movlw	0
  7093   003B72  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7094   003B74  6E06               	movwf	(??___xxtofl+1)^0,c
  7095   003B76  0E00               	movlw	0
  7096   003B78  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7097   003B7A  6E07               	movwf	(??___xxtofl+2)^0,c
  7098   003B7C  0EFF               	movlw	255
  7099   003B7E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7100   003B80  6E08               	movwf	(??___xxtofl+3)^0,c
  7101   003B82  5005               	movf	??___xxtofl^0,w,c
  7102   003B84  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7103   003B86  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7104   003B88  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7105   003B8A  A4D8               	btfss	status,2,c
  7106   003B8C  EFCA  F01D         	goto	u3561
  7107   003B90  EFCC  F01D         	goto	u3560
  7108   003B94                     u3561:
  7109   003B94  EFA9  F01D         	goto	l3279
  7110   003B98                     u3560:
  7111   003B98  EFD4  F01D         	goto	l3287
  7112   003B9C                     l3285:
  7113   003B9C  060A               	decf	___xxtofl@exp^0,f,c
  7114   003B9E  90D8               	bcf	status,0,c
  7115   003BA0  360B               	rlcf	___xxtofl@arg^0,f,c
  7116   003BA2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7117   003BA4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7118   003BA6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7119   003BA8                     l3287:
  7120   003BA8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7121   003BAA  EFD9  F01D         	goto	u3571
  7122   003BAE  EFDB  F01D         	goto	u3570
  7123   003BB2                     u3571:
  7124   003BB2  EFE3  F01D         	goto	l807
  7125   003BB6                     u3570:
  7126   003BB6  0E02               	movlw	2
  7127   003BB8  600A               	cpfslt	___xxtofl@exp^0,c
  7128   003BBA  EFE1  F01D         	goto	u3581
  7129   003BBE  EFE3  F01D         	goto	u3580
  7130   003BC2                     u3581:
  7131   003BC2  EFCE  F01D         	goto	l3285
  7132   003BC6                     u3580:
  7133   003BC6                     l807:
  7134   003BC6  B00A               	btfsc	___xxtofl@exp^0,0,c
  7135   003BC8  EFE8  F01D         	goto	u3591
  7136   003BCC  EFEA  F01D         	goto	u3590
  7137   003BD0                     u3591:
  7138   003BD0  EFEB  F01D         	goto	l3293
  7139   003BD4                     u3590:
  7140   003BD4  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7141   003BD6                     l3293:
  7142   003BD6  90D8               	bcf	status,0,c
  7143   003BD8  320A               	rrcf	___xxtofl@exp^0,f,c
  7144   003BDA  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7145   003BDE  6A06               	clrf	(??___xxtofl+1)^0,c
  7146   003BE0  6A07               	clrf	(??___xxtofl+2)^0,c
  7147   003BE2  6A08               	clrf	(??___xxtofl+3)^0,c
  7148   003BE4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7149   003BE8  6A07               	clrf	(??___xxtofl+2)^0,c
  7150   003BEA  6A06               	clrf	(??___xxtofl+1)^0,c
  7151   003BEC  6A05               	clrf	??___xxtofl^0,c
  7152   003BEE  5005               	movf	??___xxtofl^0,w,c
  7153   003BF0  120B               	iorwf	___xxtofl@arg^0,f,c
  7154   003BF2  5006               	movf	(??___xxtofl+1)^0,w,c
  7155   003BF4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7156   003BF6  5007               	movf	(??___xxtofl+2)^0,w,c
  7157   003BF8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7158   003BFA  5008               	movf	(??___xxtofl+3)^0,w,c
  7159   003BFC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7160   003BFE  5009               	movf	___xxtofl@sign^0,w,c
  7161   003C00  B4D8               	btfsc	status,2,c
  7162   003C02  EF05  F01E         	goto	u3601
  7163   003C06  EF07  F01E         	goto	u3600
  7164   003C0A                     u3601:
  7165   003C0A  EF0F  F01E         	goto	l3303
  7166   003C0E                     u3600:
  7167   003C0E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7168   003C10  EF0E  F01E         	goto	u3610
  7169   003C14  EF0C  F01E         	goto	u3611
  7170   003C18                     u3611:
  7171   003C18  EF0F  F01E         	goto	l3303
  7172   003C1C                     u3610:
  7173   003C1C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7174   003C1E                     l3303:
  7175   003C1E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7176   003C22  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7177   003C26  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7178   003C2A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7179   003C2E                     l796:
  7180   003C2E  0012               	return		;funcret
  7181   003C30                     __end_of___xxtofl:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function _LCD_String_xy *****************
  7185 ;; Defined at:
  7186 ;;		line 196 in file "LCD.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  row             1    wreg     unsigned char 
  7189 ;;  pos             1    9[COMRAM] unsigned char 
  7190 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  7191 ;;		 -> STR_3(19), data(10), 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  row             1   12[COMRAM] unsigned char 
  7194 ;;  location        1   13[COMRAM] unsigned char 
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1    wreg      void 
  7197 ;; Registers used:
  7198 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7204 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7207 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7208 ;;Total ram usage:        5 bytes
  7209 ;; Hardware stack levels used: 1
  7210 ;; Hardware stack levels required when called: 3
  7211 ;; This function calls:
  7212 ;;		_LCD_Command
  7213 ;;		_LCD_String
  7214 ;; This function is called by:
  7215 ;;		_main
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219                           	psect	text25
  7220   0044F2                     __ptext25:
  7221                           	callstack 0
  7222   0044F2                     _LCD_String_xy:
  7223                           	callstack 27
  7224                           
  7225                           ;incstack = 0
  7226                           ;LCD_String_xy@row stored from wreg
  7227   0044F2  6E0D               	movwf	LCD_String_xy@row^0,c
  7228   0044F4                     
  7229                           ;LCD.c: 199:     if(row<=1)
  7230   0044F4  0E02               	movlw	2
  7231   0044F6  600D               	cpfslt	LCD_String_xy@row^0,c
  7232   0044F8  EF80  F022         	goto	u3511
  7233   0044FC  EF82  F022         	goto	u3510
  7234   004500                     u3511:
  7235   004500  EF8B  F022         	goto	l3255
  7236   004504                     u3510:
  7237   004504                     
  7238                           ;LCD.c: 200:     {;LCD.c: 201:         location=(0x80) | ((pos) & 0x0f);
  7239   004504  500A               	movf	LCD_String_xy@pos^0,w,c
  7240   004506  0B0F               	andlw	15
  7241   004508  0980               	iorlw	128
  7242   00450A  6E0E               	movwf	LCD_String_xy@location^0,c
  7243   00450C                     
  7244                           ;LCD.c: 202:         LCD_Command(location);
  7245   00450C  500E               	movf	LCD_String_xy@location^0,w,c
  7246   00450E  EC51  F023         	call	_LCD_Command
  7247                           
  7248                           ;LCD.c: 203:     }
  7249   004512  EF92  F022         	goto	l3259
  7250   004516                     l3255:
  7251                           
  7252                           ;LCD.c: 205:     {;LCD.c: 206:         location=(0xC0) | ((pos) & 0x0f);
  7253   004516  500A               	movf	LCD_String_xy@pos^0,w,c
  7254   004518  0B0F               	andlw	15
  7255   00451A  09C0               	iorlw	192
  7256   00451C  6E0E               	movwf	LCD_String_xy@location^0,c
  7257   00451E                     
  7258                           ;LCD.c: 207:         LCD_Command(location);
  7259   00451E  500E               	movf	LCD_String_xy@location^0,w,c
  7260   004520  EC51  F023         	call	_LCD_Command
  7261   004524                     l3259:
  7262                           
  7263                           ;LCD.c: 209:     LCD_String(msg);
  7264   004524  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  7265   004528  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7266   00452C  EC28  F021         	call	_LCD_String	;wreg free
  7267   004530  0012               	return		;funcret
  7268   004532                     __end_of_LCD_String_xy:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _LCD_String *****************
  7272 ;; Defined at:
  7273 ;;		line 187 in file "LCD.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  7276 ;;		 -> STR_3(19), data(10), 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7292 ;;Total ram usage:        2 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 2
  7295 ;; This function calls:
  7296 ;;		_LCD_Char
  7297 ;; This function is called by:
  7298 ;;		_LCD_String_xy
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text26
  7303   004250                     __ptext26:
  7304                           	callstack 0
  7305   004250                     _LCD_String:
  7306                           	callstack 27
  7307   004250                     
  7308                           ;LCD.c: 187: void LCD_String(const char *msg);LCD.c: 188: {;LCD.c: 189:     while((*msg)
      +                          !=0)
  7309   004250  EF43  F021         	goto	l3183
  7310   004254                     l3179:
  7311                           
  7312                           ;LCD.c: 190:     {;LCD.c: 191:       LCD_Char(*msg);
  7313   004254  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
  7314   00425A  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
  7315   004260  0E00               	movlw	low (__smallconst shr (0+16))
  7316   004262  6EF8               	movwf	tblptru,c
  7317   004264  0E1F               	movlw	(high __ramtop+-1)
  7318   004266  64F7               	cpfsgt	tblptrh,c
  7319   004268  D003               	bra	u3457
  7320   00426A  0008               	tblrd		*
  7321   00426C  50F5               	movf	tablat,w,c
  7322   00426E  D007               	bra	u3450
  7323   004270                     u3457:
  7324   004270  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7325   004276  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7326   00427C  50E7               	movf	indf1,w,c
  7327   00427E                     u3450:
  7328   00427E  EC42  F023         	call	_LCD_Char
  7329   004282                     
  7330                           ;LCD.c: 192:       msg++;
  7331   004282  4A08               	infsnz	LCD_String@msg^0,f,c
  7332   004284  2A09               	incf	(LCD_String@msg+1)^0,f,c
  7333   004286                     l3183:
  7334                           
  7335                           ;LCD.c: 189:     while((*msg)!=0)
  7336   004286  0060  F023  FFF6   	movff	LCD_String@msg,tblptrl
  7337   00428C  0060  F027  FFF7   	movff	LCD_String@msg+1,tblptrh
  7338   004292  0E00               	movlw	low (__smallconst shr (0+16))
  7339   004294  6EF8               	movwf	tblptru,c
  7340   004296  0E1F               	movlw	(high __ramtop+-1)
  7341   004298  64F7               	cpfsgt	tblptrh,c
  7342   00429A  D003               	bra	u3467
  7343   00429C  0008               	tblrd		*
  7344   00429E  50F5               	movf	tablat,w,c
  7345   0042A0  D007               	bra	u3460
  7346   0042A2                     u3467:
  7347   0042A2  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7348   0042A8  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7349   0042AE  50E7               	movf	indf1,w,c
  7350   0042B0                     u3460:
  7351   0042B0  0900               	iorlw	0
  7352   0042B2  A4D8               	btfss	status,2,c
  7353   0042B4  EF5E  F021         	goto	u3471
  7354   0042B8  EF60  F021         	goto	u3470
  7355   0042BC                     u3471:
  7356   0042BC  EF2A  F021         	goto	l3179
  7357   0042C0                     u3470:
  7358   0042C0  0012               	return		;funcret
  7359   0042C2                     __end_of_LCD_String:
  7360                           	callstack 0
  7361                           
  7362 ;; *************** function _LCD_Char *****************
  7363 ;; Defined at:
  7364 ;;		line 176 in file "LCD.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  dat             1    wreg     unsigned char 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  dat             1    6[COMRAM] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg, status,2, status,0, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;Total ram usage:        1 bytes
  7383 ;; Hardware stack levels used: 1
  7384 ;; Hardware stack levels required when called: 1
  7385 ;; This function calls:
  7386 ;;		_MSdelay
  7387 ;; This function is called by:
  7388 ;;		_LCD_String
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text27
  7393   004684                     __ptext27:
  7394                           	callstack 0
  7395   004684                     _LCD_Char:
  7396                           	callstack 27
  7397                           
  7398                           ;incstack = 0
  7399                           ;LCD_Char@dat stored from wreg
  7400   004684  6E07               	movwf	LCD_Char@dat^0,c
  7401   004686                     
  7402                           ;LCD.c: 176: void LCD_Char(char dat);LCD.c: 177: {;LCD.c: 178:     LATB= dat;
  7403   004686  0060  F01F  FFBB   	movff	LCD_Char@dat,16315	;volatile
  7404   00468C                     
  7405                           ;LCD.c: 179:     LATD0 = 1;
  7406   00468C  80BD               	bsf	16317,0,c	;volatile
  7407   00468E                     
  7408                           ;LCD.c: 180:     LATD1=1;
  7409   00468E  82BD               	bsf	16317,1,c	;volatile
  7410   004690                     
  7411                           ;LCD.c: 181:     __nop();
  7412   004690  0000               	nop	
  7413   004692                     
  7414                           ;LCD.c: 182:     LATD1=0;
  7415   004692  92BD               	bcf	16317,1,c	;volatile
  7416   004694                     
  7417                           ;LCD.c: 183:     MSdelay(1);
  7418   004694  0E00               	movlw	0
  7419   004696  6E02               	movwf	(MSdelay@val+1)^0,c
  7420   004698  0E01               	movlw	1
  7421   00469A  6E01               	movwf	MSdelay@val^0,c
  7422   00469C  ECEE  F021         	call	_MSdelay	;wreg free
  7423   0046A0  0012               	return		;funcret
  7424   0046A2                     __end_of_LCD_Char:
  7425                           	callstack 0
  7426                           
  7427 ;; *************** function _LCD_Init *****************
  7428 ;; Defined at:
  7429 ;;		line 150 in file "LCD.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;		None
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;Total ram usage:        0 bytes
  7448 ;; Hardware stack levels used: 1
  7449 ;; Hardware stack levels required when called: 2
  7450 ;; This function calls:
  7451 ;;		_LCD_Command
  7452 ;;		_MSdelay
  7453 ;; This function is called by:
  7454 ;;		_main
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text28
  7459   004616                     __ptext28:
  7460                           	callstack 0
  7461   004616                     _LCD_Init:
  7462                           	callstack 28
  7463   004616                     
  7464                           ;LCD.c: 152:     MSdelay(15);
  7465   004616  0E00               	movlw	0
  7466   004618  6E02               	movwf	(MSdelay@val+1)^0,c
  7467   00461A  0E0F               	movlw	15
  7468   00461C  6E01               	movwf	MSdelay@val^0,c
  7469   00461E  ECEE  F021         	call	_MSdelay	;wreg free
  7470   004622                     
  7471                           ;LCD.c: 153:     TRISB = 0x00;
  7472   004622  6AC3               	clrf	195,c	;volatile
  7473   004624                     
  7474                           ;LCD.c: 154:     TRISD = 0x00;
  7475   004624  6AC5               	clrf	197,c	;volatile
  7476                           
  7477                           ;LCD.c: 155:     LCD_Command(0x01);
  7478   004626  0E01               	movlw	1
  7479   004628  EC51  F023         	call	_LCD_Command
  7480                           
  7481                           ;LCD.c: 156:     LCD_Command(0x38);
  7482   00462C  0E38               	movlw	56
  7483   00462E  EC51  F023         	call	_LCD_Command
  7484                           
  7485                           ;LCD.c: 157:     LCD_Command(0x0c);
  7486   004632  0E0C               	movlw	12
  7487   004634  EC51  F023         	call	_LCD_Command
  7488                           
  7489                           ;LCD.c: 158:     LCD_Command(0x06);
  7490   004638  0E06               	movlw	6
  7491   00463A  EC51  F023         	call	_LCD_Command
  7492   00463E  0012               	return		;funcret
  7493   004640                     __end_of_LCD_Init:
  7494                           	callstack 0
  7495                           
  7496 ;; *************** function _LCD_Command *****************
  7497 ;; Defined at:
  7498 ;;		line 166 in file "LCD.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  cmd             1    wreg     unsigned char 
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  cmd             1    6[COMRAM] unsigned char 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg, status,2, status,0, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7516 ;;Total ram usage:        1 bytes
  7517 ;; Hardware stack levels used: 1
  7518 ;; Hardware stack levels required when called: 1
  7519 ;; This function calls:
  7520 ;;		_MSdelay
  7521 ;; This function is called by:
  7522 ;;		_LCD_Init
  7523 ;;		_LCD_String_xy
  7524 ;;		_LCD_Clear
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text29
  7529   0046A2                     __ptext29:
  7530                           	callstack 0
  7531   0046A2                     _LCD_Command:
  7532                           	callstack 28
  7533                           
  7534                           ;incstack = 0
  7535                           ;LCD_Command@cmd stored from wreg
  7536   0046A2  6E07               	movwf	LCD_Command@cmd^0,c
  7537   0046A4                     
  7538                           ;LCD.c: 166: void LCD_Command(char cmd );LCD.c: 167: {;LCD.c: 168:     LATB= cmd;
  7539   0046A4  0060  F01F  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  7540   0046AA                     
  7541                           ;LCD.c: 169:     LATD0 = 0;
  7542   0046AA  90BD               	bcf	16317,0,c	;volatile
  7543   0046AC                     
  7544                           ;LCD.c: 170:     LATD1 = 1;
  7545   0046AC  82BD               	bsf	16317,1,c	;volatile
  7546   0046AE                     
  7547                           ;LCD.c: 171:     __nop();
  7548   0046AE  0000               	nop	
  7549   0046B0                     
  7550                           ;LCD.c: 172:     LATD1 = 0;
  7551   0046B0  92BD               	bcf	16317,1,c	;volatile
  7552   0046B2                     
  7553                           ;LCD.c: 173:     MSdelay(3);
  7554   0046B2  0E00               	movlw	0
  7555   0046B4  6E02               	movwf	(MSdelay@val+1)^0,c
  7556   0046B6  0E03               	movlw	3
  7557   0046B8  6E01               	movwf	MSdelay@val^0,c
  7558   0046BA  ECEE  F021         	call	_MSdelay	;wreg free
  7559   0046BE  0012               	return		;funcret
  7560   0046C0                     __end_of_LCD_Command:
  7561                           	callstack 0
  7562                           
  7563 ;; *************** function _MSdelay *****************
  7564 ;; Defined at:
  7565 ;;		line 213 in file "LCD.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  val             2    0[COMRAM] unsigned int 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  j               2    4[COMRAM] unsigned int 
  7570 ;;  i               2    2[COMRAM] unsigned int 
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7581 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7584 ;;Total ram usage:        6 bytes
  7585 ;; Hardware stack levels used: 1
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_LCD_Init
  7590 ;;		_LCD_Command
  7591 ;;		_LCD_Char
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text30
  7596   0043DC                     __ptext30:
  7597                           	callstack 0
  7598   0043DC                     _MSdelay:
  7599                           	callstack 27
  7600   0043DC                     
  7601                           ;LCD.c: 213: void MSdelay(unsigned int val);LCD.c: 214: {;LCD.c: 215:      unsigned int 
      +                          i,j;;LCD.c: 216:         for(i=0;i<val;i++)
  7602   0043DC  0E00               	movlw	0
  7603   0043DE  6E04               	movwf	(MSdelay@i+1)^0,c
  7604   0043E0  0E00               	movlw	0
  7605   0043E2  6E03               	movwf	MSdelay@i^0,c
  7606   0043E4  EF07  F022         	goto	l2861
  7607   0043E8                     l2849:
  7608                           
  7609                           ;LCD.c: 217:             for(j=0;j<165;j++);
  7610   0043E8  0E00               	movlw	0
  7611   0043EA  6E06               	movwf	(MSdelay@j+1)^0,c
  7612   0043EC  0E00               	movlw	0
  7613   0043EE  6E05               	movwf	MSdelay@j^0,c
  7614   0043F0                     l2855:
  7615   0043F0  4A05               	infsnz	MSdelay@j^0,f,c
  7616   0043F2  2A06               	incf	(MSdelay@j+1)^0,f,c
  7617   0043F4  5006               	movf	(MSdelay@j+1)^0,w,c
  7618   0043F6  E109               	bnz	u3060
  7619   0043F8  0EA5               	movlw	165
  7620   0043FA  5C05               	subwf	MSdelay@j^0,w,c
  7621   0043FC  A0D8               	btfss	status,0,c
  7622   0043FE  EF03  F022         	goto	u3061
  7623   004402  EF05  F022         	goto	u3060
  7624   004406                     u3061:
  7625   004406  EFF8  F021         	goto	l2855
  7626   00440A                     u3060:
  7627   00440A  4A03               	infsnz	MSdelay@i^0,f,c
  7628   00440C  2A04               	incf	(MSdelay@i+1)^0,f,c
  7629   00440E                     l2861:
  7630   00440E  5001               	movf	MSdelay@val^0,w,c
  7631   004410  5C03               	subwf	MSdelay@i^0,w,c
  7632   004412  5002               	movf	(MSdelay@val+1)^0,w,c
  7633   004414  5804               	subwfb	(MSdelay@i+1)^0,w,c
  7634   004416  A0D8               	btfss	status,0,c
  7635   004418  EF10  F022         	goto	u3071
  7636   00441C  EF12  F022         	goto	u3070
  7637   004420                     u3071:
  7638   004420  EFF4  F021         	goto	l2849
  7639   004424                     u3070:
  7640   004424  0012               	return		;funcret
  7641   004426                     __end_of_MSdelay:
  7642                           	callstack 0
  7643                           
  7644 ;; *************** function _ADC_Init *****************
  7645 ;; Defined at:
  7646 ;;		line 220 in file "LCD.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;		None
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      void 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7664 ;;Total ram usage:        0 bytes
  7665 ;; Hardware stack levels used: 1
  7666 ;; This function calls:
  7667 ;;		Nothing
  7668 ;; This function is called by:
  7669 ;;		_main
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           	psect	text31
  7674   004640                     __ptext31:
  7675                           	callstack 0
  7676   004640                     _ADC_Init:
  7677                           	callstack 30
  7678   004640                     
  7679                           ;LCD.c: 239:     TRISAbits.TRISA0 = 1;
  7680   004640  80C2               	bsf	194,0,c	;volatile
  7681                           
  7682                           ;LCD.c: 240:     ANSELAbits.ANSELA0 = 1;
  7683   004642  013A               	movlb	58	; () banked
  7684   004644  8140               	bsf	64,0,b	;volatile
  7685   004646                     
  7686                           ; BSR set to: 58
  7687                           ;LCD.c: 241:     ADCON0bits.FM = 1;
  7688   004646  013E               	movlb	62	; () banked
  7689   004648  51F8               	movf	248,w,b	;volatile
  7690   00464A  0BF3               	andlw	-13
  7691   00464C  0904               	iorlw	4
  7692   00464E  6FF8               	movwf	248,b	;volatile
  7693   004650                     
  7694                           ; BSR set to: 62
  7695                           ;LCD.c: 242:     ADCON0bits.CS = 1;
  7696   004650  89F8               	bsf	248,4,b	;volatile
  7697   004652                     
  7698                           ; BSR set to: 62
  7699                           ;LCD.c: 243:     ADCLK = 0x00;
  7700   004652  6BFF               	clrf	255,b	;volatile
  7701   004654                     
  7702                           ; BSR set to: 62
  7703                           ;LCD.c: 244:     ADPCH = 0x00;
  7704   004654  6BF1               	clrf	241,b	;volatile
  7705   004656                     
  7706                           ; BSR set to: 62
  7707                           ;LCD.c: 245:     ADCAP = 0x0;
  7708   004656  6BF5               	clrf	245,b	;volatile
  7709   004658                     
  7710                           ; BSR set to: 62
  7711                           ;LCD.c: 246:     ADREF = 0x0;
  7712   004658  6BFD               	clrf	253,b	;volatile
  7713   00465A                     
  7714                           ; BSR set to: 62
  7715                           ;LCD.c: 247:     ADPREL = 0x0;
  7716   00465A  6BF6               	clrf	246,b	;volatile
  7717   00465C                     
  7718                           ; BSR set to: 62
  7719                           ;LCD.c: 248:     ADPREH = 0x0;
  7720   00465C  6BF7               	clrf	247,b	;volatile
  7721   00465E                     
  7722                           ; BSR set to: 62
  7723                           ;LCD.c: 249:     ADACQL = 0x00;
  7724   00465E  6BF3               	clrf	243,b	;volatile
  7725   004660                     
  7726                           ; BSR set to: 62
  7727                           ;LCD.c: 250:     ADACQH = 0x00;
  7728   004660  6BF4               	clrf	244,b	;volatile
  7729   004662                     
  7730                           ; BSR set to: 62
  7731                           ;LCD.c: 251:     ADCON0bits.ON = 1;
  7732   004662  8FF8               	bsf	248,7,b	;volatile
  7733   004664                     
  7734                           ; BSR set to: 62
  7735   004664  0012               	return		;funcret
  7736   004666                     __end_of_ADC_Init:
  7737                           	callstack 0
  7738                           
  7739                           	psect	rparam
  7740   000001                     ___rparam_used  equ	1
  7741   000000                     ___param_bank   equ	0
  7742   000000                     __Lparam        equ	__Lrparam
  7743   000000                     __Hparam        equ	__Hrparam
  7744                           
  7745                           	psect	config
  7746                           
  7747                           ;Config register CONFIG1L @ 0x300000
  7748                           ;	External Oscillator Selection
  7749                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  7750                           ;	Reset Oscillator Selection
  7751                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  7752   300000                     	org	3145728
  7753   300000  F8                 	db	248
  7754                           
  7755                           ;Config register CONFIG1H @ 0x300001
  7756                           ;	Clock out Enable bit
  7757                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7758                           ;	PRLOCKED One-Way Set Enable bit
  7759                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  7760                           ;	Clock Switch Enable bit
  7761                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7762                           ;	Fail-Safe Clock Monitor Enable bit
  7763                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7764   300001                     	org	3145729
  7765   300001  FF                 	db	255
  7766                           
  7767                           ;Config register CONFIG2L @ 0x300002
  7768                           ;	MCLR Enable bit
  7769                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7770                           ;	Power-up timer selection bits
  7771                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  7772                           ;	Multi-vector enable bit
  7773                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  7774                           ;	IVTLOCK bit One-way set enable bit
  7775                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  7776                           ;	Low Power BOR Enable bit
  7777                           ;	LPBOREN = OFF, ULPBOR disabled
  7778                           ;	Brown-out Reset Enable bits
  7779                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7780   300002                     	org	3145730
  7781   300002  FF                 	db	255
  7782                           
  7783                           ;Config register CONFIG2H @ 0x300003
  7784                           ;	Brown-out Reset Voltage Selection bits
  7785                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  7786                           ;	ZCD Disable bit
  7787                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7788                           ;	PPSLOCK bit One-Way Set Enable bit
  7789                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7790                           ;	Stack Full/Underflow Reset Enable bit
  7791                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7792                           ;	Debugger Enable bit
  7793                           ;	DEBUG = OFF, Background debugger disabled
  7794                           ;	Extended Instruction Set Enable bit
  7795                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7796   300003                     	org	3145731
  7797   300003  FF                 	db	255
  7798                           
  7799                           ;Config register CONFIG3L @ 0x300004
  7800                           ;	WDT Period selection bits
  7801                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7802                           ;	WDT operating mode
  7803                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  7804   300004                     	org	3145732
  7805   300004  9F                 	db	159
  7806                           
  7807                           ;Config register CONFIG3H @ 0x300005
  7808                           ;	WDT Window Select bits
  7809                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7810                           ;	WDT input clock selector
  7811                           ;	WDTCCS = SC, Software Control
  7812   300005                     	org	3145733
  7813   300005  FF                 	db	255
  7814                           
  7815                           ;Config register CONFIG4L @ 0x300006
  7816                           ;	Boot Block Size selection bits
  7817                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7818                           ;	Boot Block enable bit
  7819                           ;	BBEN = OFF, Boot block disabled
  7820                           ;	Storage Area Flash enable bit
  7821                           ;	SAFEN = OFF, SAF disabled
  7822                           ;	Application Block write protection bit
  7823                           ;	WRTAPP = OFF, Application Block not write protected
  7824   300006                     	org	3145734
  7825   300006  FF                 	db	255
  7826                           
  7827                           ;Config register CONFIG4H @ 0x300007
  7828                           ;	Boot Block Write Protection bit
  7829                           ;	WRTB = OFF, Boot Block not write-protected
  7830                           ;	Configuration Register Write Protection bit
  7831                           ;	WRTC = OFF, Configuration registers not write-protected
  7832                           ;	Data EEPROM Write Protection bit
  7833                           ;	WRTD = OFF, Data EEPROM not write-protected
  7834                           ;	SAF Write protection bit
  7835                           ;	WRTSAF = OFF, SAF not Write Protected
  7836                           ;	Low Voltage Programming Enable bit
  7837                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7838   300007                     	org	3145735
  7839   300007  FF                 	db	255
  7840                           
  7841                           ;Config register CONFIG5L @ 0x300008
  7842                           ;	PFM and Data EEPROM Code Protection bit
  7843                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7844   300008                     	org	3145736
  7845   300008  FF                 	db	255
  7846                           
  7847                           ;Config register CONFIG5H @ 0x300009
  7848                           ;	unspecified, using default values
  7849   300009                     	org	3145737
  7850   300009  FF                 	db	255
  7851                           tosu	equ	0x3FFF
  7852                           tosh	equ	0x3FFE
  7853                           tosl	equ	0x3FFD
  7854                           stkptr	equ	0x3FFC
  7855                           pclatu	equ	0x3FFB
  7856                           pclath	equ	0x3FFA
  7857                           pcl	equ	0x3FF9
  7858                           tblptru	equ	0x3FF8
  7859                           tblptrh	equ	0x3FF7
  7860                           tblptrl	equ	0x3FF6
  7861                           tablat	equ	0x3FF5
  7862                           prodh	equ	0x3FF4
  7863                           prodl	equ	0x3FF3
  7864                           indf0	equ	0x3FEF
  7865                           postinc0	equ	0x3FEE
  7866                           postdec0	equ	0x3FED
  7867                           preinc0	equ	0x3FEC
  7868                           plusw0	equ	0x3FEB
  7869                           fsr0h	equ	0x3FEA
  7870                           fsr0l	equ	0x3FE9
  7871                           wreg	equ	0x3FE8
  7872                           indf1	equ	0x3FE7
  7873                           postinc1	equ	0x3FE6
  7874                           postdec1	equ	0x3FE5
  7875                           preinc1	equ	0x3FE4
  7876                           plusw1	equ	0x3FE3
  7877                           fsr1h	equ	0x3FE2
  7878                           fsr1l	equ	0x3FE1
  7879                           bsr	equ	0x3FE0
  7880                           indf2	equ	0x3FDF
  7881                           postinc2	equ	0x3FDE
  7882                           postdec2	equ	0x3FDD
  7883                           preinc2	equ	0x3FDC
  7884                           plusw2	equ	0x3FDB
  7885                           fsr2h	equ	0x3FDA
  7886                           fsr2l	equ	0x3FD9
  7887                           status	equ	0x3FD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      94
    BANK0           160     50     152
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 19
		 -> data(BANK0[10]), STR_3(CODE[19]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 19
		 -> data(BANK0[10]), STR_3(CODE[19]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S688$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    S688$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 10
		 -> data(BANK0[10]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK0[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14772
                                             84 COMRAM     2     2      0
                           _ADC_Init
                           _LCD_Init
                      _LCD_String_xy
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     2      2     122
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6   12174
                                             72 COMRAM    12    12      0
                                             44 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   11969
                                             68 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   11835
                                             58 COMRAM    10     7      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              52    46      6   10905
                                             51 COMRAM     7     1      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               4     2      2      77
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     707
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     331
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     3      4     146
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4      69
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     340
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     137
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     232
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2037
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    1988
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      46
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    1480
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     190
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8      94
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1131
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     440
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     170
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     124
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     124
                                              6 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2      95
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
   _strcat

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1205      0       0      0.0%
BITBIGSFRll        576      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     50     152     95.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     86      94     98.9%
STACK                0      0       0      0.0%
DATA                 0      0     246      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 16:05:44 2025

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                           _x 005E  
              ___fldiv@sign 0011                ?_LCD_Command 0001                          l96 3C60  
               ?_LCD_String 0008                         l110 46BE                         l104 463E  
                       l113 46A0                         l132 4424                         l124 4530  
                       l135 4664                         l119 42C0                         l403 3EFC  
                       l412 45DE                         l408 3F42                         l435 3E3E  
                       l800 3B6A                         l720 3658                         l722 34BC  
                       l731 3502                         l732 3520                         l708 446A  
                       l733 3578                         l725 3480                         l397 424E  
                       l734 3566                         l807 3BC6                         l903 40F0  
                       l760 317C                         l752 2F44                         l680 2D5A  
                       l816 4614                         l761 31D4                         l762 31C2  
                       l666 2BB2                         l683 2CCC                         l675 2E7E  
                       l667 2BA0                         l843 433A                         l907 40F8  
                       l756 32C8                         l692 2D9A                         l668 2B66  
                       l693 2D88                         l861 239A                         l917 3924  
                       l934 44AE                         l759 315E                         l951 386A  
                       l847 4384                         l863 21E0                         l927 3A7A  
                       l944 4040                         l793 3AD2                         l769 328A  
                       l954 37AE                         l858 29C8                         l699 2E42  
                       l971 44F0                         l891 27E0                         l796 3C2E  
                       l965 43DA                         l983 41A4                         l991 456C  
                       l994 46C0                         _pad 4324                         wreg 3FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                 LCD_Char@dat 0007  
              ___fltol@exp1 000A                        l1003 4322                        l1009 45A6  
                      l2201 29CA                        l3001 26BC                        l2211 2A06  
                      l2203 29D6                        l3011 271E                        l3003 26C2  
                      l3101 468E                        l2301 2BD0                        l2221 2A34  
                      l2213 2A16                        l2205 29E4                        l3021 27B6  
                      l3013 2726                        l3005 26F6                        l3103 4690  
                      l2311 2C10                        l2231 2A5E                        l2223 2A46  
                      l2215 2A18                        l2207 29E6                        l3031 2810  
                      l3023 27D6                        l3015 272A                        l3007 270A  
                      l3111 3894                        l3201 4652                        l3105 4692  
                      l2321 2C3A                        l2313 2C1C                        l2305 2BE4  
                      l2233 2A6E                        l2241 2A96                        l2225 2A48  
                      l2209 29F6                        l2217 2A1E                        l2401 4550  
                      l3041 2834                        l3033 2816                        l3025 27F2  
                      l3017 2732                        l3009 270E                        l3121 38DE  
                      l3113 389C                        l3211 465C                        l3203 4654  
                      l3107 4694                        l2411 32F6                        l2403 32CA  
                      l2331 2CAC                        l2315 2C20                        l2307 2BF4  
                      l2323 2C40                        l2251 2ACE                        l2243 2AA6  
                      l2235 2A7E                        l2227 2A4E                        l2219 2A2E  
                      l3051 2864                        l3035 281E                        l3027 2800  
                      l3043 283A                        l3019 273E                        l3123 38F2  
                      l3115 38AA                        l3213 465E                        l3205 4656  
                      l3301 3C1C                        l2501 355E                        l2421 332E  
                      l2413 3306                        l2405 32D6                        l2341 2D06  
                      l2325 2C66                        l2333 2CBC                        l2317 2C2E  
                      l2309 2C02                        l2261 2AE2                        l2253 2AD2  
                      l2245 2AB8                        l2237 2A8E                        l2229 2A5C  
                      l3061 291A                        l3053 28BC                        l3045 284C  
                      l3037 282A                        l3029 280C                        l3133 392A  
                      l3125 38FC                        l3117 38AE                        l3109 386C  
                      l3221 45E8                        l3215 4660                        l3207 4658  
                      l3303 3C1E                        l2511 35CC                        l2431 335A  
                      l2423 3334                        l2415 3316                        l2407 32E4  
                      l2351 2D36                        l2343 2D10                        l2335 2CE2  
                      l2327 2C9A                        l2319 2C30                        l2271 2AF6  
                      l2263 2AE6                        l2255 2AD6                        l2247 2AC6  
                      l2239 2A90                        l2191 411A                        l3071 296E  
                      l3063 2936                        l3055 28F0                        l3047 285A  
                      l3039 282E                        l3143 39D2                        l3135 3948  
                      l3127 3916                        l3119 38D6                        l3223 45F0  
                      l3231 42C2                        l3311 3C3C                        l3217 4662  
                      l3209 465A                        l3241 4616                        l2521 3632  
                      l2505 3588                        l2513 35D0                        l2441 3392  
                      l2433 336A                        l2425 333A                        l2417 3318  
                      l2409 32E6                        l2601 302A                        l2361 2D80  
                      l2353 2D3A                        l2345 2D1E                        l2337 2CF2  
                      l2329 2C9C                        l2281 2B32                        l2273 2AFA  
                      l2265 2AEA                        l2257 2ADA                        l2249 2ACA  
                      l2193 4124                        l3073 2986                        l3065 293E  
                      l3057 28F8                        l3049 285E                        l3153 3A28  
                      l3145 39E8                        l3137 396E                        l3129 391C  
                      l3225 45F8                        l3233 42CE                        l3321 3C46  
                      l3313 3C3E                        l3171 46AE                        l3243 4622  
                      l3251 4504                        l2531 364E                        l2523 3634  
                      l2515 35EA                        l2507 3594                        l2443 33A8  
                      l2435 337A                        l2427 3348                        l2419 331E  
                      l2611 3098                        l2603 303A                        l2371 2DFE  
                      l2355 2D4A                        l2347 2D20                        l2291 2B84  
                      l2283 2B4E                        l2275 2AFE                        l2267 2AEE  
                      l2259 2ADE                        l2195 4140                        l2187 40FA  
                      l3075 2996                        l3067 2948                        l3059 28FC  
                      l3091 409A                        l3083 4042                        l3147 39F6  
                      l3139 39A0                        l3155 3A46                        l3227 4608  
                      l3219 45E0                        l3235 42D2                        l3331 3C50  
                      l3323 3C48                        l3315 3C40                        l3307 3C30  
                      l3173 46B0                        l3165 46A4                        l3245 4624  
                      l3181 4282                        l3253 450C                        l3261 3A7E  
                      l2525 3638                        l2517 3600                        l2509 35A2  
                      l2461 33FC                        l2445 33B8                        l2453 33D8  
                      l2437 337C                        l2429 334A                        l2701 3EDC  
                      l2621 3144                        l2613 30B8                        l2605 3058  
                      l2541 2E8C                        l2381 2E50                        l2365 2DAA  
                      l2373 2E00                        l2349 2D2E                        l2357 2D4C  
                      l2293 2B92                        l2285 2B5E                        l2277 2B02  
                      l2269 2AF2                        l2197 4172                        l2189 410A  
                      l3077 29AA                        l3069 2960                        l3093 40BC  
                      l3085 404A                        l3237 42EE                        l3341 3C5C  
                      l3333 3C52                        l3325 3C4A                        l3317 3C42  
                      l3309 3C38                        l3175 46B2                        l3167 46AA  
                      l3183 4286                        l3255 4516                        l3247 44F4  
                      l3263 3A8E                        l2527 3646                        l2519 361A  
                      l2471 344C                        l2463 3416                        l2455 33E8  
                      l2447 33C0                        l2439 3382                        l2703 3EEA  
                      l2631 31BA                        l2623 314E                        l2615 30E2  
                      l2607 3068                        l2551 2ECC                        l2543 2E9A  
                      l2711 45A8                        l2391 2E6E                        l2383 2E56  
                      l2375 2E10                        l2367 2DB6                        l2359 2D6A  
                      l2295 2B94                        l2287 2B74                        l2279 2B06  
                      l3079 29B2                        l3087 4072                        l3095 40C4  
                      l3159 3A52                        l3191 44A6                        l3239 42F4  
                      l3351 3CDE                        l3343 3C6E                        l3335 3C54  
                      l3327 3C4C                        l3319 3C44                        l3169 46AC  
                      l3097 4686                        l3177 4250                        l3257 451E  
                      l3249 44F4                        l3281 3B54                        l3273 3B0C  
                      l3265 3A9C                        l2529 364C                        l2481 34A8  
                      l2473 345C                        l2465 3426                        l2457 33E8  
                      l2449 33C4                        l2705 3F3A                        l2641 3228  
                      l2625 315C                        l2617 3118                        l2609 3088  
                      l2561 2EFC                        l2553 2ED2                        l2545 2E9C  
                      l2713 45BE                        l2385 2E58                        l2377 2E20  
                      l2369 2DC4                        l2297 2B9E                        l2289 2B80  
                      l2721 3D50                        l2801 4386                        l3089 407A  
                      l3185 446C                        l3353 3CFC                        l3345 3C86  
                      l3337 3C56                        l3329 3C4E                        l3195 4640  
                      l3099 468C                        l3179 4254                        l3259 4524  
                      l3291 3BD4                        l3283 3B60                        l3275 3B14  
                      l3267 3AE2                        l2491 34E8                        l2483 34AA  
                      l2475 3470                        l2467 3436                        l2707 3F40  
                      l2651 3284                        l2635 31E4                        l2643 322C  
                      l2627 316E                        l2619 3126                        l2571 2F34  
                      l2563 2EFE                        l2555 2EE2                        l2547 2EAC  
                      l2539 2E80                        l2715 45CE                        l2387 2E5E  
                      l2379 2E40                        l2299 2BC0                        l2731 3DA0  
                      l2811 367A                        l2803 4394                        l2395 4532  
                      l3187 4474                        l3355 3D08                        l3347 3CD2  
                      l3339 3C58                        l3197 4646                        l3293 3BD6  
                      l3285 3B9C                        l3277 3B20                        l3269 3AF8  
                      l2493 34F2                        l2485 34BA                        l2477 347E  
                      l2469 3446                        l2653 328E                        l2661 32B4  
                      l2645 3246                        l2637 31F0                        l2629 318C  
                      l2581 2F88                        l2573 2F54                        l2565 2F0E  
                      l2557 2EE8                        l2549 2EBC                        l2389 2E6C  
                      l2741 3DCA                        l2733 3DA4                        l2725 3D64  
                      l2821 3762                        l2813 36D0                        l2805 43A8  
                      l2397 453E                        l3189 4484                        l3357 3D0C  
                      l3349 3CD8                        l3199 4650                        l3295 3BDA  
                      l3287 3BA8                        l3279 3B52                        l2495 3500  
                      l2487 34CC                        l2479 348A                        l2663 32B8  
                      l2655 329E                        l2647 325A                        l2639 31FE  
                      l2591 2FE0                        l2583 2F92                        l2575 2F64  
                      l2567 2F1E                        l2559 2EEE                        l2751 3DF2  
                      l2743 3DD4                        l2735 3DB2                        l2727 3D8E  
                      l2719 3D3A                        l2831 384A                        l2823 379E  
                      l2815 36E4                        l2399 454C                        l2911 2176  
                      l2903 2134                        l3359 3D22                        l3297 3BFE  
                      l3289 3BB6                        l2489 34E2                        l2497 3512  
                      l2681 4222                        l2673 41A6                        l2657 32AC  
                      l2649 3274                        l2593 2FEC                        l2585 2FAC  
                      l2569 2F2E                        l2753 3DFE                        l2745 3DDE  
                      l2729 3D90                        l2833 385A                        l2817 36F2  
                      l2825 37D2                        l2809 365A                        l2841 44C6  
                      l2913 217E                        l2905 215A                        l2921 2190  
                      l3299 3C0E                        l2499 3530                        l2683 4246  
                      l2675 41D4                        l2691 3E6E                        l2659 32AE  
                      l2595 2FFA                        l2587 2FB8                        l2579 2F78  
                      l2667 4426                        l2755 3E0E                        l2827 380E  
                      l2843 44C8                        l2771 435A                        l2763 4324  
                      l2931 222A                        l2923 21AA                        l2907 216C  
                      l2861 440E                        l2685 424C                        l2677 41E4  
                      l2693 3E7E                        l2597 300A                        l2589 2FD4  
                      l2669 4436                        l2757 3E1E                        l2781 3FCA  
                      l2829 3822                        l2845 44D6                        l2837 44B0  
                      l2773 4378                        l2765 4332                        l2941 2320  
                      l2933 2268                        l2909 2170                        ?_pad 000E  
                      l2855 43F0                        l2847 43DC                        l2679 4212  
                      l2695 3EAC                        l2599 301A                        l2759 3E2E  
                      l2783 3FD6                        l2775 3F44                        l2839 44BC  
                      l2767 4346                        l2951 23B2                        l2943 2328  
                      l2935 229A                        l2927 21F0                        l2871 2070  
                      l2863 2026                        l2857 43F4                        l2849 43E8  
                      l2697 3EBC                        l2689 3E40                        l2793 4038  
                      l2777 3F64                        l2769 4356                        l2961 23E4  
                      l2953 23BE                        l2937 22D8                        l2929 21F6  
                      l2881 20AE                        l2873 207A                        l2865 203A  
                      l2859 440A                        l2699 3ECA                        l2779 3FA2  
                      l2787 3FE2                        l2971 242C                        l2963 23F2  
                      l2955 23C6                        l2939 22EC                        l2947 2368  
                      l2891 20F6                        l2883 20B6                        l2875 2082  
                      l2867 2048                        l2789 3FF4                        l2797 456E  
                      l2981 2540                        l2973 243C                        l2965 240A  
                      l2957 23CE                        l2949 23A2                        l2893 20FC  
                      l2877 2092                        l2885 20BA                        l2869 204C  
                      l2799 4572                        l2991 25E0                        l2975 2450  
                      l2983 2546                        l2967 241C                        l2959 23D2  
                      l2895 2104                        l2887 20E0                        l2879 20A2  
                      l2993 2612                        l2985 2564                        l2977 24B4  
                      l2969 2424                        l2897 2112                        l2889 20F2  
                      l2995 2622                        l2987 2598                        l2979 250C  
                      l2899 211C                        l2997 2632                        l2989 25CA  
                      l2999 2666                        STR_1 2014                        STR_2 2021  
                      STR_3 2001                        STR_4 2019                        STR_7 201D  
                      u2000 2BB2                        u2001 2BAE                        u2010 2BC0  
                      u2011 2BBC                        u2100 2D1E                        u2020 2BD0  
                      u2101 2D1A                        u2021 2BCC                        u2110 2D2E  
                      u2030 2C02                        u2111 2D2A                        u2031 2BFE  
                      u2200 2E10                        u2120 2D4A                        u2040 2C10  
                      u3000 3782                        u2201 2E0C                        u2121 2D46  
                      u2041 2C0C                        u2210 2E20                        u2130 2D5A  
                      u2050 2C2E                        u3010 379E                        u2211 2E1C  
                      u2131 2D56                        u2051 2C2A                        u3011 379A  
                      u2300 335A                        u2220 2E40                        u2140 2D6A  
                      u2060 2C66                        u3020 37F2                        u3100 20A2  
                      u2301 3356                        u2221 2E3C                        u2141 2D66  
                      u2061 2C62                        u3005 3778                        u3101 209E  
                      _LATA 3FBA                        u2310 336A                        u2230 2E50  
                      u2150 2D80                        u2070 2CAC                        u3030 380E  
                      u3110 20E0                        _LATB 3FBB                        u2311 3366  
                      u2231 2E4C                        u2151 2D7C                        u2071 2CA8  
                      u3031 380A                        u3111 20DC                        _LATC 3FBC  
                      u2400 3520                        u2320 33A8                        u2240 2E6C  
                      u2160 2D96                        u2080 2CE2                        u3040 384A  
                      u3200 239A                        u3120 20F2                        _LATD 3FBD  
                      u2401 351C                        u2321 33A4                        u2241 2E68  
                      u2161 2D92                        u2081 2CDE                        u3041 3846  
                      u3025 37E8                        u3201 2396                        u3121 20EE  
                      u2410 3530                        u2330 33E8                        u2170 2DAA  
                      u2090 2CF2                        u3050 44F0                        u2250 456C  
                      u3210 23B2                        u3130 215A                        u2411 352C  
                      u2331 33E4                        u2171 2DA6                        u2091 2CEE  
                      u3051 44EC                        u2251 4568                        u3211 23AE  
                      u3131 2156                        u3060 440A                        u2420 355E  
                      u2340 345C                        u2260 32E4                        u2500 2EAC  
                      u2180 2DC4                        u3300 270A                        u3220 23E4  
                      u3140 216C                        u3061 4406                        u2421 355A  
                      u2341 3458                        u2261 32E0                        u2501 2EA8  
                      u2181 2DC0                        u3301 2706                        u3221 23E0  
                      u3141 2168                        u3070 4424                        u2430 3574  
                      u2350 347E                        u2270 32F6                        u2510 2EBC  
                      u2190 2DFE                        u3310 27B6                        u3230 23F2  
                      u3150 21DC                        u3071 4420                        u2431 3570  
                      u2351 347A                        u2271 32F2                        u2511 2EB8  
                      u2191 2DFA                        u3311 27B2                        u3231 23EE  
                      u3151 21D8                        u2440 3588                        u2360 34A8  
                      u2280 3306                        u2600 318C                        u2520 2EFC  
                      u3320 27F2                        u3240 241C                        u3160 2268  
                      u3080 2048                        u3400 4072                        u2441 3584  
                      u2361 34A4                        u2281 3302                        u2601 3188  
                      u2521 2EF8                        u3321 27EE                        u3241 2418  
                      u3161 2264                        u3081 2044                        u3401 406E  
                      u2450 35A2                        u2370 34CC                        u2290 3348  
                      u2610 31BA                        u2530 2F0E                        u3330 2800  
                      u3250 2564                        u3170 229A                        u3090 2092  
                      u3410 40F0                        u2451 359E                        u2371 34C8  
                      u2291 3344                        u2611 31B6                        u2531 2F0A  
                      u3331 27FC                        u3251 2560                        u3171 2296  
                      u3091 208E                        u3411 40EC                        u2460 35EA  
                      u2380 34E2                        u2700 4246                        u2620 31D0  
                      u2540 2F1E                        u1900 2A5C                        u1820 410A  
                      u3340 284C                        u3260 25CA                        u3180 22D8  
                      u3420 3894                        u3500 4322                        u2461 35E6  
                      u2381 34DE                        u2701 4242                        u2621 31CC  
                      u2541 2F1A                        u1901 2A58                        u1821 4106  
                      u3341 2848                        u3261 25C6                        u3181 22D4  
                      u3421 3890                        u3501 431E                        u3510 4504  
                      u2470 361A                        u2390 3500                        u2710 3E6E  
                      u2630 31E4                        u2550 2F54                        u1910 2A6E  
                      u1830 411A                        u3350 291A                        u3270 2612  
                      u3190 2364                        u3430 38D6                        u3511 4500  
                      u2471 3616                        u2391 34FC                        u2711 3E6A  
                      u2631 31E0                        u2551 2F50                        u1911 2A6A  
                      u1831 4116                        u3351 2916                        u3271 260E  
                      u3191 2360                        u3431 38D2                        u3600 3C0E  
                      u3520 3A8E                        u2480 3646                        u2720 3EAC  
                      u2640 31FE                        u2560 2F64                        u1920 2A7E  
                      u2800 3DC6                        u1840 4140                        u3360 2936  
                      u3280 2622                        u3440 396A                        u3601 3C0A  
                      u3521 3A8A                        u2481 3642                        u2721 3EA8  
                      u2641 31FA                        u2561 2F60                        u1921 2A7A  
                      u2801 3DC2                        u1841 413C                        u3361 2932  
                      u3281 261E                        u3441 3966                        u3450 427E  
                      u3610 3C1C                        u3530 3A9C                        u2730 3ECA  
                      u2650 3246                        u2570 3102                        u2490 2E9A  
                      u1930 2AB8                        u2810 3DEE                        u1850 4172  
                      u3370 2980                        u3290 26BC                        u3611 3C18  
                      u3531 3A98                        u2731 3EC6                        u2651 3242  
                      u2491 2E96                        u1931 2AB4                        u2811 3DEA  
                      u1851 416E                        u3371 297A                        u3291 26B8  
                      u3460 42B0                        u3540 3AF8                        u2740 3EEA  
                      u2660 3274                        u2580 315C                        u1940 2AC6  
                      u1860 29E4                        u2820 3E0E                        u3380 2982  
                      u3620 3C6E                        u3541 3AF4                        u2741 3EE6  
                      u2661 3270                        u2581 3158                        u1941 2AC2  
                      u1861 29E0                        u2821 3E0A                        u3621 3C6A  
                      u3470 42C0                        u3550 3B4E                        u2750 3F3A  
                      u2670 32AC                        u2590 317C                        u1950 2B32  
                      u1870 29F6                        u2830 3E1E                        u2910 402E  
                      u3390 2996                        u3471 42BC                        u3551 3B4A  
                      u2751 3F36                        u2671 32A8                        u2591 3178  
                      u2575 30F8                        u1951 2B2E                        u1871 29F2  
                      u2831 3E1A                        u2911 4028                        u3391 2992  
                      u3560 3B98                        u2680 41D4                        u2760 45BE  
                      u1960 2B4A                        u1880 2A06                        u2920 4030  
                      u2840 4332                        u3480 44A6                        u3457 4270  
                      u3561 3B94                        u2681 41D0                        u2761 45BA  
                      u1961 2B44                        u1881 2A02                        u2905 4006  
                      u2841 432E                        u3481 44A2                        u3570 3BB6  
                      u2690 4212                        u1970 2B4C                        u1890 2A46  
                      u2770 3D50                        u2850 4378                        u2930 45A6  
                      u3490 42EA                        u3467 42A2                        u3571 3BB2  
                      u2691 420E                        u1891 2A42                        u2771 3D4C  
                      u2851 4374                        u2931 45A2                        u3491 42E6  
                      u3580 3BC6                        u1980 2B74                        u2780 3D84  
                      u2860 3F84                        u2940 4394                        u3581 3BC2  
                      u1981 2B70                        u2941 4390                        u3590 3BD4  
                      u1990 2B92                        u2790 3DB2                        u2870 3FA2  
                      u2950 36A2                        u3591 3BD0                        u1991 2B8E  
                      u2791 3DAE                        u2871 3F9E                        u2880 3FCA  
                      u2960 36D0                        u2785 3D7A                        u2881 3FC6  
                      u2865 3F7A                        u2961 36CC                        u2890 3FF4  
                      u2970 36F2                        u2891 3FF0                        u2971 36EE  
                      u2955 3698                        u2990 375E                        u2991 375A  
                      u2985 3706                        u2986 3710                        u2987 3720  
                      _WPUA 3A41                        _WPUB 3A51                        _data 00BC  
                      _dbuf 006C                        _labs 4386                        _main 3C30  
                      _prec 006A                        pad@i 0013                        pad@p 0010  
                      fsr1h 3FE2                        fsr2h 3FDA                        indf1 3FE7  
                      indf2 3FDF                        fsr1l 3FE1                        fsr2l 3FD9  
          __end_of_ADC_Init 4666               ___fpclassifyf 3F44                        prodh 3FF4  
                      prodl 3FF3                        start FFFC             __end_of_MSdelay 4426  
           ___fldiv@new_exp 0012               _LCD_String_xy 44F2                ___param_bank 0000  
                     ??_pad 0012            __end_of_LCD_Char 46A2            __end_of_LCD_Init 4640  
             ___fltol@sign1 0009                       ?_labs 0001                       _ADCAP 3EF5  
           __end_of___fladd 2E80                       ?_main 0001                       _ADCLK 3EFF  
                     _ADPCH 3EF1             __end_of___fldiv 365A                       _ADREF 3EFD  
           __end_of___flneg 45E0             __end_of___flmul 32CA             __end_of___flsub 446C  
           __end_of___fltol 3E40                       _LATD0 1FDE8                       _LATD1 1FDE9  
              vfpfcnvrt@fmt 003C                       _PORTA 3FCA                       _PORTB 3FCB  
                     _PORTC 3FCC                       _PORTD 3FCD                       _TRISA 3FC2  
                     _TRISB 3FC3                       _TRISC 3FC4                       _TRISD 3FC5  
                     _flags 005D         read_prec_or_width@c 0005         read_prec_or_width@n 0006  
                     _fputc 40FA                       _fputs 4532                       labs@a 0001  
                     pad@fp 000E                       _width 0068                       _putch 46C0  
                     tablat 3FF5                       status 3FD8             __end_of_sprintf 4616  
            ?___fpclassifyf 0001              ?_LCD_String_xy 000A             __initialization 4666  
              __end_of_labs 43DC                __end_of_main 3D3A                      ??_labs 0005  
                    ??_main 0055               __activetblptr 0003  __end_of_read_prec_or_width 40FA  
                    _ADACQH 3EF4                      _ADACQL 3EF3                      ?_fputc 0001  
                    ?_fputs 0009                      _ADRESH 3EF0                      _ADRESL 3EEF  
                    _ADPREH 3EF7                      _ADPREL 3EF6                      _ANSELA 3A40  
                    ?_putch 0001                      _ANSELB 3A50                      _ANSELC 3A60  
                    _ANSELD 3A70            LCD_String_xy@msg 000B            LCD_String_xy@pos 000A  
          LCD_String_xy@row 000D                   ??_MSdelay 0003            __end_of___xxtofl 3C30  
              vfprintf@cfmt 0048                      ___flge 3E40                      ___fleq 41A6  
                 ??___fladd 0009                   ??___fldiv 0009                   ??___flneg 0005  
                 ??___flmul 0017                   ??___flsub 0030                   ??___fltol 0005  
                    _efgtoa 2026                      _floorf 365A                      _memcpy 44B0  
      read_prec_or_width@ap 0002                      clear_0 466C                      clear_1 4678  
                    isa$std 0001                      pad@buf 000F                      _strcat 42C2  
                    _strcpy 456E                      fputc@c 0001                      fputs@c 000B  
                    fputs@i 000C                      fputs@s 0009             ___fpclassifyf@e 0009  
                 ?_ADC_Init 0001             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 2000                      tblptrh 3FF7                      tblptrl 3FF6  
                    tblptru 3FF8                      putch@c 0001            __end_of_vfprintf 44B0  
                 ??_sprintf 0049                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                 ?_LCD_Char 0001                  __accesstop 0060     __end_of__initialization 467E  
                 ?_LCD_Init 0001             ??_LCD_String_xy 000D                  ___flneg@f1 0001  
             ___rparam_used 0001                  ___fltol@f1 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 41A6               __end_of_fputs 456E               __end_of_putch 46C2  
              ??_LCD_String 000A                  ??_ADC_Init 0001                     ??_fputc 0004  
                   ??_fputs 000B                     ??_putch 0001                  __pbssBANK0 0060  
                ??_LCD_Char 0007                  ??_LCD_Init 0008          __end_of_LCD_String 42C2  
                _efgtoa$813 00CC                     ?___flge 0028                     ?___fleq 0001  
                   ?_efgtoa 0034                     ?_floorf 001A                     ?_memcpy 0001  
                   ?_strcat 0001                     ?_strcpy 0001                   ?___xxtofl 0001  
                   _MSdelay 43DC               LCD_String@msg 0008                     __Hparam 0000  
                   __Lparam 0000                     ___fladd 29CA                     ___fldiv 32CA  
                   ___flneg 45A8                     ___flmul 2E80                     ___flsub 4426  
                   ___fltol 3D3A                   ?_vfprintf 0045                __psmallconst 2000  
                   __pcinit 4666                     __ramtop 2000                     _digital 005B  
                   __ptext0 3C30                     __ptext1 42C2                     __ptext2 45E0  
                   __ptext3 446C                     __ptext4 386C                     __ptext5 4042  
                   __ptext6 2026                     __ptext7 456E                     __ptext8 4324  
                   __ptext9 4532       read_prec_or_width@fmt 0001                  ??___xxtofl 0005  
                   efgtoa@c 0039                     efgtoa@d 00D1                     efgtoa@e 00D5  
                   efgtoa@f 0035                     efgtoa@g 00EA                     efgtoa@h 00DF  
                   efgtoa@i 00DD                     efgtoa@l 00E3                     efgtoa@m 00D3  
                   efgtoa@n 00E8                     efgtoa@p 00C8                     efgtoa@t 00CA  
                   efgtoa@u 00EE                     efgtoa@w 00D7                     _sprintf 45E0  
                   _voltage 0057        end_of_initialization 467E                     floorf@e 0028  
                   floorf@m 0024                     floorf@u 002A                     floorf@x 001A  
                   memcpy@d 0006                     memcpy@n 0003                     memcpy@s 0007  
                   fputc@fp 0003              LCD_Command@cmd 0007                     fputs@fp 000A  
        _read_prec_or_width 4042           __end_of_vfpfcnvrt 3A7C                  efgtoa@mode 00CF  
                efgtoa@sign 00E7                     postdec2 3FDD         ?_read_prec_or_width 0001  
                   postinc0 3FEE                     postinc1 3FE6                     postinc2 3FDE  
          vfpfcnvrt@convarg 003F                  ??_vfprintf 0048                     strcat@i 0003  
                   strcpy@d 0004                 ___fladd@grs 0010               ___xxtofl@sign 0009  
                 _TRISAbits 3FC2        ??_read_prec_or_width 0003                 ___fldiv@grs 0014  
               ___fldiv@rem 000D                 ___flmul@grs 001C               ??_LCD_Command 0007  
            __end_of___flge 3F44              __end_of___fleq 4250                 vfpfcnvrt@ap 003D  
               vfpfcnvrt@cp 0044                 vfpfcnvrt@fp 003B              __end_of_efgtoa 29CA  
            __end_of_floorf 386C              __end_of_memcpy 44F2                  floorf@F521 0060  
            __end_of_strcat 4324              __end_of_strcpy 45A8         start_initialization 4666  
               __end_of_pad 4386       __end_of___fpclassifyf 4042       __end_of_LCD_String_xy 4532  
               vfprintf@fmt 0046                    ??___flge 0030                    ??___fleq 0009  
                  ??_efgtoa 003A                    ??_floorf 001E                    ??_memcpy 0005  
                  ??_strcat 0003                    ??_strcpy 0003                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0005                   ___fldiv@b 0001  
       __end_of_LCD_Command 46C0                   ___flmul@a 0013                   ___flmul@b 000F  
               __pbssCOMRAM 0057                   ___flsub@a 002C                   ___flsub@b 0028  
             __pcstackBANK0 00C6                    ?_MSdelay 0001                    ?___fladd 0001  
                  ?___fldiv 0001                    ?___flneg 0001                    ?___flmul 000F  
                  ?___flsub 0028                    ?___fltol 0001                 __smallconst 2000  
                  _ADC_Init 4640       LCD_String_xy@location 000E                    ?_sprintf 00F2  
                  MSdelay@i 0003                    MSdelay@j 0005                    _LCD_Char 4684  
                  _LCD_Init 4616                 _LCD_Command 46A2                   _vfpfcnvrt 386C  
                _ADCON0bits 3EF8                  vfpfcnvrt@c 0043                    __Hrparam 0000  
                 memcpy@tmp 0005                  vfprintf@ap 0047                    __Lrparam 0000  
                vfprintf@fp 0045                  ?_vfpfcnvrt 003B                  _ANSELAbits 3A40  
        ___fpclassifyf@F465 0064                  sprintf@fmt 00F3                    ___xxtofl 3A7C  
                strcat@dest 0001                    __ptext10 40FA                    __ptext11 46C0  
                  __ptext20 2E80                    __ptext12 44B0                    __ptext21 3E40  
                  __ptext13 4386                    __ptext30 43DC                    __ptext22 41A6  
                  __ptext14 365A                    __ptext31 4640                    __ptext23 32CA  
                  __ptext15 3F44                    __ptext24 3A7C                    __ptext16 3D3A  
                  __ptext25 44F2                    __ptext17 4426                    __ptext26 4250  
                  __ptext18 29CA                    __ptext27 4684                    __ptext19 45A8  
                  __ptext28 4616                    __ptext29 46A2                  strcpy@dest 0001  
                MSdelay@val 0001                    efgtoa@fp 0034                    efgtoa@ne 00C6  
                  efgtoa@pp 00CE                    efgtoa@ou 00D9                    isa$xinst 0000  
                  _vfprintf 446C                  _LCD_String 4250                    memcpy@d1 0001  
                  memcpy@s1 0002                   sprintf@ap 0049                   strcat@src 0002  
                 strcpy@src 0002                 efgtoa@nmode 00D0                 ??_vfpfcnvrt 003E  
                  sprintf@f 004A                    sprintf@s 00F2               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F  
